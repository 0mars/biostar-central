# Generated by Django 2.0.8 on 2018-10-13 15:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('site_id', models.CharField(max_length=256, unique=True)),
                ('latitude', models.DecimalField(decimal_places=12, max_digits=20, null=True)),
                ('logitude', models.DecimalField(decimal_places=12, max_digits=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='QPCRExperiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('barcode', models.CharField(max_length=256, unique=True)),
                ('target_name', models.CharField(max_length=256, null=True)),
                ('instrument_serial_number', models.IntegerField()),
                ('instrument_type', models.CharField(max_length=256)),
                ('user', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='QPCRMeasurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=256)),
                ('ct', models.DecimalField(decimal_places=12, max_digits=20, null=True)),
                ('ct_mean', models.FloatField(max_length=256, null=True)),
                ('ct_sd', models.FloatField(max_length=256, null=True)),
                ('quantity', models.DecimalField(decimal_places=12, max_digits=20, null=True)),
                ('quantity_mean', models.DecimalField(decimal_places=12, max_digits=20, null=True)),
                ('quantity_sd', models.DecimalField(decimal_places=12, max_digits=20, null=True)),
                ('automatic_ct_threshold', models.BooleanField(default=False)),
                ('ct_threshold', models.DecimalField(decimal_places=12, max_digits=20, null=True)),
                ('automatic_baseline', models.BooleanField(default=False)),
                ('baseline_start', models.IntegerField(null=True)),
                ('baseline_end', models.IntegerField(null=True)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='codes.QPCRExperiment')),
            ],
        ),
        migrations.CreateModel(
            name='QPCRSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_id', models.CharField(max_length=256, unique=True)),
                ('type', models.CharField(max_length=256)),
                ('date', models.DateField(null=True)),
                ('time', models.TimeField(null=True)),
                ('nfilters', models.IntegerField(null=True)),
                ('filters', models.CharField(max_length=256, null=True)),
                ('total_volume', models.IntegerField(null=True)),
                ('extraction_date', models.DateField(null=True)),
                ('elution_volume', models.IntegerField(null=True)),
                ('pcr_template_volume', models.IntegerField(null=True)),
                ('pcr_concentration', models.IntegerField(null=True)),
                ('water_temp', models.FloatField(max_length=256, null=True)),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='codes.Location')),
            ],
        ),
        migrations.AddField(
            model_name='qpcrmeasurement',
            name='sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='codes.QPCRSample'),
        ),
        migrations.AddField(
            model_name='qpcrexperiment',
            name='samples',
            field=models.ManyToManyField(related_name='samples', to='codes.QPCRSample'),
        ),
    ]
