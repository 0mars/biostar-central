[{"pk": 1, "model": "auth.user", "fields": {"username": "no.me@nowhere.com0", "first_name": "Community", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 2, "model": "auth.user", "fields": {"username": "no.me@nowhere.com1", "first_name": "Istvan Albert", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 3, "model": "auth.user", "fields": {"username": "no.me@nowhere.com2", "first_name": "Fabio", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 4, "model": "auth.user", "fields": {"username": "no.me@nowhere.com3", "first_name": "Jason", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 5, "model": "auth.user", "fields": {"username": "no.me@nowhere.com4", "first_name": "Zhenhai Zhang", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 6, "model": "auth.user", "fields": {"username": "no.me@nowhere.com5", "first_name": "Tom Koerber", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 7, "model": "auth.user", "fields": {"username": "no.me@nowhere.com6", "first_name": "suk211", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 8, "model": "auth.user", "fields": {"username": "no.me@nowhere.com7", "first_name": "lemon", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 9, "model": "auth.user", "fields": {"username": "no.me@nowhere.com8", "first_name": "Wubin Qu", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 10, "model": "auth.user", "fields": {"username": "no.me@nowhere.com9", "first_name": "Question Bot", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 11, "model": "auth.user", "fields": {"username": "no.me@nowhere.com10", "first_name": "Reka Albert", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 12, "model": "auth.user", "fields": {"username": "no.me@nowhere.com11", "first_name": "Yang Yang", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 13, "model": "auth.user", "fields": {"username": "no.me@nowhere.com12", "first_name": "Gue Su Chang", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 14, "model": "auth.user", "fields": {"username": "no.me@nowhere.com13", "first_name": "Zhaorong", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 15, "model": "auth.user", "fields": {"username": "no.me@nowhere.com14", "first_name": "nickey", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 16, "model": "auth.user", "fields": {"username": "no.me@nowhere.com15", "first_name": "Renee", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 17, "model": "auth.user", "fields": {"username": "no.me@nowhere.com16", "first_name": "Yu", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 18, "model": "auth.user", "fields": {"username": "no.me@nowhere.com17", "first_name": "Gue Su", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 19, "model": "auth.user", "fields": {"username": "no.me@nowhere.com18", "first_name": "Mohammed Islaih", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 20, "model": "auth.user", "fields": {"username": "no.me@nowhere.com19", "first_name": "Alex Reynolds", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 21, "model": "auth.user", "fields": {"username": "2120", "first_name": "User 21", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 22, "model": "auth.user", "fields": {"username": "2221", "first_name": "User 22", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 23, "model": "auth.user", "fields": {"username": "no.me@nowhere.com22", "first_name": "giovanni", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 24, "model": "auth.user", "fields": {"username": "no.me@nowhere.com23", "first_name": "etal", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 25, "model": "auth.user", "fields": {"username": "no.me@nowhere.com24", "first_name": "Fabio", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 26, "model": "auth.user", "fields": {"username": "no.me@nowhere.com25", "first_name": "Nicojo", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 27, "model": "auth.user", "fields": {"username": "no.me@nowhere.com26", "first_name": "Allen Yu", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 28, "model": "auth.user", "fields": {"username": "no.me@nowhere.com27", "first_name": "Curious George", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 29, "model": "auth.user", "fields": {"username": "2928", "first_name": "User 29", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 30, "model": "auth.user", "fields": {"username": "no.me@nowhere.com29", "first_name": "Pierre Lindenbaum", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 31, "model": "auth.user", "fields": {"username": "no.me@nowhere.com30", "first_name": "Marcos de Carvalho", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 32, "model": "auth.user", "fields": {"username": "no.me@nowhere.com31", "first_name": "Gustavo Costa", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 33, "model": "auth.user", "fields": {"username": "3332", "first_name": "User 33", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 34, "model": "auth.user", "fields": {"username": "no.me@nowhere.com33", "first_name": "Paul J. Davis", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 35, "model": "auth.user", "fields": {"username": "no.me@nowhere.com34", "first_name": "David Nusinow", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 36, "model": "auth.user", "fields": {"username": "no.me@nowhere.com35", "first_name": "brentp", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 37, "model": "auth.user", "fields": {"username": "no.me@nowhere.com36", "first_name": "razor", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 38, "model": "auth.user", "fields": {"username": "no.me@nowhere.com37", "first_name": "Simon Cockell", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 39, "model": "auth.user", "fields": {"username": "no.me@nowhere.com38", "first_name": "konrad", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 40, "model": "auth.user", "fields": {"username": "no.me@nowhere.com39", "first_name": "biorelated", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 41, "model": "auth.user", "fields": {"username": "no.me@nowhere.com40", "first_name": "Yann Abraham", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 42, "model": "auth.user", "fields": {"username": "no.me@nowhere.com41", "first_name": "Fernando Mu\u00f1iz", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 43, "model": "auth.user", "fields": {"username": "4342", "first_name": "User 43", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 44, "model": "auth.user", "fields": {"username": "no.me@nowhere.com43", "first_name": "andrew", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 45, "model": "auth.user", "fields": {"username": "no.me@nowhere.com44", "first_name": "Alex", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 46, "model": "auth.user", "fields": {"username": "no.me@nowhere.com45", "first_name": "Owen", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 47, "model": "auth.user", "fields": {"username": "no.me@nowhere.com46", "first_name": "Chris", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 48, "model": "auth.user", "fields": {"username": "no.me@nowhere.com47", "first_name": "Kelly O.", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 49, "model": "auth.user", "fields": {"username": "4948", "first_name": "User 49", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 50, "model": "auth.user", "fields": {"username": "no.me@nowhere.com49", "first_name": "Greg", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 51, "model": "auth.user", "fields": {"username": "no.me@nowhere.com50", "first_name": "pedrobeltrao", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 52, "model": "auth.user", "fields": {"username": "5251", "first_name": "User 52", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 53, "model": "auth.user", "fields": {"username": "no.me@nowhere.com52", "first_name": "Michael Barton", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 54, "model": "auth.user", "fields": {"username": "5453", "first_name": "User 54", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 55, "model": "auth.user", "fields": {"username": "no.me@nowhere.com54", "first_name": "Michael Dondrup", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 56, "model": "auth.user", "fields": {"username": "no.me@nowhere.com55", "first_name": "Brad Chapman", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 57, "model": "auth.user", "fields": {"username": "no.me@nowhere.com56", "first_name": "paulati", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 58, "model": "auth.user", "fields": {"username": "no.me@nowhere.com57", "first_name": "Dave Bridges", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 59, "model": "auth.user", "fields": {"username": "no.me@nowhere.com58", "first_name": "Daniel Swan", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 60, "model": "auth.user", "fields": {"username": "no.me@nowhere.com59", "first_name": "lukfor", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 61, "model": "auth.user", "fields": {"username": "no.me@nowhere.com60", "first_name": "Chris Fields", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 62, "model": "auth.user", "fields": {"username": "no.me@nowhere.com61", "first_name": "darked89", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 63, "model": "auth.user", "fields": {"username": "no.me@nowhere.com62", "first_name": "lmartinho", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 64, "model": "auth.user", "fields": {"username": "no.me@nowhere.com63", "first_name": "Manuel Corpas", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 65, "model": "auth.user", "fields": {"username": "no.me@nowhere.com64", "first_name": "Abhishek Tiwari", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 66, "model": "auth.user", "fields": {"username": "no.me@nowhere.com65", "first_name": "neilfws", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 67, "model": "auth.user", "fields": {"username": "no.me@nowhere.com66", "first_name": "Piotr Byzia", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 68, "model": "auth.user", "fields": {"username": "no.me@nowhere.com67", "first_name": "Jeroen Van Goey", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 69, "model": "auth.user", "fields": {"username": "no.me@nowhere.com68", "first_name": "Vince", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 70, "model": "auth.user", "fields": {"username": "no.me@nowhere.com69", "first_name": "Tom Walsh", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 71, "model": "auth.user", "fields": {"username": "no.me@nowhere.com70", "first_name": "Egon Willighagen", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 72, "model": "auth.user", "fields": {"username": "no.me@nowhere.com71", "first_name": "mndoci", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 73, "model": "auth.user", "fields": {"username": "no.me@nowhere.com72", "first_name": "Jeremy Leipzig", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 74, "model": "auth.user", "fields": {"username": "no.me@nowhere.com73", "first_name": "mmarchin", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 75, "model": "auth.user", "fields": {"username": "no.me@nowhere.com74", "first_name": "Paolo", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 76, "model": "auth.user", "fields": {"username": "no.me@nowhere.com75", "first_name": "Andrew", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 77, "model": "auth.user", "fields": {"username": "no.me@nowhere.com76", "first_name": "Eleanor Howe", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 78, "model": "auth.user", "fields": {"username": "no.me@nowhere.com77", "first_name": "JBoveda", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 79, "model": "auth.user", "fields": {"username": "no.me@nowhere.com78", "first_name": "Tim", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 80, "model": "auth.user", "fields": {"username": "no.me@nowhere.com79", "first_name": "Daniel Jurczak", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 81, "model": "auth.user", "fields": {"username": "8180", "first_name": "User 81", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 82, "model": "auth.user", "fields": {"username": "no.me@nowhere.com81", "first_name": "geoffjentry", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 83, "model": "auth.user", "fields": {"username": "8382", "first_name": "User 83", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 84, "model": "auth.user", "fields": {"username": "no.me@nowhere.com83", "first_name": "anshu", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 85, "model": "auth.user", "fields": {"username": "no.me@nowhere.com84", "first_name": "Bryan Maloney", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 86, "model": "auth.user", "fields": {"username": "no.me@nowhere.com85", "first_name": "Andrew Su", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 87, "model": "auth.user", "fields": {"username": "no.me@nowhere.com86", "first_name": "Khader Shameer", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 88, "model": "auth.user", "fields": {"username": "no.me@nowhere.com87", "first_name": "Pierre", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 89, "model": "auth.user", "fields": {"username": "no.me@nowhere.com88", "first_name": "Yuri", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 90, "model": "auth.user", "fields": {"username": "no.me@nowhere.com89", "first_name": "allPowerde", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 91, "model": "auth.user", "fields": {"username": "9190", "first_name": "User 91", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 92, "model": "auth.user", "fields": {"username": "no.me@nowhere.com91", "first_name": "Perry", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 93, "model": "auth.user", "fields": {"username": "9392", "first_name": "User 93", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 94, "model": "auth.user", "fields": {"username": "no.me@nowhere.com93", "first_name": "Nir London", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 95, "model": "auth.user", "fields": {"username": "no.me@nowhere.com94", "first_name": "BioInfo", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 96, "model": "auth.user", "fields": {"username": "no.me@nowhere.com95", "first_name": "JC", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 97, "model": "auth.user", "fields": {"username": "no.me@nowhere.com96", "first_name": "Michael Hoffman", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 98, "model": "auth.user", "fields": {"username": "no.me@nowhere.com97", "first_name": "Nancy Parmalee", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 99, "model": "auth.user", "fields": {"username": "no.me@nowhere.com98", "first_name": "avilella", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 100, "model": "auth.user", "fields": {"username": "no.me@nowhere.com99", "first_name": "Ryan", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 101, "model": "auth.user", "fields": {"username": "no.me@nowhere.com100", "first_name": "ruphos", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 102, "model": "auth.user", "fields": {"username": "no.me@nowhere.com101", "first_name": "John Davey", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 103, "model": "auth.user", "fields": {"username": "no.me@nowhere.com102", "first_name": "hongiiv", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 104, "model": "auth.user", "fields": {"username": "no.me@nowhere.com103", "first_name": "mfenner", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 105, "model": "auth.user", "fields": {"username": "no.me@nowhere.com104", "first_name": "User 105", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 106, "model": "auth.user", "fields": {"username": "no.me@nowhere.com105", "first_name": "Sujai Kumar", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 107, "model": "auth.user", "fields": {"username": "107106", "first_name": "User 107", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 108, "model": "auth.user", "fields": {"username": "no.me@nowhere.com107", "first_name": "Konrad", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 109, "model": "auth.user", "fields": {"username": "109108", "first_name": "User 109", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 110, "model": "auth.user", "fields": {"username": "no.me@nowhere.com109", "first_name": "Sashikiran Challa", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 111, "model": "auth.user", "fields": {"username": "111110", "first_name": "User 111", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 112, "model": "auth.user", "fields": {"username": "no.me@nowhere.com111", "first_name": "Walter Jessen", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 113, "model": "auth.user", "fields": {"username": "no.me@nowhere.com112", "first_name": "jmanning2k", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 114, "model": "auth.user", "fields": {"username": "no.me@nowhere.com113", "first_name": "gotgenes", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 115, "model": "auth.user", "fields": {"username": "no.me@nowhere.com114", "first_name": "Jan van Haarst", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 116, "model": "auth.user", "fields": {"username": "no.me@nowhere.com115", "first_name": "Melanie", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 117, "model": "auth.user", "fields": {"username": "no.me@nowhere.com116", "first_name": "Chris Miller", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 118, "model": "auth.user", "fields": {"username": "no.me@nowhere.com117", "first_name": "enlavin", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 119, "model": "auth.user", "fields": {"username": "no.me@nowhere.com118", "first_name": "PhiS", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 120, "model": "auth.user", "fields": {"username": "no.me@nowhere.com119", "first_name": "CassJ", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 121, "model": "auth.user", "fields": {"username": "no.me@nowhere.com120", "first_name": "John", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 122, "model": "auth.user", "fields": {"username": "no.me@nowhere.com121", "first_name": "Will", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 123, "model": "auth.user", "fields": {"username": "no.me@nowhere.com122", "first_name": "Charles E. Grant", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 124, "model": "auth.user", "fields": {"username": "no.me@nowhere.com123", "first_name": "Alex", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 125, "model": "auth.user", "fields": {"username": "no.me@nowhere.com124", "first_name": "Tal Galili", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 126, "model": "auth.user", "fields": {"username": "no.me@nowhere.com125", "first_name": "Matt Parker", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:56", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:56"}}, {"pk": 127, "model": "auth.user", "fields": {"username": "no.me@nowhere.com126", "first_name": "nuin", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 128, "model": "auth.user", "fields": {"username": "no.me@nowhere.com127", "first_name": "rvidal", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 129, "model": "auth.user", "fields": {"username": "no.me@nowhere.com128", "first_name": "Andriyev", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 130, "model": "auth.user", "fields": {"username": "130129", "first_name": "User 130", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 131, "model": "auth.user", "fields": {"username": "no.me@nowhere.com130", "first_name": "Rajarshi Guha", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 132, "model": "auth.user", "fields": {"username": "no.me@nowhere.com131", "first_name": "pogonomyrmex", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 133, "model": "auth.user", "fields": {"username": "no.me@nowhere.com132", "first_name": "Keith", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 134, "model": "auth.user", "fields": {"username": "no.me@nowhere.com133", "first_name": "Ben Blackburne", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 135, "model": "auth.user", "fields": {"username": "no.me@nowhere.com134", "first_name": "MarkF", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 136, "model": "auth.user", "fields": {"username": "no.me@nowhere.com135", "first_name": "brandstaetter", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 137, "model": "auth.user", "fields": {"username": "no.me@nowhere.com136", "first_name": "othercriteria", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 138, "model": "auth.user", "fields": {"username": "no.me@nowhere.com137", "first_name": "Marcin Cieslik", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 139, "model": "auth.user", "fields": {"username": "139138", "first_name": "User 139", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 140, "model": "auth.user", "fields": {"username": "no.me@nowhere.com139", "first_name": "fergycool", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 141, "model": "auth.user", "fields": {"username": "no.me@nowhere.com140", "first_name": "Yannick Wurm", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 142, "model": "auth.user", "fields": {"username": "no.me@nowhere.com141", "first_name": "Fred FLECHE", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 143, "model": "auth.user", "fields": {"username": "no.me@nowhere.com142", "first_name": "User 143", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 144, "model": "auth.user", "fields": {"username": "144143", "first_name": "User 144", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 145, "model": "auth.user", "fields": {"username": "no.me@nowhere.com144", "first_name": "Oli", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 146, "model": "auth.user", "fields": {"username": "no.me@nowhere.com145", "first_name": "Peter", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 147, "model": "auth.user", "fields": {"username": "no.me@nowhere.com146", "first_name": "User 147", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 148, "model": "auth.user", "fields": {"username": "no.me@nowhere.com147", "first_name": "Jarretinha", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 149, "model": "auth.user", "fields": {"username": "no.me@nowhere.com148", "first_name": "Ewan Birney", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 150, "model": "auth.user", "fields": {"username": "150149", "first_name": "User 150", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 151, "model": "auth.user", "fields": {"username": "no.me@nowhere.com150", "first_name": "Jelle", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 152, "model": "auth.user", "fields": {"username": "no.me@nowhere.com151", "first_name": "robsyme", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 153, "model": "auth.user", "fields": {"username": "no.me@nowhere.com152", "first_name": "Xtof", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 154, "model": "auth.user", "fields": {"username": "no.me@nowhere.com153", "first_name": "Kirsley", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 155, "model": "auth.user", "fields": {"username": "155154", "first_name": "User 155", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 156, "model": "auth.user", "fields": {"username": "156155", "first_name": "User 156", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 157, "model": "auth.user", "fields": {"username": "no.me@nowhere.com156", "first_name": "Magali Michaut", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 158, "model": "auth.user", "fields": {"username": "158157", "first_name": "User 158", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 159, "model": "auth.user", "fields": {"username": "no.me@nowhere.com158", "first_name": "Fred", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 160, "model": "auth.user", "fields": {"username": "no.me@nowhere.com159", "first_name": "Dave Gerrard", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 161, "model": "auth.user", "fields": {"username": "no.me@nowhere.com160", "first_name": "Antony", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 162, "model": "auth.user", "fields": {"username": "no.me@nowhere.com161", "first_name": "dooguy", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 163, "model": "auth.user", "fields": {"username": "no.me@nowhere.com162", "first_name": "handstad", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 164, "model": "auth.user", "fields": {"username": "no.me@nowhere.com163", "first_name": "Roderic Page", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 165, "model": "auth.user", "fields": {"username": "165164", "first_name": "User 165", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 166, "model": "auth.user", "fields": {"username": "no.me@nowhere.com165", "first_name": "Joseph Hughes", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 167, "model": "auth.user", "fields": {"username": "no.me@nowhere.com166", "first_name": "DavidOSomething", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 168, "model": "auth.user", "fields": {"username": "no.me@nowhere.com167", "first_name": "kraut", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 169, "model": "auth.user", "fields": {"username": "no.me@nowhere.com168", "first_name": "Ian Simpson", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 170, "model": "auth.user", "fields": {"username": "170169", "first_name": "User 170", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 171, "model": "auth.user", "fields": {"username": "no.me@nowhere.com170", "first_name": "Jan Oosting", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 172, "model": "auth.user", "fields": {"username": "no.me@nowhere.com171", "first_name": "Simon Penel", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 173, "model": "auth.user", "fields": {"username": "no.me@nowhere.com172", "first_name": "Leo Goodstadt", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 174, "model": "auth.user", "fields": {"username": "no.me@nowhere.com173", "first_name": "Tom", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 175, "model": "auth.user", "fields": {"username": "175174", "first_name": "User 175", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 176, "model": "auth.user", "fields": {"username": "no.me@nowhere.com175", "first_name": "noyk", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 177, "model": "auth.user", "fields": {"username": "no.me@nowhere.com176", "first_name": "bertrand", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 178, "model": "auth.user", "fields": {"username": "no.me@nowhere.com177", "first_name": "Charles", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 179, "model": "auth.user", "fields": {"username": "no.me@nowhere.com178", "first_name": "Scott", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 180, "model": "auth.user", "fields": {"username": "no.me@nowhere.com179", "first_name": "Rutger Vos", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 181, "model": "auth.user", "fields": {"username": "no.me@nowhere.com180", "first_name": "jackem", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 182, "model": "auth.user", "fields": {"username": "no.me@nowhere.com181", "first_name": "alexis.g", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 183, "model": "auth.user", "fields": {"username": "no.me@nowhere.com182", "first_name": "mt", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 184, "model": "auth.user", "fields": {"username": "no.me@nowhere.com183", "first_name": "Bosco Ho", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 185, "model": "auth.user", "fields": {"username": "no.me@nowhere.com184", "first_name": "noyk", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 186, "model": "auth.user", "fields": {"username": "no.me@nowhere.com185", "first_name": "Emmanuelle Morin", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 187, "model": "auth.user", "fields": {"username": "no.me@nowhere.com186", "first_name": "panos", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 188, "model": "auth.user", "fields": {"username": "no.me@nowhere.com187", "first_name": "Kristian Rother", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 189, "model": "auth.user", "fields": {"username": "no.me@nowhere.com188", "first_name": "Colin", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 190, "model": "auth.user", "fields": {"username": "190189", "first_name": "User 190", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 191, "model": "auth.user", "fields": {"username": "no.me@nowhere.com190", "first_name": "seidel", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 192, "model": "auth.user", "fields": {"username": "no.me@nowhere.com191", "first_name": "selflessGene", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 193, "model": "auth.user", "fields": {"username": "no.me@nowhere.com192", "first_name": "Burke Squires", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 194, "model": "auth.user", "fields": {"username": "no.me@nowhere.com193", "first_name": "Jeff  Kiefer", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 195, "model": "auth.user", "fields": {"username": "no.me@nowhere.com194", "first_name": "Gregor Rot", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 196, "model": "auth.user", "fields": {"username": "no.me@nowhere.com195", "first_name": "swapnil", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 197, "model": "auth.user", "fields": {"username": "no.me@nowhere.com196", "first_name": "Jess", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 198, "model": "auth.user", "fields": {"username": "no.me@nowhere.com197", "first_name": "SB3", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 199, "model": "auth.user", "fields": {"username": "no.me@nowhere.com198", "first_name": "tony", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 200, "model": "auth.user", "fields": {"username": "200199", "first_name": "User 200", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 201, "model": "auth.user", "fields": {"username": "no.me@nowhere.com200", "first_name": "susan", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 202, "model": "auth.user", "fields": {"username": "no.me@nowhere.com201", "first_name": "Darren Wilkinson", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 203, "model": "auth.user", "fields": {"username": "no.me@nowhere.com202", "first_name": "Adrian ", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 204, "model": "auth.user", "fields": {"username": "no.me@nowhere.com203", "first_name": "Cedric Dalmasso", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 205, "model": "auth.user", "fields": {"username": "no.me@nowhere.com204", "first_name": "bilouweb", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 206, "model": "auth.user", "fields": {"username": "no.me@nowhere.com205", "first_name": "ma_ko", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 207, "model": "auth.user", "fields": {"username": "207206", "first_name": "User 207", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 208, "model": "auth.user", "fields": {"username": "no.me@nowhere.com207", "first_name": "Anthony Kong", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 209, "model": "auth.user", "fields": {"username": "no.me@nowhere.com208", "first_name": "Vincent", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 210, "model": "auth.user", "fields": {"username": "no.me@nowhere.com209", "first_name": "Taveren", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 211, "model": "auth.user", "fields": {"username": "no.me@nowhere.com210", "first_name": "Blackbox", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 212, "model": "auth.user", "fields": {"username": "no.me@nowhere.com211", "first_name": "dma_k", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 213, "model": "auth.user", "fields": {"username": "no.me@nowhere.com212", "first_name": "pansapiens", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 214, "model": "auth.user", "fields": {"username": "no.me@nowhere.com213", "first_name": "Rob", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 215, "model": "auth.user", "fields": {"username": "no.me@nowhere.com214", "first_name": "noyk", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 216, "model": "auth.user", "fields": {"username": "no.me@nowhere.com215", "first_name": "Eric Normandeau", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 217, "model": "auth.user", "fields": {"username": "no.me@nowhere.com216", "first_name": "Louis Letourneau", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 218, "model": "auth.user", "fields": {"username": "no.me@nowhere.com217", "first_name": "Stew", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 219, "model": "auth.user", "fields": {"username": "219218", "first_name": "User 219", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 220, "model": "auth.user", "fields": {"username": "no.me@nowhere.com219", "first_name": "Ljxue", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 221, "model": "auth.user", "fields": {"username": "no.me@nowhere.com220", "first_name": "Mehraj", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 222, "model": "auth.user", "fields": {"username": "223221", "first_name": "User 223", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 223, "model": "auth.user", "fields": {"username": "no.me@nowhere.com222", "first_name": "Nico", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 224, "model": "auth.user", "fields": {"username": "no.me@nowhere.com223", "first_name": "Fr\u00e9d\u00e9ric Mah\u00e9", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 225, "model": "auth.user", "fields": {"username": "no.me@nowhere.com224", "first_name": "BioCh'ti", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 226, "model": "auth.user", "fields": {"username": "no.me@nowhere.com225", "first_name": "Dave Lunt", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 227, "model": "auth.user", "fields": {"username": "228226", "first_name": "User 228", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 228, "model": "auth.user", "fields": {"username": "229227", "first_name": "User 229", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 229, "model": "auth.user", "fields": {"username": "230228", "first_name": "User 230", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 230, "model": "auth.user", "fields": {"username": "no.me@nowhere.com229", "first_name": "ratonfilo", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 231, "model": "auth.user", "fields": {"username": "232230", "first_name": "User 232", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 232, "model": "auth.user", "fields": {"username": "no.me@nowhere.com231", "first_name": "Jason Winget", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 233, "model": "auth.user", "fields": {"username": "no.me@nowhere.com232", "first_name": "yvan", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 234, "model": "auth.user", "fields": {"username": "no.me@nowhere.com233", "first_name": "Michael Kuhn", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 235, "model": "auth.user", "fields": {"username": "no.me@nowhere.com234", "first_name": "Nathan Harmston", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 236, "model": "auth.user", "fields": {"username": "no.me@nowhere.com235", "first_name": "Asen Nenov", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 237, "model": "auth.user", "fields": {"username": "no.me@nowhere.com236", "first_name": "alexa", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 238, "model": "auth.user", "fields": {"username": "no.me@nowhere.com237", "first_name": "stedy", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 239, "model": "auth.user", "fields": {"username": "240238", "first_name": "User 240", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-03-31 21:35:57", "groups": [], "user_permissions": [], "password": "", "email": "", "date_joined": "2011-03-31 21:35:57"}}, {"pk": 1, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 1, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 2, "model": "server.userprofile", "fields": {"json": "", "score": 970, "creation_date": "2011-03-31 21:35:56", "user": 2, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 3, "model": "server.userprofile", "fields": {"json": "", "score": 30, "creation_date": "2011-03-31 21:35:56", "user": 3, "last_visited": "2011-03-31 21:36:02"}}, {"pk": 4, "model": "server.userprofile", "fields": {"json": "", "score": 70, "creation_date": "2011-03-31 21:35:56", "user": 4, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 5, "model": "server.userprofile", "fields": {"json": "", "score": 40, "creation_date": "2011-03-31 21:35:56", "user": 5, "last_visited": "2011-03-31 21:36:03"}}, {"pk": 6, "model": "server.userprofile", "fields": {"json": "", "score": 30, "creation_date": "2011-03-31 21:35:56", "user": 6, "last_visited": "2011-03-31 21:36:01"}}, {"pk": 7, "model": "server.userprofile", "fields": {"json": "", "score": 256, "creation_date": "2011-03-31 21:35:56", "user": 7, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 8, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 8, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 9, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 9, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 10, "model": "server.userprofile", "fields": {"json": "", "score": 258, "creation_date": "2011-03-31 21:35:56", "user": 10, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 11, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 11, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 12, "model": "server.userprofile", "fields": {"json": "", "score": 10, "creation_date": "2011-03-31 21:35:56", "user": 12, "last_visited": "2011-03-31 21:36:01"}}, {"pk": 13, "model": "server.userprofile", "fields": {"json": "", "score": 20, "creation_date": "2011-03-31 21:35:56", "user": 13, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 14, "model": "server.userprofile", "fields": {"json": "", "score": 40, "creation_date": "2011-03-31 21:35:56", "user": 14, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 15, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 15, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 16, "model": "server.userprofile", "fields": {"json": "", "score": 40, "creation_date": "2011-03-31 21:35:56", "user": 16, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 17, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 17, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 18, "model": "server.userprofile", "fields": {"json": "", "score": 20, "creation_date": "2011-03-31 21:35:56", "user": 18, "last_visited": "2011-03-31 21:36:01"}}, {"pk": 19, "model": "server.userprofile", "fields": {"json": "", "score": 20, "creation_date": "2011-03-31 21:35:56", "user": 19, "last_visited": "2011-03-31 21:36:01"}}, {"pk": 20, "model": "server.userprofile", "fields": {"json": "", "score": 40, "creation_date": "2011-03-31 21:35:56", "user": 20, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 21, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 21, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 22, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 22, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 23, "model": "server.userprofile", "fields": {"json": "", "score": 690, "creation_date": "2011-03-31 21:35:56", "user": 23, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 24, "model": "server.userprofile", "fields": {"json": "", "score": 90, "creation_date": "2011-03-31 21:35:56", "user": 24, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 25, "model": "server.userprofile", "fields": {"json": "", "score": 54, "creation_date": "2011-03-31 21:35:56", "user": 25, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 26, "model": "server.userprofile", "fields": {"json": "", "score": 220, "creation_date": "2011-03-31 21:35:56", "user": 26, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 27, "model": "server.userprofile", "fields": {"json": "", "score": 70, "creation_date": "2011-03-31 21:35:56", "user": 27, "last_visited": "2011-03-31 21:36:04"}}, {"pk": 28, "model": "server.userprofile", "fields": {"json": "", "score": 20, "creation_date": "2011-03-31 21:35:56", "user": 28, "last_visited": "2011-03-31 21:36:04"}}, {"pk": 29, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 29, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 30, "model": "server.userprofile", "fields": {"json": "", "score": 390, "creation_date": "2011-03-31 21:35:56", "user": 30, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 31, "model": "server.userprofile", "fields": {"json": "", "score": 48, "creation_date": "2011-03-31 21:35:56", "user": 31, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 32, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 32, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 33, "model": "server.userprofile", "fields": {"json": "", "score": 40, "creation_date": "2011-03-31 21:35:56", "user": 33, "last_visited": "2011-03-31 21:36:02"}}, {"pk": 34, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 34, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 35, "model": "server.userprofile", "fields": {"json": "", "score": 100, "creation_date": "2011-03-31 21:35:56", "user": 35, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 36, "model": "server.userprofile", "fields": {"json": "", "score": 100, "creation_date": "2011-03-31 21:35:56", "user": 36, "last_visited": "2011-03-31 21:36:04"}}, {"pk": 37, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 37, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 38, "model": "server.userprofile", "fields": {"json": "", "score": 240, "creation_date": "2011-03-31 21:35:56", "user": 38, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 39, "model": "server.userprofile", "fields": {"json": "", "score": 20, "creation_date": "2011-03-31 21:35:56", "user": 39, "last_visited": "2011-03-31 21:36:02"}}, {"pk": 40, "model": "server.userprofile", "fields": {"json": "", "score": 50, "creation_date": "2011-03-31 21:35:56", "user": 40, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 41, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 41, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 42, "model": "server.userprofile", "fields": {"json": "", "score": 70, "creation_date": "2011-03-31 21:35:56", "user": 42, "last_visited": "2011-03-31 21:36:04"}}, {"pk": 43, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 43, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 44, "model": "server.userprofile", "fields": {"json": "", "score": 20, "creation_date": "2011-03-31 21:35:56", "user": 44, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 45, "model": "server.userprofile", "fields": {"json": "", "score": 50, "creation_date": "2011-03-31 21:35:56", "user": 45, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 46, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 46, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 47, "model": "server.userprofile", "fields": {"json": "", "score": 50, "creation_date": "2011-03-31 21:35:56", "user": 47, "last_visited": "2011-03-31 21:36:04"}}, {"pk": 48, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 48, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 49, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 49, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 50, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 50, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 51, "model": "server.userprofile", "fields": {"json": "", "score": 40, "creation_date": "2011-03-31 21:35:56", "user": 51, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 52, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 52, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 53, "model": "server.userprofile", "fields": {"json": "", "score": 170, "creation_date": "2011-03-31 21:35:56", "user": 53, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 54, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 54, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 55, "model": "server.userprofile", "fields": {"json": "", "score": 320, "creation_date": "2011-03-31 21:35:56", "user": 55, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 56, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 56, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 57, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 57, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 58, "model": "server.userprofile", "fields": {"json": "", "score": 70, "creation_date": "2011-03-31 21:35:56", "user": 58, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 59, "model": "server.userprofile", "fields": {"json": "", "score": 220, "creation_date": "2011-03-31 21:35:56", "user": 59, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 60, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 60, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 61, "model": "server.userprofile", "fields": {"json": "", "score": 30, "creation_date": "2011-03-31 21:35:56", "user": 61, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 62, "model": "server.userprofile", "fields": {"json": "", "score": 278, "creation_date": "2011-03-31 21:35:56", "user": 62, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 63, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 63, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 64, "model": "server.userprofile", "fields": {"json": "", "score": 276, "creation_date": "2011-03-31 21:35:56", "user": 64, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 65, "model": "server.userprofile", "fields": {"json": "", "score": 50, "creation_date": "2011-03-31 21:35:56", "user": 65, "last_visited": "2011-03-31 21:36:04"}}, {"pk": 66, "model": "server.userprofile", "fields": {"json": "", "score": 30, "creation_date": "2011-03-31 21:35:56", "user": 66, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 67, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 67, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 68, "model": "server.userprofile", "fields": {"json": "", "score": 300, "creation_date": "2011-03-31 21:35:56", "user": 68, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 69, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 69, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 70, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 70, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 71, "model": "server.userprofile", "fields": {"json": "", "score": 118, "creation_date": "2011-03-31 21:35:56", "user": 71, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 72, "model": "server.userprofile", "fields": {"json": "", "score": 50, "creation_date": "2011-03-31 21:35:56", "user": 72, "last_visited": "2011-03-31 21:36:03"}}, {"pk": 73, "model": "server.userprofile", "fields": {"json": "", "score": 40, "creation_date": "2011-03-31 21:35:56", "user": 73, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 74, "model": "server.userprofile", "fields": {"json": "", "score": 120, "creation_date": "2011-03-31 21:35:56", "user": 74, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 75, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 75, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 76, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 76, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 77, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 77, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 78, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 78, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 79, "model": "server.userprofile", "fields": {"json": "", "score": 60, "creation_date": "2011-03-31 21:35:56", "user": 79, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 80, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 80, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 81, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 81, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 82, "model": "server.userprofile", "fields": {"json": "", "score": 100, "creation_date": "2011-03-31 21:35:56", "user": 82, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 83, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 83, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 84, "model": "server.userprofile", "fields": {"json": "", "score": 40, "creation_date": "2011-03-31 21:35:56", "user": 84, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 85, "model": "server.userprofile", "fields": {"json": "", "score": 30, "creation_date": "2011-03-31 21:35:56", "user": 85, "last_visited": "2011-03-31 21:36:04"}}, {"pk": 86, "model": "server.userprofile", "fields": {"json": "", "score": 10, "creation_date": "2011-03-31 21:35:56", "user": 86, "last_visited": "2011-03-31 21:36:03"}}, {"pk": 87, "model": "server.userprofile", "fields": {"json": "", "score": 140, "creation_date": "2011-03-31 21:35:56", "user": 87, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 88, "model": "server.userprofile", "fields": {"json": "", "score": 20, "creation_date": "2011-03-31 21:35:56", "user": 88, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 89, "model": "server.userprofile", "fields": {"json": "", "score": 40, "creation_date": "2011-03-31 21:35:56", "user": 89, "last_visited": "2011-03-31 21:36:04"}}, {"pk": 90, "model": "server.userprofile", "fields": {"json": "", "score": 78, "creation_date": "2011-03-31 21:35:56", "user": 90, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 91, "model": "server.userprofile", "fields": {"json": "", "score": 110, "creation_date": "2011-03-31 21:35:56", "user": 91, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 92, "model": "server.userprofile", "fields": {"json": "", "score": 50, "creation_date": "2011-03-31 21:35:56", "user": 92, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 93, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 93, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 94, "model": "server.userprofile", "fields": {"json": "", "score": 30, "creation_date": "2011-03-31 21:35:56", "user": 94, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 95, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 95, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 96, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 96, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 97, "model": "server.userprofile", "fields": {"json": "", "score": 10, "creation_date": "2011-03-31 21:35:56", "user": 97, "last_visited": "2011-03-31 21:36:03"}}, {"pk": 98, "model": "server.userprofile", "fields": {"json": "", "score": 20, "creation_date": "2011-03-31 21:35:56", "user": 98, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 99, "model": "server.userprofile", "fields": {"json": "", "score": 10, "creation_date": "2011-03-31 21:35:56", "user": 99, "last_visited": "2011-03-31 21:36:04"}}, {"pk": 100, "model": "server.userprofile", "fields": {"json": "", "score": 20, "creation_date": "2011-03-31 21:35:56", "user": 100, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 101, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 101, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 102, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 102, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 103, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 103, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 104, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 104, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 105, "model": "server.userprofile", "fields": {"json": "", "score": 40, "creation_date": "2011-03-31 21:35:56", "user": 105, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 106, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 106, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 107, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 107, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 108, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 108, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 109, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 109, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 110, "model": "server.userprofile", "fields": {"json": "", "score": 30, "creation_date": "2011-03-31 21:35:56", "user": 110, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 111, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 111, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 112, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 112, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 113, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 113, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 114, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 114, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 115, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 115, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 116, "model": "server.userprofile", "fields": {"json": "", "score": 40, "creation_date": "2011-03-31 21:35:56", "user": 116, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 117, "model": "server.userprofile", "fields": {"json": "", "score": 260, "creation_date": "2011-03-31 21:35:56", "user": 117, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 118, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 118, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 119, "model": "server.userprofile", "fields": {"json": "", "score": 80, "creation_date": "2011-03-31 21:35:56", "user": 119, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 120, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 120, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 121, "model": "server.userprofile", "fields": {"json": "", "score": 20, "creation_date": "2011-03-31 21:35:56", "user": 121, "last_visited": "2011-03-31 21:36:04"}}, {"pk": 122, "model": "server.userprofile", "fields": {"json": "", "score": 90, "creation_date": "2011-03-31 21:35:56", "user": 122, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 123, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 123, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 124, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 124, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 125, "model": "server.userprofile", "fields": {"json": "", "score": 20, "creation_date": "2011-03-31 21:35:56", "user": 125, "last_visited": "2011-03-31 21:36:06"}}, {"pk": 126, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:56", "user": 126, "last_visited": "2011-03-31 21:35:56"}}, {"pk": 127, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 127, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 128, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 128, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 129, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 129, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 130, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 130, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 131, "model": "server.userprofile", "fields": {"json": "", "score": 20, "creation_date": "2011-03-31 21:35:57", "user": 131, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 132, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 132, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 133, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 133, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 134, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 134, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 135, "model": "server.userprofile", "fields": {"json": "", "score": 40, "creation_date": "2011-03-31 21:35:57", "user": 135, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 136, "model": "server.userprofile", "fields": {"json": "", "score": 30, "creation_date": "2011-03-31 21:35:57", "user": 136, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 137, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 137, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 138, "model": "server.userprofile", "fields": {"json": "", "score": 20, "creation_date": "2011-03-31 21:35:57", "user": 138, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 139, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 139, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 140, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 140, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 141, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 141, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 142, "model": "server.userprofile", "fields": {"json": "", "score": 40, "creation_date": "2011-03-31 21:35:57", "user": 142, "last_visited": "2011-03-31 21:36:05"}}, {"pk": 143, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 143, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 144, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 144, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 145, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 145, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 146, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 146, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 147, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 147, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 148, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 148, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 149, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 149, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 150, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 150, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 151, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 151, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 152, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 152, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 153, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 153, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 154, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 154, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 155, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 155, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 156, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 156, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 157, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 157, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 158, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 158, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 159, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 159, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 160, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 160, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 161, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 161, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 162, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 162, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 163, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 163, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 164, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 164, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 165, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 165, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 166, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 166, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 167, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 167, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 168, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 168, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 169, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 169, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 170, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 170, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 171, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 171, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 172, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 172, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 173, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 173, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 174, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 174, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 175, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 175, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 176, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 176, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 177, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 177, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 178, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 178, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 179, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 179, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 180, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 180, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 181, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 181, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 182, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 182, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 183, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 183, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 184, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 184, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 185, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 185, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 186, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 186, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 187, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 187, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 188, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 188, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 189, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 189, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 190, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 190, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 191, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 191, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 192, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 192, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 193, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 193, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 194, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 194, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 195, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 195, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 196, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 196, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 197, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 197, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 198, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 198, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 199, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 199, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 200, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 200, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 201, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 201, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 202, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 202, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 203, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 203, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 204, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 204, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 205, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 205, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 206, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 206, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 207, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 207, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 208, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 208, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 209, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 209, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 210, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 210, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 211, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 211, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 212, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 212, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 213, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 213, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 214, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 214, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 215, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 215, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 216, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 216, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 217, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 217, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 218, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 218, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 219, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 219, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 220, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 220, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 221, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 221, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 222, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 222, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 223, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 223, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 224, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 224, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 225, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 225, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 226, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 226, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 227, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 227, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 228, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 228, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 229, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 229, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 230, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 230, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 231, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 231, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 232, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 232, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 233, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 233, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 234, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 234, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 235, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 235, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 236, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 236, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 237, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 237, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 238, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 238, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 239, "model": "server.userprofile", "fields": {"json": "", "score": 0, "creation_date": "2011-03-31 21:35:57", "user": 239, "last_visited": "2011-03-31 21:35:57"}}, {"pk": 1, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 2, "views": 70, "author": 2, "creation_date": "2009-09-30 14:12:07", "content": "<p>Here are a few guidelines:</p>\n\n<ol>\n<li>The site's goal is to answer bioinformatics and systems biology related questions</li>\n<li>Answer questions to gain <em>reputation</em>. </li>\n<li>Don't forget to vote for answers that you like! Registered users may vote on answers.</li>\n<li>If you are the one asking the original question you may also select the best answer</li>\n<li>Subscribe to the RSS feeds for all questions or a single question to keep up to date with the developments</li>\n</ol>", "html": "<p>Here are a few guidelines:</p>\n\n<ol>\n<li>The site's goal is to answer bioinformatics and systems biology related questions</li>\n<li>Answer questions to gain <em>reputation</em>. </li>\n<li>Don't forget to vote for answers that you like! Registered users may vote on answers.</li>\n<li>If you are the one asking the original question you may also select the best answer</li>\n<li>Subscribe to the RSS feeds for all questions or a single question to keep up to date with the developments</li>\n</ol>", "lastedit_user": 2}}, {"pk": 2, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 1, "views": 187, "author": 2, "creation_date": "2009-09-30 14:55:00", "content": "<p>I have a file in GFF format and I need to convert it to BED format. What do I do?</p>", "html": "<p>I have a file in GFF format and I need to convert it to BED format. What do I do?</p>", "lastedit_user": 2}}, {"pk": 3, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 1, "views": 0, "author": 2, "creation_date": "2009-09-30 14:56:18", "content": "<p>Both formats are tab delimited text files used to represent DNA features in genomes. The order of columns between the two are different, there are also columns that correspond to attributes missing from one or the other format. Nonetheless <strong>the most important</strong> difference between the two is the coordinate systems that they assume. </p>\n\n<p>The <a href=\"http://genome.ucsc.edu/FAQ/FAQformat#format1\" rel=\"nofollow\">BED</a> format developed at <code>UCSC</code> uses a zero based indexing and an open end interval whereas the <a href=\"http://www.sanger.ac.uk/Software/formats/GFF/GFF%5FSpec.shtml\" rel=\"nofollow\">GFF</a> format developed at <code>Sanger</code> assumes a 1 based coordinate system that includes both start and end coordinates. Therefore</p>\n\n<p>The <code>[0,100]</code> interval in <code>BED</code> format corresponds to <code>[1,100]</code> in <code>GFF</code> format and both are <code>100</code> base long. That the first element in BED format will be have the index of <code>0</code> where the last <code>100th</code> element will have the index of <code>99</code>! Whereas in <code>GFF</code> the first element will have the index of <code>1</code> and the last element will have the index of <code>100</code>.</p>\n\n<p>To convert between the two you may use <a href=\"http://main.g2.bx.psu.edu/\" rel=\"nofollow\">Galaxy</a> and select the section called <code>Select Formats</code> that will list various transformation options.</p>", "html": "<p>Both formats are tab delimited text files used to represent DNA features in genomes. The order of columns between the two are different, there are also columns that correspond to attributes missing from one or the other format. Nonetheless <strong>the most important</strong> difference between the two is the coordinate systems that they assume. </p>\n\n<p>The <a href=\"http://genome.ucsc.edu/FAQ/FAQformat#format1\" rel=\"nofollow\">BED</a> format developed at <code>UCSC</code> uses a zero based indexing and an open end interval whereas the <a href=\"http://www.sanger.ac.uk/Software/formats/GFF/GFF%5FSpec.shtml\" rel=\"nofollow\">GFF</a> format developed at <code>Sanger</code> assumes a 1 based coordinate system that includes both start and end coordinates. Therefore</p>\n\n<p>The <code>[0,100]</code> interval in <code>BED</code> format corresponds to <code>[1,100]</code> in <code>GFF</code> format and both are <code>100</code> base long. That the first element in BED format will be have the index of <code>0</code> where the last <code>100th</code> element will have the index of <code>99</code>! Whereas in <code>GFF</code> the first element will have the index of <code>1</code> and the last element will have the index of <code>100</code>.</p>\n\n<p>To convert between the two you may use <a href=\"http://main.g2.bx.psu.edu/\" rel=\"nofollow\">Galaxy</a> and select the section called <code>Select Formats</code> that will list various transformation options.</p>", "lastedit_user": 2}}, {"pk": 4, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 3, "views": 150, "author": 3, "creation_date": "2009-09-30 16:09:06", "content": "<p>I have a few hundred yeast sequences (20-80bp long) and I want to find common motifs (conserved bases at certain indices) in them. I am using a Mac</p>", "html": "<p>I have a few hundred yeast sequences (20-80bp long) and I want to find common motifs (conserved bases at certain indices) in them. I am using a Mac</p>", "lastedit_user": 3}}, {"pk": 5, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 2, "views": 154, "author": 2, "creation_date": "2009-09-30 16:44:22", "content": "<p>Feel free to post your favorite clustering tool.</p>", "html": "<p>Feel free to post your favorite clustering tool.</p>", "lastedit_user": 2}}, {"pk": 6, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:35:57", "score": 0, "views": 2, "author": 5, "creation_date": "2009-09-30 18:49:39", "content": "<p>Hi, I just created my user id a few minutes ago. </p>\n\n<p>Post this question to see how it works.</p>", "html": "<p>Hi, I just created my user id a few minutes ago. </p>\n\n<p>Post this question to see how it works.</p>", "lastedit_user": 5}}, {"pk": 7, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 2, "views": 0, "author": 5, "creation_date": "2009-09-30 18:55:02", "content": "<p>try this out?</p>\n\n<p><a href=\"http://fraenkel.mit.edu/webmotifs/form.html\" rel=\"nofollow\">http://fraenkel.mit.edu/webmotifs/form.html</a></p>", "html": "<p>try this out?</p>\n\n<p><a href=\"http://fraenkel.mit.edu/webmotifs/form.html\" rel=\"nofollow\">http://fraenkel.mit.edu/webmotifs/form.html</a></p>", "lastedit_user": 5}}, {"pk": 8, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 3, "views": 0, "author": 6, "creation_date": "2009-09-30 19:32:29", "content": "<p>You can also use MEME:  <a href=\"http://meme.sdsc.edu/\" rel=\"nofollow\">http://meme.sdsc.edu/</a>.</p>", "html": "<p>You can also use MEME:  <a href=\"http://meme.sdsc.edu/\" rel=\"nofollow\">http://meme.sdsc.edu/</a>.</p>", "lastedit_user": 6}}, {"pk": 9, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:35:57", "score": 0, "views": 0, "author": 7, "creation_date": "2009-09-30 19:35:28", "content": "<pre>\nACGGGCCCGACGATGCGTCGTA\n\nACGTACGTCGAACCGTCGTCGT\n\nACGTGCGTCGAAACGTCAGTCG\n\nACGGGTTCGATCGTCGTCGTCG\n</pre>\n\n<p>may be in Python I will break down the first sequence of required motif length into a sliding window and will search for those list of motifs in the rest of sequences using regular expression in python using <code>re.search()</code> method.</p>", "html": "<pre>\nACGGGCCCGACGATGCGTCGTA\n\nACGTACGTCGAACCGTCGTCGT\n\nACGTGCGTCGAAACGTCAGTCG\n\nACGGGTTCGATCGTCGTCGTCG\n</pre>\n\n<p>may be in Python I will break down the first sequence of required motif length into a sliding window and will search for those list of motifs in the rest of sequences using regular expression in python using <code>re.search()</code> method.</p>", "lastedit_user": 7}}, {"pk": 10, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 2, "views": 18, "author": 10, "creation_date": "2009-10-05 15:51:37", "content": "<p>I need to generate nucleotide occupancy counts for each position of a given sequence then summed over each of the input sequences. An example desired output (for di-nucleotide AT):</p>\n\n<p><img src=\"http://github.com/ialbert/biostar-codesample/raw/master/python/images/dinuc.png\" alt=\"dinucleotide occupancy\" /></p>", "html": "<p>I need to generate nucleotide occupancy counts for each position of a given sequence then summed over each of the input sequences. An example desired output (for di-nucleotide AT):</p>\n\n<p><img src=\"http://github.com/ialbert/biostar-codesample/raw/master/python/images/dinuc.png\" alt=\"dinucleotide occupancy\" /></p>", "lastedit_user": 10}}, {"pk": 11, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 1, "views": 0, "author": 2, "creation_date": "2009-10-05 16:03:01", "content": "<p>The code snippet below will populate the <code>store</code> dictionary keyed by the nucleotide patterns and values as lists that contain the occupancy for each index. (Updated answer now includes arbitrary lenght nucleotide counts)::</p>\n\n<pre><code>from itertools import count\n\ndef pattern_update(sequence, width=2, store={}):\n    \"\"\"\n    Accumulates nucleotide patterns of a certain width with \n    position counts at each index.\n    \"\"\"\n\n    # open intervals need a padding at end for proper slicing\n    size  = len(sequence) + 1\n\n    def zeroes():\n        \"Generates an empty array that holds the positions\"\n        return [ 0 ] * (size - width)\n\n    # these are the end indices\n    ends = range(width, size)\n\n    for lo, hi in zip(count(), ends):\n        # upon encoutering a missing key initialize \n        # that value for that key to the return value of the empty() function\n        key = sequence[lo:hi]\n        store.setdefault(key, zeroes())[lo] += 1\n\n    return store\n</code></pre>\n\n<p>The code at <a href=\"http://github.com/ialbert/biostar-codesample/blob/master/python/multipatt.py\" rel=\"nofollow\">multipatt.py</a> demonstrates its use in a full program. Set the <code>size</code> to the maximal possible sequence size. A typical use case::</p>\n\n<pre><code>store = {}\nseq1 = 'ATGCT'\npattern_update(seq1, width=2, store=store)    \n\nseq2 = 'ATCGC'\npattern_update(seq2, width=2, store=store)    \n\nprint store\n</code></pre>\n\n<p>will print::</p>\n\n<pre><code>{'CG': [0, 0, 1, 0], 'GC': [0, 0, 1, 1], 'AT': [2, 0, 0, 0], \n'TG': [0, 1, 0, 0], 'TC': [0, 1, 0, 0], 'CT': [0, 0, 0, 1]}\n</code></pre>", "html": "<p>The code snippet below will populate the <code>store</code> dictionary keyed by the nucleotide patterns and values as lists that contain the occupancy for each index. (Updated answer now includes arbitrary lenght nucleotide counts)::</p>\n\n<pre><code>from itertools import count\n\ndef pattern_update(sequence, width=2, store={}):\n    \"\"\"\n    Accumulates nucleotide patterns of a certain width with \n    position counts at each index.\n    \"\"\"\n\n    # open intervals need a padding at end for proper slicing\n    size  = len(sequence) + 1\n\n    def zeroes():\n        \"Generates an empty array that holds the positions\"\n        return [ 0 ] * (size - width)\n\n    # these are the end indices\n    ends = range(width, size)\n\n    for lo, hi in zip(count(), ends):\n        # upon encoutering a missing key initialize \n        # that value for that key to the return value of the empty() function\n        key = sequence[lo:hi]\n        store.setdefault(key, zeroes())[lo] += 1\n\n    return store\n</code></pre>\n\n<p>The code at <a href=\"http://github.com/ialbert/biostar-codesample/blob/master/python/multipatt.py\" rel=\"nofollow\">multipatt.py</a> demonstrates its use in a full program. Set the <code>size</code> to the maximal possible sequence size. A typical use case::</p>\n\n<pre><code>store = {}\nseq1 = 'ATGCT'\npattern_update(seq1, width=2, store=store)\n\nseq2 = 'ATCGC'\npattern_update(seq2, width=2, store=store)    \n\nprint store\n</code></pre>\n\n<p>will print::</p>\n\n<pre><code>{'CG': [0, 0, 1, 0], 'GC': [0, 0, 1, 1], 'AT': [2, 0, 0, 0], \n'TG': [0, 1, 0, 0], 'TC': [0, 1, 0, 0], 'CT': [0, 0, 0, 1]}\n</code></pre>", "lastedit_user": 2}}, {"pk": 12, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 4, "views": 0, "author": 2, "creation_date": "2009-10-05 16:09:57", "content": "<p>One of my favorites is the <a href=\"http://www.tm4.org/mev.html\" rel=\"nofollow\">MEV</a> micro-array data analysis tool.\nIt is simple to use and it has a very large number of features. </p>\n\n<p>Works well for any type of data. You can also load into it data from a file that is in a simple text format:</p>\n\n<pre>\nGENE1, value1, value2\nGENE2, value1, value2\n</pre>\n\n<p>Feel free to post your favorite clustering tool.</p>", "html": "<p>One of my favorites is the <a href=\"http://www.tm4.org/mev.html\" rel=\"nofollow\">MEV</a> micro-array data analysis tool.\nIt is simple to use and it has a very large number of features. </p>\n\n<p>Works well for any type of data. You can also load into it data from a file that is in a simple text format:</p>\n\n<pre>\nGENE1, value1, value2\nGENE2, value1, value2\n</pre>\n\n<p>Feel free to post your favorite clustering tool.</p>", "lastedit_user": 2}}, {"pk": 13, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 1, "views": 72, "author": 12, "creation_date": "2009-10-06 18:58:10", "content": "<p>Hi, everyone,\nI am posting this question for my friend.\nHe is analyzing his CHIP DNA solid deep sequence data, and find out that near 80% reads can not be mapped to the human genome. We are wondering if this high percentage unmapped reads is normal in CHIP DNA deep sequence or there may be something wrong with his result.</p>", "html": "<p>Hi, everyone,\nI am posting this question for my friend.\nHe is analyzing his CHIP DNA solid deep sequence data, and find out that near 80% reads can not be mapped to the human genome. We are wondering if this high percentage unmapped reads is normal in CHIP DNA deep sequence or there may be something wrong with his result.</p>", "lastedit_user": 12}}, {"pk": 14, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:35:57", "score": 0, "views": 0, "author": 2, "creation_date": "2009-10-06 20:10:32", "content": "<p>I recall that our first samples that we ran on the Solid sequencer have had bad performance. Not quite an 80% loss but around 40%-60% reads were unmappable (yeast). Some other lab members will hopefully chime in with more details. </p>", "html": "<p>I recall that our first samples that we ran on the Solid sequencer have had bad performance. Not quite an 80% loss but around 40%-60% reads were unmappable (yeast). Some other lab members will hopefully chime in with more details. </p>", "lastedit_user": 2}}, {"pk": 15, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 1, "views": 0, "author": 5, "creation_date": "2009-10-06 20:41:24", "content": "<p>Hi there,</p>\n\n<p>We have done numbers of SOLiD sequencing run on yeast samples. Normally there are only 30-40 percent of total tags can be uniquely mapped back to yeast genome. </p>\n\n<p>What I would recommend is do it on solexa. You get much higher quality tags.</p>\n\n<p>cheers,</p>", "html": "<p>Hi there,</p>\n\n<p>We have done numbers of SOLiD sequencing run on yeast samples. Normally there are only 30-40 percent of total tags can be uniquely mapped back to yeast genome. </p>\n\n<p>What I would recommend is do it on solexa. You get much higher quality tags.</p>\n\n<p>cheers,</p>", "lastedit_user": 5}}, {"pk": 16, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 2, "views": 0, "author": 13, "creation_date": "2009-10-06 22:04:41", "content": "<p>Your 20% mapping yield looks like low for normal ChIP experiment, even for human. Several factors can reduce this mapping yield. I am wondering which kind of ChIP was used in your case. That is, which kind of proteins was ChIPed?</p>", "html": "<p>Your 20% mapping yield looks like low for normal ChIP experiment, even for human. Several factors can reduce this mapping yield. I am wondering which kind of ChIP was used in your case. That is, which kind of proteins was ChIPed?</p>", "lastedit_user": 13}}, {"pk": 17, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 1, "views": 0, "author": 10, "creation_date": "2009-10-07 16:41:44", "content": "<p>If you are shy about asking the question on your own behalf submit it to to the <strong>Question Bot</strong> and it will be posted anonymously. Send email to the <code>Question Bot</code> link at the bottom.</p>", "html": "<p>If you are shy about asking the question on your own behalf submit it to to the <strong>Question Bot</strong> and it will be posted anonymously. Send email to the <code>Question Bot</code> link at the bottom.</p>", "lastedit_user": 10}}, {"pk": 18, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 1, "views": 0, "author": 14, "creation_date": "2009-10-09 03:28:20", "content": "<p>Hi,</p>\n\n<p>I don't think a new user can vote on a question or an answer.\nThe site says I need 15 reputation...</p>", "html": "<p>Hi,</p>\n\n<p>I don't think a new user can vote on a question or an answer.\nThe site says I need 15 reputation...</p>", "lastedit_user": 14}}, {"pk": 19, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 0, "author": 5, "creation_date": "2009-10-16 12:25:38", "content": "<p>I would recommend a combination of cluster and treeview.</p>\n\n<p>pretty powerful!</p>", "html": "<p>I would recommend a combination of cluster and treeview.</p>\n\n<p>pretty powerful!</p>", "lastedit_user": 5}}, {"pk": 20, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:35:57", "score": 0, "views": 0, "author": 15, "creation_date": "2009-10-18 03:22:53", "content": "<p>any ideas im a girl</p>", "html": "<p>any ideas im a girl</p>", "lastedit_user": 15}}, {"pk": 21, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:35:57", "score": 0, "views": 0, "author": 15, "creation_date": "2009-10-18 03:23:34", "content": "<p>any ideas im a girl</p>", "html": "<p>any ideas im a girl</p>", "lastedit_user": 15}}, {"pk": 22, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 4, "views": 493, "author": 16, "creation_date": "2009-10-23 17:42:24", "content": "<p>Hey,</p>\n\n<p>I was using DAVID (<a href=\"http://david.abcc.ncifcrf.gov/conversion.jsp\" rel=\"nofollow\">http://david.abcc.ncifcrf.gov/conversion.jsp</a>) to do the gene ID conversion, e.g.conversion between Agilent ID, Genebank accession id and Entrez gene ID, but I found the DAVID database is not updated. Does anyone know a better updataed conversion tool to do this job? Thanks! </p>", "html": "<p>Hey,</p>\n\n<p>I was using DAVID (<a href=\"http://david.abcc.ncifcrf.gov/conversion.jsp\" rel=\"nofollow\">http://david.abcc.ncifcrf.gov/conversion.jsp</a>) to do the gene ID conversion, e.g.conversion between Agilent ID, Genebank accession id and Entrez gene ID, but I found the DAVID database is not updated. Does anyone know a better updataed conversion tool to do this job? Thanks! </p>", "lastedit_user": 16}}, {"pk": 23, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:35:57", "score": 0, "views": 0, "author": 2, "creation_date": "2009-10-23 19:46:45", "content": "<p>I don't know of a direct solution myself, but this is a topic that may be of interest for the biological data analysis class that I am teaching. </p>\n\n<p>If you specify the organism/genomic builds that you are interested in we may be able to generate a full translation list as an in class example or a homework. I was planning on covering an <code>Affymetrix ID</code> to <code>Genebank example</code> anyhow.</p>", "html": "<p>I don't know of a direct solution myself, but this is a topic that may be of interest for the biological data analysis class that I am teaching. </p>\n\n<p>If you specify the organism/genomic builds that you are interested in we may be able to generate a full translation list as an in class example or a homework. I was planning on covering an <code>Affymetrix ID</code> to <code>Genebank example</code> anyhow.</p>", "lastedit_user": 2}}, {"pk": 24, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 2, "views": 32, "author": 14, "creation_date": "2009-12-01 07:13:53", "content": "<p>Hi,</p>\n\n<p>I have 35bp Solid colorspace sequencing data, and the actual sequences to be mapped are 20-25bp after removing the linker sequence.</p>\n\n<p>I hope to find all the hits allowing no more than n mismatches (say n=3), not only the best hit.</p>\n\n<p>I know there is a -M option to specify -M sensitivity,35bp. I wonder whether this setting will guarantee the best sensitivity in this case. Since my reads are only 20-25bp long, should I changed the default 4 spaced seeds to 3?</p>\n\n<p>I'm new to SHRiMP, so I'd like to hear some suggestions on setting the parameters of SHRiMP to achieve the best sensitivity.</p>\n\n<p>Thank you!</p>", "html": "<p>Hi,</p>\n\n<p>I have 35bp Solid colorspace sequencing data, and the actual sequences to be mapped are 20-25bp after removing the linker sequence.</p>\n\n<p>I hope to find all the hits allowing no more than n mismatches (say n=3), not only the best hit.</p>\n\n<p>I know there is a -M option to specify -M sensitivity,35bp. I wonder whether this setting will guarantee the best sensitivity in this case. Since my reads are only 20-25bp long, should I changed the default 4 spaced seeds to 3?</p>\n\n<p>I'm new to SHRiMP, so I'd like to hear some suggestions on setting the parameters of SHRiMP to achieve the best sensitivity.</p>\n\n<p>Thank you!</p>", "lastedit_user": 14}}, {"pk": 25, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 2, "views": 0, "author": 18, "creation_date": "2009-12-01 14:57:35", "content": "<p>I just read the SHRiMP manual again, but I think that their explanation about -M option may not be enough to answer your question. I usually use the \"seed\" mode by using -s, -n, and -w and the option -M is a new feature of the version 1.3.1, which I have never tried before.</p>\n\n<p>I recommend for you to use the \"seed\" mode--the default would be good, but please adjust the -s option if you want more sensitivity. Always fast speed compensates sensitivity and the -M option seems to exist for this purpose.</p>\n\n<p>Hope my message to be helpful for your project.</p>", "html": "<p>I just read the SHRiMP manual again, but I think that their explanation about -M option may not be enough to answer your question. I usually use the \"seed\" mode by using -s, -n, and -w and the option -M is a new feature of the version 1.3.1, which I have never tried before.</p>\n\n<p>I recommend for you to use the \"seed\" mode--the default would be good, but please adjust the -s option if you want more sensitivity. Always fast speed compensates sensitivity and the -M option seems to exist for this purpose.</p>\n\n<p>Hope my message to be helpful for your project.</p>", "lastedit_user": 18}}, {"pk": 26, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 1, "views": 0, "author": 2, "creation_date": "2009-12-01 18:00:53", "content": "<blockquote>\n  <p>Since my reads are only 20-25bp long,\n  should I changed the default 4 spaced\n  seeds to 3?</p>\n</blockquote>\n\n<p>while the shrimp manual says:</p>\n\n<ul>\n<li>We recommend using the default 4 seeds of weight 12 in most cases.</li>\n</ul>\n\n<p>you could try running on a smaller sample and see what happens. </p>", "html": "<blockquote>\n  <p>Since my reads are only 20-25bp long,\n  should I changed the default 4 spaced\n  seeds to 3?</p>\n</blockquote>\n\n<p>while the shrimp manual says:</p>\n\n<ul>\n<li>We recommend using the default 4 seeds of weight 12 in most cases.</li>\n</ul>\n\n<p>you could try running on a smaller sample and see what happens. </p>", "lastedit_user": 2}}, {"pk": 27, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 2, "views": 0, "author": 19, "creation_date": "2009-12-08 21:45:54", "content": "<p>The following link has a list of ID conversion tools:</p>\n\n<p><a href=\"http://hum-molgen.org/NewsGen/08-2009/000020.html\" rel=\"nofollow\">http://hum-molgen.org/NewsGen/08-2009/000020.html</a></p>", "html": "<p>The following link has a list of ID conversion tools:</p>\n\n<p><a href=\"http://hum-molgen.org/NewsGen/08-2009/000020.html\" rel=\"nofollow\">http://hum-molgen.org/NewsGen/08-2009/000020.html</a></p>", "lastedit_user": 19}}, {"pk": 28, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 2, "views": 59, "author": 20, "creation_date": "2010-01-13 12:59:22", "content": "<p>Has anyone compiled and used MEME 4.x for use in a parallel computation environment, based upon operation with a Sun Grid Engine (SGE) cluster?</p>\n\n<p>I can compile the suite and its tests pass. However, when I attempt to use the <code>-p n</code> option, to specify <code>n</code> computation nodes, I get several error messages:</p>\n\n<pre><code>/gridware/codine/util/arch: Command not found.\n/gridware/codine/util/arch: Command not found.\n/gridware/codine/util/arch: Command not found.\n/gridware/codine/util/arch: Command not found.\n1: Command not found.\n</code></pre>\n\n<p>We do not have <code>/gridware/codine/util/arch</code>, but we do have <code>/gridengine/sgi/util/arch</code>.</p>\n\n<p>I tried looking around MEME's source code, particularly at <code>meme.c</code> and <code>mp.h</code>, but there are no references to these paths.</p>\n\n<p>I'm wondering if I am missing makefile directives. Here is my <code>./configure</code> statement:</p>\n\n<pre><code>./configure --prefix=/home/areynolds/proj/meme/meme_4.3.0_build --with-url=\"http://meme.nbcr.net/meme\" --enable-openmp --enable-debug\n</code></pre>\n\n<p>Is MPI a requirement; are there directives I am missing for MPI?</p>\n\n<p>Thank you for any advice.</p>", "html": "<p>Has anyone compiled and used MEME 4.x for use in a parallel computation environment, based upon operation with a Sun Grid Engine (SGE) cluster?</p>\n\n<p>I can compile the suite and its tests pass. However, when I attempt to use the <code>-p n</code> option, to specify <code>n</code> computation nodes, I get several error messages:</p>\n\n<pre><code>/gridware/codine/util/arch: Command not found.\n/gridware/codine/util/arch: Command not found.\n/gridware/codine/util/arch: Command not found.\n/gridware/codine/util/arch: Command not found.\n1: Command not found.\n</code></pre>\n\n<p>We do not have <code>/gridware/codine/util/arch</code>, but we do have <code>/gridengine/sgi/util/arch</code>.</p>\n\n<p>I tried looking around MEME's source code, particularly at <code>meme.c</code> and <code>mp.h</code>, but there are no references to these paths.</p>\n\n<p>I'm wondering if I am missing makefile directives. Here is my <code>./configure</code> statement:</p>\n\n<pre><code>./configure --prefix=/home/areynolds/proj/meme/meme_4.3.0_build --with-url=\"http://meme.nbcr.net/meme\" --enable-openmp --enable-debug\n</code></pre>\n\n<p>Is MPI a requirement; are there directives I am missing for MPI?</p>\n\n<p>Thank you for any advice.</p>", "lastedit_user": 20}}, {"pk": 29, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:35:57", "score": 0, "views": 0, "author": 2, "creation_date": "2010-01-13 21:17:50", "content": "<p>This may not be overly useful but it very much sounds like a configuration problem.</p>\n\n<p>Usually there is  configure flag that needs to be set to point to the libraries, something like:</p>\n\n<pre><code>--with-mpidir=MPIDIR\n--with-mpicc=MPICC\n</code></pre>\n\n<p>It also appears that the MEME suite does not support Open MPI (as per <a href=\"http://meme.sdsc.edu/meme4/meme-install.html\" rel=\"nofollow\">install notes</a>).</p>\n\n<p>I would also recommend posting on the MEME user forum:</p>\n\n<p><a href=\"https://www.nbcr.net/forum/viewforum.php?f=5\" rel=\"nofollow\">https://www.nbcr.net/forum/viewforum.php?f=5</a></p>", "html": "<p>This may not be overly useful but it very much sounds like a configuration problem.</p>\n\n<p>Usually there is  configure flag that needs to be set to point to the libraries, something like:</p>\n\n<pre><code>--with-mpidir=MPIDIR\n--with-mpicc=MPICC\n</code></pre>\n\n<p>It also appears that the MEME suite does not support Open MPI (as per <a href=\"http://meme.sdsc.edu/meme4/meme-install.html\" rel=\"nofollow\">install notes</a>).</p>\n\n<p>I would also recommend posting on the MEME user forum:</p>\n\n<p><a href=\"https://www.nbcr.net/forum/viewforum.php?f=5\" rel=\"nofollow\">https://www.nbcr.net/forum/viewforum.php?f=5</a></p>", "lastedit_user": 2}}, {"pk": 30, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 2, "views": 0, "author": 20, "creation_date": "2010-01-15 08:48:14", "content": "<p>Here's a Perl script I wrote if you wanted to do something local. </p>\n\n<p>There's some code in there for translating yeast chromosome names that can be removed, if not needed. I also used a <code>Site</code> feature in the GFF file as the region ID, which might also need tweaking, depending on what features you're interested in.</p>\n\n<pre><code>#!/usr/bin/perl -w\n\nuse strict;\nuse Bio::Tools::GFF;\nuse feature qw(say switch);\n\nmy $gffio = Bio::Tools::GFF-&gt;new(-fh =&gt; \\*STDIN, -gff_version =&gt; 2);\nmy $feature;\n\nwhile ($feature = $gffio-&gt;next_feature()) {\n    # print $gffio-&gt;gff_string($feature).\"\\n\";\n\n    # cf. http://www.sanger.ac.uk/Software/formats/GFF/GFF_Spec.shtml\n    my $seq_id = $feature-&gt;seq_id();   \n    my $start = $feature-&gt;start() - 1;\n    my $end = $feature-&gt;end();\n    my $strand = $feature-&gt;strand();\n    my @sites = $feature-&gt;get_tag_values('Site');\n\n    # translate strand\n    given ( $strand ) {\n        when ($_ == 1)  { $strand = \"+\"; }\n        when ($_ == -1) { $strand = \"-\"; }\n    }\n\n    # translate yeast chromosome to UCSC browser-readable chromosome\n    # cf. http://www.yeastgenome.org/sgdpub/Saccharomyces_cerevisiae.pdf\n    given ( $seq_id ) {\n        when ( $_ eq \"I\" )    { $seq_id = \"chr1\"; }\n        when ( $_ eq \"II\" )   { $seq_id = \"chr2\"; }\n        when ( $_ eq \"III\" )  { $seq_id = \"chr3\"; }\n        when ( $_ eq \"IV\" )   { $seq_id = \"chr4\"; }\n        when ( $_ eq \"V\" )    { $seq_id = \"chr5\"; }\n        when ( $_ eq \"VI\" )   { $seq_id = \"chr6\"; }\n        when ( $_ eq \"VII\" )  { $seq_id = \"chr7\"; }\n        when ( $_ eq \"VIII\" ) { $seq_id = \"chr8\"; }\n        when ( $_ eq \"IX\" )   { $seq_id = \"chr9\"; }\n        when ( $_ eq \"X\" )    { $seq_id = \"chr10\"; }\n        when ( $_ eq \"XI\" )   { $seq_id = \"chr11\"; }\n        when ( $_ eq \"XII\" )  { $seq_id = \"chr12\"; }\n        when ( $_ eq \"XIII\" ) { $seq_id = \"chr13\"; }\n        when ( $_ eq \"XIV\" )  { $seq_id = \"chr14\"; }\n        when ( $_ eq \"XV\" )   { $seq_id = \"chr15\"; }\n        when ( $_ eq \"XVI\" )  { $seq_id = \"chr16\"; }\n        default { }\n    }\n\n    # output\n    print \"$seq_id\\t$start\\t$end\\t$sites[0]\\t0.0\\t$strand\\n\";\n}\n$gffio-&gt;close();\n</code></pre>\n\n<p>To use it:</p>\n\n<pre><code>gff2bed.pl &lt; data.gff &gt; data.bed\n</code></pre>", "html": "<p>Here's a Perl script I wrote if you wanted to do something local. </p>\n\n<p>There's some code in there for translating yeast chromosome names that can be removed, if not needed. I also used a <code>Site</code> feature in the GFF file as the region ID, which might also need tweaking, depending on what features you're interested in.</p>\n\n<pre><code>#!/usr/bin/perl -w\n\nuse strict;\nuse Bio::Tools::GFF;\nuse feature qw(say switch);\n\nmy $gffio = Bio::Tools::GFF-&gt;new(-fh =&gt; \\*STDIN, -gff_version =&gt; 2);\nmy $feature;\n\nwhile ($feature = $gffio-&gt;next_feature()) {\n    # print $gffio-&gt;gff_string($feature).\"\\n\";\n\n    # cf. http://www.sanger.ac.uk/Software/formats/GFF/GFF_Spec.shtml\n    my $seq_id = $feature-&gt;seq_id();   \n    my $start = $feature-&gt;start() - 1;\n    my $end = $feature-&gt;end();\n    my $strand = $feature-&gt;strand();\n    my @sites = $feature-&gt;get_tag_values('Site');\n\n    # translate strand\n    given ( $strand ) {\n        when ($_ == 1)  { $strand = \"+\"; }\n        when ($_ == -1) { $strand = \"-\"; }\n    }\n\n    # translate yeast chromosome to UCSC browser-readable chromosome\n    # cf. http://www.yeastgenome.org/sgdpub/Saccharomyces_cerevisiae.pdf\n    given ( $seq_id ) {\n        when ( $_ eq \"I\" )    { $seq_id = \"chr1\"; }\n        when ( $_ eq \"II\" )   { $seq_id = \"chr2\"; }\n        when ( $_ eq \"III\" )  { $seq_id = \"chr3\"; }\n        when ( $_ eq \"IV\" )   { $seq_id = \"chr4\"; }\n        when ( $_ eq \"V\" )    { $seq_id = \"chr5\"; }\n        when ( $_ eq \"VI\" )   { $seq_id = \"chr6\"; }\n        when ( $_ eq \"VII\" )  { $seq_id = \"chr7\"; }\n        when ( $_ eq \"VIII\" ) { $seq_id = \"chr8\"; }\n        when ( $_ eq \"IX\" )   { $seq_id = \"chr9\"; }\n        when ( $_ eq \"X\" )    { $seq_id = \"chr10\"; }\n        when ( $_ eq \"XI\" )   { $seq_id = \"chr11\"; }\n        when ( $_ eq \"XII\" )  { $seq_id = \"chr12\"; }\n        when ( $_ eq \"XIII\" ) { $seq_id = \"chr13\"; }\n        when ( $_ eq \"XIV\" )  { $seq_id = \"chr14\"; }\n        when ( $_ eq \"XV\" )   { $seq_id = \"chr15\"; }\n        when ( $_ eq \"XVI\" )  { $seq_id = \"chr16\"; }\n        default { }\n    }\n\n    # output\n    print \"$seq_id\\t$start\\t$end\\t$sites[0]\\t0.0\\t$strand\\n\";\n}\n$gffio-&gt;close();\n</code></pre>\n\n<p>To use it:</p>\n\n<pre><code>gff2bed.pl &lt; data.gff &gt; data.bed\n</code></pre>", "lastedit_user": 20}}, {"pk": 31, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 4, "views": 79, "author": 4, "creation_date": "2010-01-22 03:14:17", "content": "<p>Hi, I recently performed an RNA immunoprecipitation followed by SOLiD sequencing (50 bp fragmented reads). I haven't received my first SOLiD sequencing results yet, but I was told I should have them soon. I've tried doing my own research on how to map, align, and plot my results but I don't have a concrete workflow as to how I will analyze my results yet. I have very little experience doing any programming and would prefer to use galaxy. There are labs on my campus I can go to to get my color space data mapped, but I would like to do things myself. Is there a way on galaxy (or another program) to convert my color space data to sequence, then map those reads to the yeast transcriptome and analyze it? Even if you can't answer my question directly I'd appreciate any tips from anyone who has worked with RNA-seq data already.    </p>\n\n<p>Thanks in advance </p>", "html": "<p>Hi, I recently performed an RNA immunoprecipitation followed by SOLiD sequencing (50 bp fragmented reads). I haven't received my first SOLiD sequencing results yet, but I was told I should have them soon. I've tried doing my own research on how to map, align, and plot my results but I don't have a concrete workflow as to how I will analyze my results yet. I have very little experience doing any programming and would prefer to use galaxy. There are labs on my campus I can go to to get my color space data mapped, but I would like to do things myself. Is there a way on galaxy (or another program) to convert my color space data to sequence, then map those reads to the yeast transcriptome and analyze it? Even if you can't answer my question directly I'd appreciate any tips from anyone who has worked with RNA-seq data already.    </p>\n\n<p>Thanks in advance </p>", "lastedit_user": 4}}, {"pk": 32, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 1, "views": 0, "author": 2, "creation_date": "2010-01-22 15:13:42", "content": "<p>Personally I would advise that if you know someone who can partially perform the task you should have them do it, and ask them to explain and show it to you how they've done it.</p>\n\n<p>The task at hand is complex. The solution always depends immensely on the particulars of the problem, moreover you will be facing myriads of frustrating limitations, errors and problems.</p>\n\n<p>Learning directly from someone who has done it, establishing a personal rapport with them will allow you to ease into this problem domain. In fact when you are finished mapping your RNA - your are still likely to be far from being done - yet you might have expanded a lot of energy and excitement. </p>", "html": "<p>Personally I would advise that if you know someone who can partially perform the task you should have them do it, and ask them to explain and show it to you how they've done it.</p>\n\n<p>The task at hand is complex. The solution always depends immensely on the particulars of the problem, moreover you will be facing myriads of frustrating limitations, errors and problems.</p>\n\n<p>Learning directly from someone who has done it, establishing a personal rapport with them will allow you to ease into this problem domain. In fact when you are finished mapping your RNA - your are still likely to be far from being done - yet you might have expanded a lot of energy and excitement. </p>", "lastedit_user": 2}}, {"pk": 33, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 2, "views": 307, "author": 23, "creation_date": "2010-01-26 15:14:38", "content": "<p>So, you will probably hate me for asking this question here, as there are lot of forum and blog posts on internet about it and it is also a very subjective question.</p>\n\n<p>However, it may be a starting point for a good discussion, if we don't flame... Which operating system do you usually use for your work? Did you install it by yourself, and do you have administrative rights on it, or is there any IT administrator in your lab? </p>", "html": "<p>So, you will probably hate me for asking this question here, as there are lot of forum and blog posts on internet about it and it is also a very subjective question.</p>\n\n<p>However, it may be a starting point for a good discussion, if we don't flame... Which operating system do you usually use for your work? Did you install it by yourself, and do you have administrative rights on it, or is there any IT administrator in your lab? </p>", "lastedit_user": 23}}, {"pk": 34, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 3, "views": 484, "author": 23, "creation_date": "2010-01-26 15:45:06", "content": "<p>This is also a very classic question: Which is your favorite programming language in bioinformatics? Which languages would you recommend to a student wishing to enter the world of bioinformatics?</p>\n\n<p>This topic has already been discussed on the Internet, but I think it would be nice to discuss it here. Here there are some links to previous polls and discussions:</p>\n\n<ul>\n<li><a href=\"http://www.bioinformatics.org/poll/index.php?dispid=17\" rel=\"nofollow\">Bioinformatics.org poll</a></li>\n<li><a href=\"http://openwetware.org/wiki/Biogang%3aProjects/Bioinformatics_Career_Survey_2008\" rel=\"nofollow\">Bioinformatics Career survey 2008 by Michael Barton</a></li>\n</ul>", "html": "<p>This is also a very classic question: Which is your favorite programming language in bioinformatics? Which languages would you recommend to a student wishing to enter the world of bioinformatics?</p>\n\n<p>This topic has already been discussed on the Internet, but I think it would be nice to discuss it here. Here there are some links to previous polls and discussions:</p>\n\n<ul>\n<li><a href=\"http://www.bioinformatics.org/poll/index.php?dispid=17\" rel=\"nofollow\">Bioinformatics.org poll</a></li>\n<li><a href=\"http://openwetware.org/wiki/Biogang%3aProjects/Bioinformatics_Career_Survey_2008\" rel=\"nofollow\">Bioinformatics Career survey 2008 by Michael Barton</a></li>\n</ul>", "lastedit_user": 23}}, {"pk": 35, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 1, "views": 0, "author": 2, "creation_date": "2010-01-26 20:23:45", "content": "<p>Often people are limited to their choices by factors outside of their control. One lab that I work with requires the use of Mac computers another is using Windows mostly. Large scale computations seem to be best suited for Linux systems.</p>\n\n<p>Luckily there is a migration towards unified capabilities across all platforms. Installing Cygwin on Windows allows us to tap into the power of Unix, while Linux distros have advanced graphical user interfaces like Windows and Macs.</p>\n\n<p>From my own observations of non technical people, the installation of new and interdependent software packages seems to be the most difficult on Mac computers and easiest on Windows due to the computational architecture that makes all Windows computers identical. </p>", "html": "<p>Often people are limited to their choices by factors outside of their control. One lab that I work with requires the use of Mac computers another is using Windows mostly. Large scale computations seem to be best suited for Linux systems.</p>\n\n<p>Luckily there is a migration towards unified capabilities across all platforms. Installing Cygwin on Windows allows us to tap into the power of Unix, while Linux distros have advanced graphical user interfaces like Windows and Macs.</p>\n\n<p>From my own observations of non technical people, the installation of new and interdependent software packages seems to be the most difficult on Mac computers and easiest on Windows due to the computational architecture that makes all Windows computers identical. </p>", "lastedit_user": 2}}, {"pk": 36, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 2, "views": 0, "author": 2, "creation_date": "2010-01-26 20:32:29", "content": "<p>It is important to be considerate and not characterize one particular approach negatively. My favorite quote is:</p>\n\n<p><strong>Programming is pure thought.</strong></p>\n\n<p>Hopefully everyone is able to pick an approach that matches their individual way of thinking. While I myself do not program in Perl, I consider it to be one of the most popular and powerful platforms for doing bioinformatics analysis. </p>", "html": "<p>It is important to be considerate and not characterize one particular approach negatively. My favorite quote is:</p>\n\n<p><strong>Programming is pure thought.</strong></p>\n\n<p>Hopefully everyone is able to pick an approach that matches their individual way of thinking. While I myself do not program in Perl, I consider it to be one of the most popular and powerful platforms for doing bioinformatics analysis. </p>", "lastedit_user": 2}}, {"pk": 37, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 3, "views": 0, "author": 2, "creation_date": "2010-01-26 20:38:24", "content": "<p>Tips for installing software om Max OS X:</p>\n\n<ul>\n<li>install the Apple developer tools called <strong>Xcode</strong> <a href=\"http://developer.apple.com/tools/xcode/\" rel=\"nofollow\">http://developer.apple.com/tools/xcode/</a></li>\n<li>install <strong>MacPorts</strong> from <a href=\"http://www.macports.org/\" rel=\"nofollow\">http://www.macports.org/</a></li>\n</ul>\n\n<p>You can now easily install everything from command line using the <code>port</code> command. List all available software</p>\n\n<pre><code>port list\n</code></pre>\n\n<p>Install libraries and software. etc:</p>\n\n<pre><code>port install &lt;some-library&gt;\n</code></pre>", "html": "<p>Tips for installing software om Max OS X:</p>\n\n<ul>\n<li>install the Apple developer tools called <strong>Xcode</strong> <a href=\"http://developer.apple.com/tools/xcode/\" rel=\"nofollow\">http://developer.apple.com/tools/xcode/</a></li>\n<li>install <strong>MacPorts</strong> from <a href=\"http://www.macports.org/\" rel=\"nofollow\">http://www.macports.org/</a></li>\n</ul>\n\n<p>You can now easily install everything from command line using the <code>port</code> command. List all available software</p>\n\n<pre><code>port list\n</code></pre>\n\n<p>Install libraries and software. etc:</p>\n\n<pre><code>port install &lt;some-library&gt;\n</code></pre>", "lastedit_user": 2}}, {"pk": 38, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 3, "views": 0, "author": 25, "creation_date": "2010-01-26 23:42:14", "content": "<p>Any programming language is good as long you know what you're doing.</p>", "html": "<p>Any programming language is good as long you know what you're doing.</p>", "lastedit_user": 25}}, {"pk": 39, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 2, "views": 0, "author": 23, "creation_date": "2010-01-27 10:08:52", "content": "<p>You can also do it with the following services:</p>\n\n<ul>\n<li><a href=\"http://www.uniprot.org/?tab=mapping\" rel=\"nofollow\">uniprot</a> - Click on 'Id Mapping' from the home page.</li>\n<li><a href=\"http://www.biomart.org/biomart/martview/\" rel=\"nofollow\">biomart</a> - choose a database and a version, then put the ids you want to convert under Filters->Id List limit (select the proper input id in the menu), and then the output ids under 'Attributes'. Biomart is a general tool that enables you to extract a lot of different informations from databases - sequences, ontologies, transcripts, homologues - but maybe for converting gene ids is a bit too complex.</li>\n<li><a href=\"http://main.g2.bx.psu.edu/\" rel=\"nofollow\">galaxy</a> - I can't help too much about this here but I am sure it has a function for doing that - and many other things.</li>\n</ul>", "html": "<p>You can also do it with the following services:</p>\n\n<ul>\n<li><a href=\"http://www.uniprot.org/?tab=mapping\" rel=\"nofollow\">uniprot</a> - Click on 'Id Mapping' from the home page.</li>\n<li><a href=\"http://www.biomart.org/biomart/martview/\" rel=\"nofollow\">biomart</a> - choose a database and a version, then put the ids you want to convert under Filters->Id List limit (select the proper input id in the menu), and then the output ids under 'Attributes'. Biomart is a general tool that enables you to extract a lot of different informations from databases - sequences, ontologies, transcripts, homologues - but maybe for converting gene ids is a bit too complex.</li>\n<li><a href=\"http://main.g2.bx.psu.edu/\" rel=\"nofollow\">galaxy</a> - I can't help too much about this here but I am sure it has a function for doing that - and many other things.</li>\n</ul>", "lastedit_user": 23}}, {"pk": 40, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 1, "views": 0, "author": 23, "creation_date": "2010-01-28 15:31:50", "content": "<p>Meme has been the first program to be published for doing that.\nAs an alternative you can find one of the <a href=\"http://www.be.embnet.org/embosshelp/\" rel=\"nofollow\">EMBOSS tools</a>; if you are scared by a terminal and want to do it from a web-based interface, you can use the EMBOSS tools from <a href=\"http://main.g2.bx.psu.edu/\" rel=\"nofollow\">galaxy</a></p>", "html": "<p>Meme has been the first program to be published for doing that.\nAs an alternative you can find one of the <a href=\"http://www.be.embnet.org/embosshelp/\" rel=\"nofollow\">EMBOSS tools</a>; if you are scared by a terminal and want to do it from a web-based interface, you can use the EMBOSS tools from <a href=\"http://main.g2.bx.psu.edu/\" rel=\"nofollow\">galaxy</a></p>", "lastedit_user": 23}}, {"pk": 41, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 5, "views": 119, "author": 23, "creation_date": "2010-01-28 16:17:37", "content": "<p><a href=\"http://www.geneontology.org/\" rel=\"nofollow\">GeneOntology</a> is a nice project to provide a standard terminology for genes and gene functions, to help avoid the use of synonyms and wrong spelling when describing a gene.</p>\n\n<p>I have been using the GeneOntology for a while, but honestly I think that it contains many errors and that many terms have not enough terms associated. Moreover, the terminology they use is not always clear and there are some duplications.</p>\n\n<p>It is frequent to read in article or in slideshows charts were the GO classification is used to infer the properties of a set of genes... But I wonder if the authors check the GO annotations that they use.</p>\n\n<p>What is your experience about <a href=\"http://www.geneontology.org/\" rel=\"nofollow\">GO</a>?</p>", "html": "<p><a href=\"http://www.geneontology.org/\" rel=\"nofollow\">GeneOntology</a> is a nice project to provide a standard terminology for genes and gene functions, to help avoid the use of synonyms and wrong spelling when describing a gene.</p>\n\n<p>I have been using the GeneOntology for a while, but honestly I think that it contains many errors and that many terms have not enough terms associated. Moreover, the terminology they use is not always clear and there are some duplications.</p>\n\n<p>It is frequent to read in article or in slideshows charts were the GO classification is used to infer the properties of a set of genes... But I wonder if the authors check the GO annotations that they use.</p>\n\n<p>What is your experience about <a href=\"http://www.geneontology.org/\" rel=\"nofollow\">GO</a>?</p>", "lastedit_user": 23}}, {"pk": 42, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:35:57", "score": 0, "views": 0, "author": 23, "creation_date": "2010-01-28 16:22:04", "content": "<p>The StackExchange websites have been designed for making questions related to programming and technical issues.</p>\n\n<p>For example, for this reason, if you try to write a question which starts with 'What is your favorite experience...' you get a disclaimer saying that 'your question seems to be probably subjective and it is likely to be closed'.</p>\n\n<p>However, I think that it is very useful to make subjective and opinion-based questions on bioinformatics, as there are few places to do so... So, what is your policy? Will you accept subjective questions?</p>", "html": "<p>The StackExchange websites have been designed for making questions related to programming and technical issues.</p>\n\n<p>For example, for this reason, if you try to write a question which starts with 'What is your favorite experience...' you get a disclaimer saying that 'your question seems to be probably subjective and it is likely to be closed'.</p>\n\n<p>However, I think that it is very useful to make subjective and opinion-based questions on bioinformatics, as there are few places to do so... So, what is your policy? Will you accept subjective questions?</p>", "lastedit_user": 23}}, {"pk": 43, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 8, "views": 0, "author": 23, "creation_date": "2010-01-28 17:58:20", "content": "<p>The choice of a programming language is purely subjective, but when a student asks you which programming language he should start with, you have to make an answer, or at least provide some informations.</p>\n\n<p>I think that a bioinformatician who studies <strong>R</strong> and at least two or three libraries (lattice/ggplot2, plyr) early can have an advantage, because he will be able to represent his data properly and obtain good results without too much effort. If your supervisor is not a computer scientist, he will be a lot more impressed by plots and charts than by programs, even if they are well written, with unittests etc.</p>\n\n<p><strong>Python</strong> is a good programming language to learn as a general purpose tool. Its bigger advantages are its easy to read syntax, and its paradigm 'there is only one way to do it', so the number of language keywords is reduced to the minimum, and two programs with the same function written by different people will be very similar (which is what doesn't happen with perl). \nThe negative points of python are that its CSV files reading/plotting interface is not ready yet (the best is pylab), so you must rely on R to produce nice plots.</p>\n\n<p>Honestly I don't like <strong>perl</strong>, because I think it can induce to many bad-behaviours in novel programmers. For example, in perl there are many similar constructs to accomplish the same objective: so, it is very difficult to understand a program written by someone else, because you have to known all the possible constructs and hope there are enough comments. It is already very difficult to reproduce a bioinformatician experiment, if you write your code in a difficult language it is a lot worst. \nMoreover, I know of many people who have been using perl for years, but that don't even use functions, because it looks too complicated. How can it be? It looks very inefficient. \nThe only good point of perl is its repositories, bioperl and CPAN; however, I know of people using perl that don't even know of the existence of these, so I don't understand why they keep going with perl.</p>\n\n<p>Apart from programming language, is it very useful to learn the basic usage of <strong>gnu-make</strong>, or of a derivate. This program is very useful when you have lot of different scripts, as it allows you to define a pipeline in order to run them. \nSome basic <strong>bash commands</strong> may also be very useful if you work with a lot of flat files (head, sed, gawk, grep, ...)</p>", "html": "<p>The choice of a programming language is purely subjective, but when a student asks you which programming language he should start with, you have to make an answer, or at least provide some informations.</p>\n\n<p>I think that a bioinformatician who studies <strong>R</strong> and at least two or three libraries (lattice/ggplot2, plyr) early can have an advantage, because he will be able to represent his data properly and obtain good results without too much effort. If your supervisor is not a computer scientist, he will be a lot more impressed by plots and charts than by programs, even if they are well written, with unittests etc.</p>\n\n<p><strong>Python</strong> is a good programming language to learn as a general purpose tool. Its bigger advantages are its easy to read syntax, and its paradigm 'there is only one way to do it', so the number of language keywords is reduced to the minimum, and two programs with the same function written by different people will be very similar (which is what doesn't happen with perl). \nThe negative points of python are that its CSV files reading/plotting interface is not ready yet (the best is pylab), so you must rely on R to produce nice plots.</p>\n\n<p>Honestly I don't like <strong>perl</strong>, because I think it can induce to many bad-behaviours in novel programmers. For example, in perl there are many similar constructs to accomplish the same objective: so, it is very difficult to understand a program written by someone else, because you have to known all the possible constructs and hope there are enough comments. It is already very difficult to reproduce a bioinformatician experiment, if you write your code in a difficult language it is a lot worst. \nMoreover, I know of many people who have been using perl for years, but that don't even use functions, because it looks too complicated. How can it be? It looks very inefficient. \nThe only good point of perl is its repositories, bioperl and CPAN; however, I know of people using perl that don't even know of the existence of these, so I don't understand why they keep going with perl.</p>\n\n<p>Apart from programming language, is it very useful to learn the basic usage of <strong>gnu-make</strong>, or of a derivate. This program is very useful when you have lot of different scripts, as it allows you to define a pipeline in order to run them. \nSome basic <strong>bash commands</strong> may also be very useful if you work with a lot of flat files (head, sed, gawk, grep, ...)</p>", "lastedit_user": 23}}, {"pk": 44, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 1, "views": 0, "author": 2, "creation_date": "2010-01-28 22:41:29", "content": "<p>The GO terms and classifications are primarily an based on opinions and a human interpretation of a small group of people of what the current state of the knowledge is.Thus  are more subjective than say experimental measurements would be. </p>\n\n<p>In fact it is surprising that it works at all; and it does indeed.  We just need to becareful not too read to much into it.</p>", "html": "<p>The GO terms and classifications are primarily an based on opinions and a human interpretation of a small group of people of what the current state of the knowledge is.Thus  are more subjective than say experimental measurements would be. </p>\n\n<p>In fact it is surprising that it works at all; and it does indeed.  We just need to becareful not too read to much into it.</p>", "lastedit_user": 2}}, {"pk": 45, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 3, "views": 0, "author": 4, "creation_date": "2010-01-29 05:50:26", "content": "<p>In my experience it's case by case. In other words just because you are getting significant p-values, does not mean the results are biologically significant. I once submitted clusters of microarray data and received a bunch of hits that were significant by p-value, but really didn't have a theme. The GO terms I saw were from many different processes without an overall term (besides biological process) which linked them together. When I've looked at published GO terms searches I generally see a strong theme among many of the terms (however that doesn't necessarily mean it has biological significance until tested empirically). So seeing themes among your terms may suggest higher significance, but it should make biological sense too. </p>", "html": "<p>In my experience it's case by case. In other words just because you are getting significant p-values, does not mean the results are biologically significant. I once submitted clusters of microarray data and received a bunch of hits that were significant by p-value, but really didn't have a theme. The GO terms I saw were from many different processes without an overall term (besides biological process) which linked them together. When I've looked at published GO terms searches I generally see a strong theme among many of the terms (however that doesn't necessarily mean it has biological significance until tested empirically). So seeing themes among your terms may suggest higher significance, but it should make biological sense too. </p>", "lastedit_user": 4}}, {"pk": 46, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 3, "views": 93, "author": 23, "creation_date": "2010-01-29 11:42:23", "content": "<p>STRING is a database of predicted protein-protein interactions at EMBL. It cluster the results from many sources of protein-protein interactions databases, like Mint, etc.., and it also use the informations from KEGG-pathways and reactome, to provide the best annotations for the interactions of a protein.</p>\n\n<p>I am a bit confused from the results that I see there, because when I look at the genes in the pathway I am studying, I see many errors and annotations that I don't understand.</p>\n\n<p>What is your experience with STRING? If you want to do me a favor, go there and try to see the interactions annotated for a gene that you know already. Do you see anything weird?</p>", "html": "<p>STRING is a database of predicted protein-protein interactions at EMBL. It cluster the results from many sources of protein-protein interactions databases, like Mint, etc.., and it also use the informations from KEGG-pathways and reactome, to provide the best annotations for the interactions of a protein.</p>\n\n<p>I am a bit confused from the results that I see there, because when I look at the genes in the pathway I am studying, I see many errors and annotations that I don't understand.</p>\n\n<p>What is your experience with STRING? If you want to do me a favor, go there and try to see the interactions annotated for a gene that you know already. Do you see anything weird?</p>", "lastedit_user": 23}}, {"pk": 47, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 1, "views": 0, "author": 2, "creation_date": "2010-01-29 14:06:06", "content": "<p>I have not used STRING in particular but I have worked with protein interactions before (DIP dataset). I recall that even experimentally produced protein-protein interactions may have very large false positive ratios  (as for false negatives, who knows?) Some papers claim that up to 50% of the interactions were spurious; and repeated experiments showed very small overlaps. Predictions may be even less reliable.</p>\n\n<p>At the same time the DIP dataset performed substantially better if we only considered the interactions for which there were multiple sources of evidence, so that may be a strategy to consider in your case as well.</p>", "html": "<p>I have not used STRING in particular but I have worked with protein interactions before (DIP dataset). I recall that even experimentally produced protein-protein interactions may have very large false positive ratios  (as for false negatives, who knows?) Some papers claim that up to 50% of the interactions were spurious; and repeated experiments showed very small overlaps. Predictions may be even less reliable.</p>\n\n<p>At the same time the DIP dataset performed substantially better if we only considered the interactions for which there were multiple sources of evidence, so that may be a strategy to consider in your case as well.</p>", "lastedit_user": 2}}, {"pk": 48, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 2, "views": 157, "author": 23, "creation_date": "2010-02-12 17:33:06", "content": "<p>As in the title... I have a protein and I would like to know its secundary structure.\nI couldn't find it in uniprot, althought I tought they had annotations for it there.\nIn the end I have used a predictor (<a href=\"http://www.compbio.dundee.ac.uk/www-jpred\" rel=\"nofollow\">jpred</a>) but there it should be a database somewhere.</p>", "html": "<p>As in the title... I have a protein and I would like to know its secundary structure.\nI couldn't find it in uniprot, althought I tought they had annotations for it there.\nIn the end I have used a predictor (<a href=\"http://www.compbio.dundee.ac.uk/www-jpred\" rel=\"nofollow\">jpred</a>) but there it should be a database somewhere.</p>", "lastedit_user": 23}}, {"pk": 49, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 1, "views": 0, "author": 2, "creation_date": "2010-02-12 20:01:49", "content": "<p>Protein structure prediction is a complex issue that is likely to require multiple approaches. There are many methods/tools listed at the </p>\n\n<ul>\n<li><a href=\"http://www.expasy.ch/\" rel=\"nofollow\">Expert Protein Analysis System website</a></li>\n</ul>", "html": "<p>Protein structure prediction is a complex issue that is likely to require multiple approaches. There are many methods/tools listed at the </p>\n\n<ul>\n<li><a href=\"http://www.expasy.ch/\" rel=\"nofollow\">Expert Protein Analysis System website</a></li>\n</ul>", "lastedit_user": 2}}, {"pk": 50, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 3, "views": 0, "author": 26, "creation_date": "2010-02-12 21:57:06", "content": "<p>I think you found the best answer yourself: use a predictor! There are several out there...</p>\n\n<p>You suggest that there should be a Secondary Structure Database. I'm not sure that makes much sense, let me explain my point of view (which may not be that of everyone): most often, the data that is found in databases is the \"state of knowledge\" of the described object, based on experimentation.</p>\n\n<p>That may be the case for secondary structures of proteins, but only in the case where the said proteins have been crystalized. In those cases, it is not only the secondary structures but also the tertiary structures (with the caveat that the crystal structure of a protein does not prove \"all\" states that a protein may take in real \"dynamic\" physiological conditions).</p>\n\n<p>For all those proteins that have not been crystalized, then we can only rely on predictions. And I use them quite frequently: they are extremely useful! But as far as I know, no prediction is accepted as fact. They're \"educated guesses\" that are often correct, but sometimes wrong. The results may differ from one prediction method to another. Also they change each time the algorithms are improved...</p>\n\n<p>If there was a database of predicted secondary structures, people would likely take them for granted (make the equation prediction = fact) which would be quite \"unscientific\".</p>\n\n<p>I think such a resource would be more of a hindrance than an asset to the scientific community...</p>", "html": "<p>I think you found the best answer yourself: use a predictor! There are several out there...</p>\n\n<p>You suggest that there should be a Secondary Structure Database. I'm not sure that makes much sense, let me explain my point of view (which may not be that of everyone): most often, the data that is found in databases is the \"state of knowledge\" of the described object, based on experimentation.</p>\n\n<p>That may be the case for secondary structures of proteins, but only in the case where the said proteins have been crystalized. In those cases, it is not only the secondary structures but also the tertiary structures (with the caveat that the crystal structure of a protein does not prove \"all\" states that a protein may take in real \"dynamic\" physiological conditions).</p>\n\n<p>For all those proteins that have not been crystalized, then we can only rely on predictions. And I use them quite frequently: they are extremely useful! But as far as I know, no prediction is accepted as fact. They're \"educated guesses\" that are often correct, but sometimes wrong. The results may differ from one prediction method to another. Also they change each time the algorithms are improved...</p>\n\n<p>If there was a database of predicted secondary structures, people would likely take them for granted (make the equation prediction = fact) which would be quite \"unscientific\".</p>\n\n<p>I think such a resource would be more of a hindrance than an asset to the scientific community...</p>", "lastedit_user": 26}}, {"pk": 51, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 1, "views": 55, "author": 14, "creation_date": "2010-02-16 01:13:06", "content": "<p>I have a quick question:\nHow can I turn off search on reverse complement strand of my query nucleotide sequence in blastn?</p>\n\n<p>For example, I don't want 'GUAAAGCCAAAUCUUCGGUUA' to be a hit when I use 'UAACCGAAGAUUUGGCUUUAC' as the query.</p>\n\n<p>Maybe I missed it when I read the man page, but I really appreciate it if someone can point out the parameter I should use.</p>\n\n<p>Thanks!</p>", "html": "<p>I have a quick question:\nHow can I turn off search on reverse complement strand of my query nucleotide sequence in blastn?</p>\n\n<p>For example, I don't want 'GUAAAGCCAAAUCUUCGGUUA' to be a hit when I use 'UAACCGAAGAUUUGGCUUUAC' as the query.</p>\n\n<p>Maybe I missed it when I read the man page, but I really appreciate it if someone can point out the parameter I should use.</p>\n\n<p>Thanks!</p>", "lastedit_user": 14}}, {"pk": 52, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 1, "views": 0, "author": 2, "creation_date": "2010-02-16 02:31:37", "content": "<p>The -S flag can select the strands:</p>\n\n<pre><code>-S  Query strands to search against database \n    (for blast[nx], and tblastx) 3 is both, 1 is top, 2 is bottom [Integer]\n</code></pre>", "html": "<p>The -S flag can select the strands:</p>\n\n<pre><code>-S  Query strands to search against database \n    (for blast[nx], and tblastx) 3 is both, 1 is top, 2 is bottom [Integer]\n</code></pre>", "lastedit_user": 2}}, {"pk": 53, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 2, "views": 53, "author": 27, "creation_date": "2010-02-19 07:29:18", "content": "<p>The reads returned from the Solid sequencing provider are littered with dots and some bases have a negative quality value. Does anyone know if there is a good method to extract high quality regions from the reads without distorting the reading of bases in colour space?</p>", "html": "<p>The reads returned from the Solid sequencing provider are littered with dots and some bases have a negative quality value. Does anyone know if there is a good method to extract high quality regions from the reads without distorting the reading of bases in colour space?</p>", "lastedit_user": 27}}, {"pk": 54, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 1, "views": 0, "author": 27, "creation_date": "2010-02-19 07:31:24", "content": "<p>You can try BWA as well:\n<a href=\"http://maq.sourceforge.net/bwa-man.shtml\" rel=\"nofollow\">http://maq.sourceforge.net/bwa-man.shtml</a></p>", "html": "<p>You can try BWA as well:\n<a href=\"http://maq.sourceforge.net/bwa-man.shtml\" rel=\"nofollow\">http://maq.sourceforge.net/bwa-man.shtml</a></p>", "lastedit_user": 27}}, {"pk": 55, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 2, "views": 0, "author": 28, "creation_date": "2010-02-19 13:33:45", "content": "<p>The <a href=\"http://solidsoftwaretools.com/gf/project/saet/\" rel=\"nofollow\">Solid Accuracy Enhancer Tool</a> might be useful for this.</p>", "html": "<p>The <a href=\"http://solidsoftwaretools.com/gf/project/saet/\" rel=\"nofollow\">Solid Accuracy Enhancer Tool</a> might be useful for this.</p>", "lastedit_user": 28}}, {"pk": 56, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 3, "views": 80, "author": 23, "creation_date": "2010-02-21 16:13:39", "content": "<p>Let's say I want to download the fasta sequence of the region chr1:100000..200000 from the UCSC browser.\nHow do you do that? I can't find a button to 'export to fasta' in the UCSC genome browser. I think that the solution is to click on one of the tracks displayed, but I am not sure of which.\nIf I go to the Tables section, I can't find a table with the fasta sequences among the many.</p>", "html": "<p>Let's say I want to download the fasta sequence of the region chr1:100000..200000 from the UCSC browser.\nHow do you do that? I can't find a button to 'export to fasta' in the UCSC genome browser. I think that the solution is to click on one of the tracks displayed, but I am not sure of which.\nIf I go to the Tables section, I can't find a table with the fasta sequences among the many.</p>", "lastedit_user": 23}}, {"pk": 57, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 2, "views": 0, "author": 2, "creation_date": "2010-02-21 19:11:20", "content": "<p>The Genome Browser is for visualization.</p>\n\n<p>To get data in many formats use the <a href=\"http://genome.ucsc.edu/cgi-bin/hgTables?org=human\" rel=\"nofollow\">UCSC Table Browser</a> then select the output format of your choice.</p>\n\n<p>You may also need to select the right <strong>group</strong> and <strong>track</strong> to get the data you want.</p>", "html": "<p>The Genome Browser is for visualization.</p>\n\n<p>To get data in many formats use the <a href=\"http://genome.ucsc.edu/cgi-bin/hgTables?org=human\" rel=\"nofollow\">UCSC Table Browser</a> then select the output format of your choice.</p>\n\n<p>You may also need to select the right <strong>group</strong> and <strong>track</strong> to get the data you want.</p>", "lastedit_user": 2}}, {"pk": 58, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 1, "views": 205, "author": 23, "creation_date": "2010-02-25 15:39:15", "content": "<p>One of the most awful problems in my group is avoiding to rewrite scripts that have been already written by others. Since we have different projects and we work with different data, everybody ends up writing its own scripts in his favorite programming language, and it is very frequent to waste an afternoon on writing a new program and then discover that your workmate already had a script to do that.</p>\n\n<p>Apart from the most logical answer (\"talk with your workmates\"), we are thinking about having a common place to store our best scripts, and if possible work together on them.\nIt would be similar to an image library like this: <a href=\"http://matplotlib.sourceforge.net/gallery.html\" rel=\"nofollow\">http://matplotlib.sourceforge.net/gallery.html</a> , where to put the script and an example of its output (most of our scripts produce graphs), and if possible integrated with Git. </p>\n\n<p>Do you have any idea? How to you cope with the problem in your lab?</p>", "html": "<p>One of the most awful problems in my group is avoiding to rewrite scripts that have been already written by others. Since we have different projects and we work with different data, everybody ends up writing its own scripts in his favorite programming language, and it is very frequent to waste an afternoon on writing a new program and then discover that your workmate already had a script to do that.</p>\n\n<p>Apart from the most logical answer (\"talk with your workmates\"), we are thinking about having a common place to store our best scripts, and if possible work together on them.\nIt would be similar to an image library like this: <a href=\"http://matplotlib.sourceforge.net/gallery.html\" rel=\"nofollow\">http://matplotlib.sourceforge.net/gallery.html</a> , where to put the script and an example of its output (most of our scripts produce graphs), and if possible integrated with Git. </p>\n\n<p>Do you have any idea? How to you cope with the problem in your lab?</p>", "lastedit_user": 23}}, {"pk": 59, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 4, "views": 0, "author": 30, "creation_date": "2010-02-25 17:32:53", "content": "<p>Use the <strong>DAS</strong> server:</p>\n\n<p><a href=\"http://genome.ucsc.edu/cgi-bin/das/hg19/dna?segment=chr1:100000,200000\" rel=\"nofollow\">http://genome.ucsc.edu/cgi-bin/das/hg19/dna?segment=chr1:100000,200000</a></p>", "html": "<p>Use the <strong>DAS</strong> server:</p>\n\n<p><a href=\"http://genome.ucsc.edu/cgi-bin/das/hg19/dna?segment=chr1:100000,200000\" rel=\"nofollow\">http://genome.ucsc.edu/cgi-bin/das/hg19/dna?segment=chr1:100000,200000</a></p>", "lastedit_user": 30}}, {"pk": 60, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 1, "views": 0, "author": 31, "creation_date": "2010-02-25 17:51:28", "content": "<p>Some time ago I used SOMBRERO (<a href=\"http://bioinf.nuigalway.ie/sombrero/download.html\" rel=\"nofollow\">http://bioinf.nuigalway.ie/sombrero/download.html</a>) with a good degree of success on finding motifs in a very diverse set of sequences. They have a Mac version for download as well as parallel versions for Irix and Linux.</p>", "html": "<p>Some time ago I used SOMBRERO (<a href=\"http://bioinf.nuigalway.ie/sombrero/download.html\" rel=\"nofollow\">http://bioinf.nuigalway.ie/sombrero/download.html</a>) with a good degree of success on finding motifs in a very diverse set of sequences. They have a Mac version for download as well as parallel versions for Irix and Linux.</p>", "lastedit_user": 31}}, {"pk": 61, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 1, "views": 0, "author": 31, "creation_date": "2010-02-25 17:54:49", "content": "<p>I would recommend you to setup a wiki for your group. If you do not have a server readily you can always use one of the many wiki services available for free like Wikispaces (www.wikispaces.com).</p>", "html": "<p>I would recommend you to setup a wiki for your group. If you do not have a server readily you can always use one of the many wiki services available for free like Wikispaces (www.wikispaces.com).</p>", "lastedit_user": 31}}, {"pk": 62, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 2, "views": 0, "author": 2, "creation_date": "2010-02-25 18:24:46", "content": "<p>Integrating with the source code management tool is essential, that way when code gets changed everyone can easily get the updated version. Wikis are also a good idea.</p>", "html": "<p>Integrating with the source code management tool is essential, that way when code gets changed everyone can easily get the updated version. Wikis are also a good idea.</p>", "lastedit_user": 2}}, {"pk": 63, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 3, "views": 0, "author": 35, "creation_date": "2010-02-25 21:33:37", "content": "<p>I've been using STRING extensively, but not for protein-protein interactions work. STRING, as you note, is a bit of a mutt in terms of the different data sources it mines. Some that you're missing include a broad literature-based search, as well as gene expression data sets. So if you're interested primarily in physical interactions or any other single type of data source, STRING is a poor choice for your work. On the other hand, STRING does provide confidence scores for each association, as well as annotation for their data source types (with the license). So you can use those to filter out the interactions derived from data types you don't want to see.</p>", "html": "<p>I've been using STRING extensively, but not for protein-protein interactions work. STRING, as you note, is a bit of a mutt in terms of the different data sources it mines. Some that you're missing include a broad literature-based search, as well as gene expression data sets. So if you're interested primarily in physical interactions or any other single type of data source, STRING is a poor choice for your work. On the other hand, STRING does provide confidence scores for each association, as well as annotation for their data source types (with the license). So you can use those to filter out the interactions derived from data types you don't want to see.</p>", "lastedit_user": 35}}, {"pk": 64, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 3, "views": 0, "author": 35, "creation_date": "2010-02-25 21:41:22", "content": "<p>Perl can be quite lovely if you choose to write it well. If you find yourself in need of writing some perl, I'd highly recommend getting the Perl Best Practices book and going through it to learn how to make your perl code not suck. Essential tools for helping with that are perlcritic and perltidy, both of which I have bound to quick keystrokes in my emacs cperl-mode so as to make sure my code is in reasonably good shape. There's lots of blog articles out there about writing \"Modern Perl\" or \"Enlightened Perl\" that help make the language not just bearable but actually quite nice for a certain type of brain.</p>\n\n<p>One thing that Perl does very well that no other language does is quick text processing on the command line. If you want to do some simple processing of a text file (which is pretty standard in this business), perl is a fantastic package to do so. Stringing together a set of UNIX utilities on a Linux system will usually have you running for a half dozen manpages looking for conflicting and unique switches, where with perl I find that there's far less I have to remember to get the same effect. The book Minimal Perl goes in to this sort of thing in detail (perl as a better awk/sed/grep/etc) and I highly recommend having a look. At the very least, I've found that using perl in this fashion filled a hole in my toolkit that I didn't even realize was there. R and Python can, of course, do this sort of thing too, but not nearly so well as Perl.</p>", "html": "<p>Perl can be quite lovely if you choose to write it well. If you find yourself in need of writing some perl, I'd highly recommend getting the Perl Best Practices book and going through it to learn how to make your perl code not suck. Essential tools for helping with that are perlcritic and perltidy, both of which I have bound to quick keystrokes in my emacs cperl-mode so as to make sure my code is in reasonably good shape. There's lots of blog articles out there about writing \"Modern Perl\" or \"Enlightened Perl\" that help make the language not just bearable but actually quite nice for a certain type of brain.</p>\n\n<p>One thing that Perl does very well that no other language does is quick text processing on the command line. If you want to do some simple processing of a text file (which is pretty standard in this business), perl is a fantastic package to do so. Stringing together a set of UNIX utilities on a Linux system will usually have you running for a half dozen manpages looking for conflicting and unique switches, where with perl I find that there's far less I have to remember to get the same effect. The book Minimal Perl goes in to this sort of thing in detail (perl as a better awk/sed/grep/etc) and I highly recommend having a look. At the very least, I've found that using perl in this fashion filled a hole in my toolkit that I didn't even realize was there. R and Python can, of course, do this sort of thing too, but not nearly so well as Perl.</p>", "lastedit_user": 35}}, {"pk": 65, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 2, "views": 0, "author": 33, "creation_date": "2010-02-25 21:50:25", "content": "<p>My tip: install Cygwin if you are using Windows </p>", "html": "<p>My tip: install Cygwin if you are using Windows </p>", "lastedit_user": 33}}, {"pk": 66, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 2, "views": 0, "author": 33, "creation_date": "2010-02-25 21:52:10", "content": "<p>Who is running this site?</p>", "html": "<p>Who is running this site?</p>", "lastedit_user": 33}}, {"pk": 67, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 3, "views": 0, "author": 38, "creation_date": "2010-02-26 09:51:33", "content": "<p>All of the 3 major platforms have their advantages, and I use all 3 practically every day. Mac OS X is my primary desktop OS, for a number of reasons, but mostly because I just seem more productive using it than any of the alternatives. All of my coding work is done over SSH on Linux (almost exclusively Ubuntu) servers. The power of Aptitude package management, and the robustness of this platform means that there really is no other choice for this kind of work. Finally I run Windows 7 on my netbook, because it is an excellent OS for that platform, and enables me to do everything I want that machine to be capable of, note-taking, blog writing, as a display machine for Powerpoint etc. It is also useful to have Internet Explorer kicking around somewhere for compatability testing.</p>\n\n<p>I wouldn't consider using any machine that I didn't have admin rights on for work purposes, if I have to jump through hoops to get stuff installed, it just slows me down too much. This is another reason for using OS X for my primary desktop, it allows me to escape the University's \"Common Desktop\" policy for Windows PCs, which would take control of my computer out of my hands.</p>", "html": "<p>All of the 3 major platforms have their advantages, and I use all 3 practically every day. Mac OS X is my primary desktop OS, for a number of reasons, but mostly because I just seem more productive using it than any of the alternatives. All of my coding work is done over SSH on Linux (almost exclusively Ubuntu) servers. The power of Aptitude package management, and the robustness of this platform means that there really is no other choice for this kind of work. Finally I run Windows 7 on my netbook, because it is an excellent OS for that platform, and enables me to do everything I want that machine to be capable of, note-taking, blog writing, as a display machine for Powerpoint etc. It is also useful to have Internet Explorer kicking around somewhere for compatability testing.</p>\n\n<p>I wouldn't consider using any machine that I didn't have admin rights on for work purposes, if I have to jump through hoops to get stuff installed, it just slows me down too much. This is another reason for using OS X for my primary desktop, it allows me to escape the University's \"Common Desktop\" policy for Windows PCs, which would take control of my computer out of my hands.</p>", "lastedit_user": 38}}, {"pk": 68, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 2, "views": 0, "author": 38, "creation_date": "2010-02-26 10:07:14", "content": "<p>If you want to see the code, but also store associated information, such as expected outputs etc, then a wiki probably is the best choice (we prefer <a href=\"http://www.dokuwiki.org/dokuwiki\" rel=\"nofollow\">DokuWiki</a> here), although this would involve a lot of manual effort to document each script. </p>\n\n<p>Use of a site such as GitHub would give you version control + a handy place to read code, although it is not free to host private repositories there, which I guess is what the majority of labs would require. </p>\n\n<p>If privacy is not a concern, then I would consider GitHub <a href=\"http://gist.github.com/\" rel=\"nofollow\">gists</a> for code, which can then be embedded in a <a href=\"http://posterous.com/\" rel=\"nofollow\">Posterous</a> blog for comments. Posterous automatically unfolds Gist URLs into code samples in blog posts, so then you can annotate them easily. This would be a lot less manual effort than a wiki.</p>", "html": "<p>If you want to see the code, but also store associated information, such as expected outputs etc, then a wiki probably is the best choice (we prefer <a href=\"http://www.dokuwiki.org/dokuwiki\" rel=\"nofollow\">DokuWiki</a> here), although this would involve a lot of manual effort to document each script. </p>\n\n<p>Use of a site such as GitHub would give you version control + a handy place to read code, although it is not free to host private repositories there, which I guess is what the majority of labs would require. </p>\n\n<p>If privacy is not a concern, then I would consider GitHub <a href=\"http://gist.github.com/\" rel=\"nofollow\">gists</a> for code, which can then be embedded in a <a href=\"http://posterous.com/\" rel=\"nofollow\">Posterous</a> blog for comments. Posterous automatically unfolds Gist URLs into code samples in blog posts, so then you can annotate them easily. This would be a lot less manual effort than a wiki.</p>", "lastedit_user": 38}}, {"pk": 69, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 7, "views": 313, "author": 30, "creation_date": "2010-02-26 12:50:17", "content": "<p>Hi all,\nhas anobody ever used the <a href=\"http://www.hdfgroup.org/HDF5/\" rel=\"nofollow\">HDF5 API</a> to store some biological data (genotypes...). I know about this <a href=\"http://www.geospiza.com/finchtalk/2008/03/genotyping-with-hdf.html\" rel=\"nofollow\">kind of reference</a> (BioHDF...)  but I'm looking for some <strong>source code</strong> I could browse to understand how I can access data faster.</p>\n\n<p>Pierre</p>\n\n<p>PS: hum, I'm a new user. I'm not allowed to add the following tags: storage database hdf5 source code </p>", "html": "<p>Hi all,\nhas anobody ever used the <a href=\"http://www.hdfgroup.org/HDF5/\" rel=\"nofollow\">HDF5 API</a> to store some biological data (genotypes...). I know about this <a href=\"http://www.geospiza.com/finchtalk/2008/03/genotyping-with-hdf.html\" rel=\"nofollow\">kind of reference</a> (BioHDF...)  but I'm looking for some <strong>source code</strong> I could browse to understand how I can access data faster.</p>\n\n<p>Pierre</p>\n\n<p>PS: hum, I'm a new user. I'm not allowed to add the following tags: storage database hdf5 source code </p>", "lastedit_user": 30}}, {"pk": 70, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 2, "views": 0, "author": 40, "creation_date": "2010-02-26 13:15:16", "content": "<p>You might also want to setup a simple snippets database. Navysnip application by Jason Strutz is easy to install and run if you have ruby and rubyonrails installed.</p>\n\n<p>git clone git://github.com/navyrain/navysnip.git\n  cd navysnip\n  sudo rake gems:install\n  rake db:migrate\n  ruby script/server\nThen visit your app at <a href=\"http://localhost:3000\" rel=\"nofollow\">http://localhost:3000</a></p>\n\n<p>check out <a href=\"http://github.com/navyrain/navysnip\" rel=\"nofollow\">http://github.com/navyrain/navysnip</a>  for complete details</p>", "html": "<p>You might also want to setup a simple snippets database. Navysnip application by Jason Strutz is easy to install and run if you have ruby and rubyonrails installed.</p>\n\n<p>git clone git://github.com/navyrain/navysnip.git\n  cd navysnip\n  sudo rake gems:install\n  rake db:migrate\n  ruby script/server\nThen visit your app at <a href=\"http://localhost:3000\" rel=\"nofollow\">http://localhost:3000</a></p>\n\n<p>check out <a href=\"http://github.com/navyrain/navysnip\" rel=\"nofollow\">http://github.com/navyrain/navysnip</a>  for complete details</p>", "lastedit_user": 40}}, {"pk": 71, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 3, "views": 0, "author": 42, "creation_date": "2010-02-26 13:47:41", "content": "<p>Hello Pierre!</p>\n\n<p>I have been talking with the BioHDF guys and from what they tell me, their work will be centered around a number of command-line APIs, written in C, that will address some areas of usage which for now do not seem to overlap. </p>\n\n<p>I have seen this example on their site:\n<a href=\"http://www.hdfgroup.org/projects/biohdf/biohdf_tools.html\" rel=\"nofollow\">http://www.hdfgroup.org/projects/biohdf/biohdf_tools.html</a>\nDon't know if that helps.</p>\n\n<p>I have been talking with them to see if we can achieve an API for saving genotype data. Don't know yet where that will lead me.</p>\n\n<p>If you are looking for something more versatile, you will probably have to delve in the official HDF5 C code ( <a href=\"http://www.hdfgroup.org/HDF5/Tutor/\" rel=\"nofollow\">http://www.hdfgroup.org/HDF5/Tutor/</a> ), which seems to be the only one that offers all the functionality and goodies of that impressive storage system. </p>", "html": "<p>Hello Pierre!</p>\n\n<p>I have been talking with the BioHDF guys and from what they tell me, their work will be centered around a number of command-line APIs, written in C, that will address some areas of usage which for now do not seem to overlap. </p>\n\n<p>I have seen this example on their site:\n<a href=\"http://www.hdfgroup.org/projects/biohdf/biohdf_tools.html\" rel=\"nofollow\">http://www.hdfgroup.org/projects/biohdf/biohdf_tools.html</a>\nDon't know if that helps.</p>\n\n<p>I have been talking with them to see if we can achieve an API for saving genotype data. Don't know yet where that will lead me.</p>\n\n<p>If you are looking for something more versatile, you will probably have to delve in the official HDF5 C code ( <a href=\"http://www.hdfgroup.org/HDF5/Tutor/\" rel=\"nofollow\">http://www.hdfgroup.org/HDF5/Tutor/</a> ), which seems to be the only one that offers all the functionality and goodies of that impressive storage system. </p>", "lastedit_user": 42}}, {"pk": 72, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 1, "views": 0, "author": 23, "creation_date": "2010-02-26 13:54:03", "content": "<p>Unfortunately I don't have any example to shows you yet.\nI don't know how to program in C/C++ so I have been looking at two hdf5 wrappers in python, <a href=\"http://www.pytables.org/moin\" rel=\"nofollow\">PyTables</a> and <a href=\"http://h5py.alfven.org/\" rel=\"nofollow\">H5PY</a>.</p>\n\n<p>PyTables has a database-like approach in which HDF5 is used as a sort of hierarchical database, in which a column can be a table itself, allowing to store nested data. For example, you have a table called 'SNPs' with two columns, 'id' and 'genotypes'; the column 'genotypes' contains a nested table, with the columns 'individual' and 'genotype'; and so on.</p>\n\n<p>H5Py is basically a re-implementation of numpy's arrays, so you can store and access arrays/matrixes as you would do with numpy (it is similar to arrays and matrixes in matlab, R, and any other language with this data type) and they are stored in an HDF5 file so the access is faster.</p>", "html": "<p>Unfortunately I don't have any example to shows you yet.\nI don't know how to program in C/C++ so I have been looking at two hdf5 wrappers in python, <a href=\"http://www.pytables.org/moin\" rel=\"nofollow\">PyTables</a> and <a href=\"http://h5py.alfven.org/\" rel=\"nofollow\">H5PY</a>.</p>\n\n<p>PyTables has a database-like approach in which HDF5 is used as a sort of hierarchical database, in which a column can be a table itself, allowing to store nested data. For example, you have a table called 'SNPs' with two columns, 'id' and 'genotypes'; the column 'genotypes' contains a nested table, with the columns 'individual' and 'genotype'; and so on.</p>\n\n<p>H5Py is basically a re-implementation of numpy's arrays, so you can store and access arrays/matrixes as you would do with numpy (it is similar to arrays and matrixes in matlab, R, and any other language with this data type) and they are stored in an HDF5 file so the access is faster.</p>", "lastedit_user": 23}}, {"pk": 73, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 4, "views": 0, "author": 2, "creation_date": "2010-02-26 13:56:22", "content": "<p>In the <a href=\"http://code.google.com/p/genetrack/\" rel=\"nofollow\">GeneTrack</a> software we have used HDF to store values for each genomic base. Its main advantage over other storage systems was that it was able to return consecutive values with minimal overhead. </p>\n\n<p>For example it is <em>extremely fast</em> (ms) in retrieving say 100,000 consecutive values starting with a certain index.We used the <a href=\"http://www.pytables.org/moin\" rel=\"nofollow\">Python bindings</a> to HDF. An added advantage of these bindings is that they will return the data back as numpy arrays (very fast numerical operations). </p>\n\n<p>Here is the relevant code that deals with HDF only: <a href=\"http://code.google.com/p/genetrack/source/browse/trunk/atlas/hdf.py\" rel=\"nofollow\">hdf.py</a></p>\n\n<p>The HDF schema is set up in a different module, but in the end it simply something like:</p>\n\n<pre><code>class MySchema( IsDescription ):\n    \"\"\"\n    Stores a triplet of float values for each index.\n    \"\"\"\n    ix = IntCol  ( pos=1 )  # index\n    wx = FloatCol( pos=2 )  # values on the W (forward) strand\n    cx = FloatCol( pos=3 )  # value on the C (reverse) strand\n    ax = FloatCol( pos=4 )  # weighted value on the combined W + C strands\n</code></pre>", "html": "<p>In the <a href=\"http://code.google.com/p/genetrack/\" rel=\"nofollow\">GeneTrack</a> software we have used HDF to store values for each genomic base. Its main advantage over other storage systems was that it was able to return consecutive values with minimal overhead. </p>\n\n<p>For example it is <em>extremely fast</em> (ms) in retrieving say 100,000 consecutive values starting with a certain index.We used the <a href=\"http://www.pytables.org/moin\" rel=\"nofollow\">Python bindings</a> to HDF. An added advantage of these bindings is that they will return the data back as numpy arrays (very fast numerical operations). </p>\n\n<p>Here is the relevant code that deals with HDF only: <a href=\"http://code.google.com/p/genetrack/source/browse/trunk/atlas/hdf.py\" rel=\"nofollow\">hdf.py</a></p>\n\n<p>The HDF schema is set up in a different module, but in the end it simply something like:</p>\n\n<pre><code>class MySchema( IsDescription ):\n    \"\"\"\n    Stores a triplet of float values for each index.\n    \"\"\"\n    ix = IntCol  ( pos=1 )  # index\n    wx = FloatCol( pos=2 )  # values on the W (forward) strand\n    cx = FloatCol( pos=3 )  # value on the C (reverse) strand\n    ax = FloatCol( pos=4 )  # weighted value on the combined W + C strands\n</code></pre>", "lastedit_user": 2}}, {"pk": 74, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:01", "score": 4, "views": 0, "author": 42, "creation_date": "2010-02-26 14:26:41", "content": "<p>What I do have is a netCDF-3 based Java application that I could show you.\nNetCDF-3 is basically the same idea as HDF, but quite more limited as it cannot do compound datatypes among other limitations.</p>\n\n<p>But here's a small test code example to toy with:</p>\n\n<p>package netCDF;</p>\n\n<p>import java.io.File;\nimport ucar.ma2.<em>;\nimport ucar.nc2.</em>;\nimport java.io.IOException;\nimport java.util.ArrayList;</p>\n\n<p>/**\n *\n * @author Fernando Mu\u00f1iz Fernandez\n * IBE, Institute of Evolutionary Biology (UPF-CSIC)\n * CEXS-UPF-PRBB\n * \n * THIS TO CREATE THE netCDF-3 GENOTYPE FILE\n */\npublic class CreateNetcdf {</p>\n\n<pre><code> public static NetcdfFileWriteable setDimsAndAttributes(Integer studyId, \n                                      String technology, \n                                      String description, \n                                      String strand, \n                                      int sampleSetSize,\n                                      int markerSetSize) throws InvalidRangeException, IOException {\n\n    ///////////// CREATE netCDF-3 FILE ////////////\n    String genotypesFolder = \"/media/data/genotypes\";\n    File pathToStudy = new File(genotypesFolder+\"/netCDF_test\");\n    int gtSpan = constants.cNetCDF.Strides.STRIDE_GT;\n    int markerSpan = constants.cNetCDF.Strides.STRIDE_MARKER_NAME;\n    int sampleSpan = constants.cNetCDF.Strides.STRIDE_SAMPLE_NAME;\n\n    String matrixName = \"prototype\";\n    String writeFileName = pathToStudy+\"/\"+matrixName+\".nc\";\n    NetcdfFileWriteable ncfile = NetcdfFileWriteable.createNew(writeFileName, false);\n\n    // add dimensions\n    Dimension samplesDim = ncfile.addDimension(\"samples\", sampleSetSize);\n    Dimension markersDim = ncfile.addDimension(\"markers\", markerSetSize);\n    Dimension gtSpanDim = ncfile.addDimension(\"span\", gtSpan);\n    ArrayList dims = new ArrayList();\n    dims.add(samplesDim);\n    dims.add(markersDim);\n    dims.add(gtSpanDim);\n\n    ArrayList markerGenotypeDims = new ArrayList();\n    markerGenotypeDims.add(markersDim);\n    markerGenotypeDims.add(markerSpan);\n\n    ArrayList markerPositionDim = new ArrayList();\n    markerPositionDim.add(markersDim);\n\n    ArrayList markerPropertyDim32 = new ArrayList();\n    markerPropertyDim32.add(markersDim);\n    markerPropertyDim32.add(32);\n\n    ArrayList markerPropertyDim16 = new ArrayList();\n    markerPropertyDim16.add(markersDim);\n    markerPropertyDim16.add(16);\n\n    ArrayList markerPropertyDim8 = new ArrayList();\n    markerPropertyDim8.add(markersDim);\n    markerPropertyDim8.add(8);\n\n    ArrayList markerPropertyDim2 = new ArrayList();\n    markerPropertyDim2.add(markersDim);\n    markerPropertyDim2.add(2);\n\n    ArrayList markerPropertyDim1 = new ArrayList();\n    markerPropertyDim1.add(markersDim);\n    markerPropertyDim1.add(1);\n\n    ArrayList sampleSetDims = new ArrayList();\n    sampleSetDims.add(samplesDim);\n    sampleSetDims.add(sampleSpan);\n\n    // Define Marker Variables\n    ncfile.addVariable(\"markerset\", DataType.CHAR, markerGenotypeDims);\n    ncfile.addVariableAttribute(\"markerset\", constants.cNetCDF.Attributes.LENGTH, markerSetSize);\n\n    ncfile.addVariable(\"marker_chromosome\", DataType.CHAR, markerPropertyDim8);\n    ncfile.addVariable(\"marker_position\", DataType.CHAR, markerPropertyDim32);\n    ncfile.addVariable(\"marker_position_int\", DataType.INT, markerPositionDim);\n    ncfile.addVariable(\"marker_strand\", DataType.CHAR, markerPropertyDim8);\n\n    ncfile.addVariable(\"marker_property_1\", DataType.CHAR, markerPropertyDim1);\n    ncfile.addVariable(\"marker_property_2\", DataType.CHAR, markerPropertyDim2);\n    ncfile.addVariable(\"marker_property_8\", DataType.CHAR, markerPropertyDim8);\n    ncfile.addVariable(\"marker_property_16\", DataType.CHAR, markerPropertyDim16);\n    ncfile.addVariable(\"marker_property_32\", DataType.CHAR, markerPropertyDim32);\n\n    // Define Sample Variables\n    ncfile.addVariable(\"sampleset\", DataType.CHAR, sampleSetDims);\n    ncfile.addVariableAttribute(\"sampleset\", constants.cNetCDF.Attributes.LENGTH, sampleSetSize);\n\n    // Define Genotype Variables\n    ncfile.addVariable(\"genotypes\", DataType.CHAR, dims);\n    ncfile.addVariableAttribute(\"genotypes\", constants.cNetCDF.Attributes.GLOB_STRAND, \"+/-\");\n\n    // add global attributes\n    ncfile.addGlobalAttribute(constants.cNetCDF.Attributes.GLOB_STUDY, studyId);\n    ncfile.addGlobalAttribute(constants.cNetCDF.Attributes.GLOB_TECHNOLOGY, \"INTERNAL\");\n    ncfile.addGlobalAttribute(constants.cNetCDF.Attributes.GLOB_DESCRIPTION, \"Matrix created by MOAPI through addition of 2 matrices\");\n\n    return ncfile;\n\n}\n</code></pre>\n\n<p>}</p>\n\n<p>Use the above in the following way:</p>\n\n<p>package netCDF;</p>\n\n<p>import java.util.List;\nimport ucar.ma2.<em>;\nimport ucar.nc2.</em>;\nimport java.io.IOException;</p>\n\n<p>/**\n *\n * @author Fernando Mu\u00f1iz Fernandez\n * IBE, Institute of Evolutionary Biology (UPF-CSIC)\n * CEXS-UPF-PRBB\n * \n * THIS TO GENERATE A netCDF-3 GENOTYPE DB\n */</p>\n\n<p>public class TestWriteNetcdf {</p>\n\n<pre><code>public static void main(String[] arg) throws InvalidRangeException, IOException {\n\n    NetcdfFileWriteable ncfile = netCDF.CreateNetcdf.setDimsAndAttributes(0, \n                                                                      \"INTERNAL\", \n                                                                      \"test in TestWriteNetcdf\", \n                                                                      \"+/-\", \n                                                                      5,\n                                                                      10);\n\n    // create the file\n    try {\n        ncfile.create();\n    } catch (IOException e) {\n        System.err.println(\"ERROR creating file \"+ncfile.getLocation()+\"\\n\"+e);\n    }\n\n\n    ////////////// FILL'ER UP! ////////////////\n    List&lt;Dimension&gt; dims = ncfile.getDimensions();\n    Dimension samplesDim = dims.get(0);\n    Dimension markersDim = dims.get(1);\n    Dimension markerSpanDim = dims.get(2);\n\n    ArrayChar charArray = new ArrayChar.D3(samplesDim.getLength(),markersDim.getLength(),markerSpanDim.getLength());\n    int i,j;\n    Index ima = charArray.getIndex();\n\n\n    int method = 1;\n    switch (method) {\n        case 1: \n            // METHOD 1: Feed the complete genotype in one go\n            for (i=0; i&lt;samplesDim.getLength(); i++) {\n                for (j=0; j&lt;markersDim.getLength(); j++) {\n                    char c = (char) ((char) j + 65);\n                    String s = Character.toString(c) + Character.toString(c);\n                    charArray.setString(ima.set(i,j,0),s);\n                    System.out.println(\"SNP: \"+i);\n                }\n            }\n            break;\n        case 2: \n            //METHOD 2: One snp at a time -&gt; feed in all samples\n            for (i=0; i&lt;markersDim.getLength(); i++) {\n                charArray.setString(ima.set(i,0), \"s\"+i+\"I0\");\n                System.out.println(\"SNP: \"+i);\n            }\n            break;\n        case 3: \n            //METHOD 3: One sample at a time -&gt; feed in all snps\n            break;\n    }\n\n\n\n    int[] offsetOrigin = new int[3]; //0,0\n    try {\n        ncfile.write(\"genotypes\", offsetOrigin, charArray);\n        //ncfile.write(\"genotype\", origin, A);\n    } catch (IOException e) {\n        System.err.println(\"ERROR writing file\");\n    } catch (InvalidRangeException e) {\n        e.printStackTrace();\n    }\n\n    // close the file\n    try {\n        ncfile.close();\n    } catch (IOException e) {\n        System.err.println(\"ERROR creating file \"+ncfile.getLocation()+\"\\n\"+e);\n    }\n\n}\n</code></pre>\n\n<p>}</p>", "html": "<p>What I do have is a netCDF-3 based Java application that I could show you.\nNetCDF-3 is basically the same idea as HDF, but quite more limited as it cannot do compound datatypes among other limitations.</p>\n\n<p>But here's a small test code example to toy with:</p>\n\n<p>package netCDF;</p>\n\n<p>import java.io.File;\nimport ucar.ma2.<em>;\nimport ucar.nc2.</em>;\nimport java.io.IOException;\nimport java.util.ArrayList;</p>\n\n<p>/**\n *\n * @author Fernando Mu\u00f1iz Fernandez\n * IBE, Institute of Evolutionary Biology (UPF-CSIC)\n * CEXS-UPF-PRBB\n * \n * THIS TO CREATE THE netCDF-3 GENOTYPE FILE\n */\npublic class CreateNetcdf {</p>\n\n<pre><code> public static NetcdfFileWriteable setDimsAndAttributes(Integer studyId, \n                                      String technology, \n                                      String description, \n                                      String strand, \n                                      int sampleSetSize,\n                                      int markerSetSize) throws InvalidRangeException, IOException {\n\n    ///////////// CREATE netCDF-3 FILE ////////////\n    String genotypesFolder = \"/media/data/genotypes\";\n    File pathToStudy = new File(genotypesFolder+\"/netCDF_test\");\n    int gtSpan = constants.cNetCDF.Strides.STRIDE_GT;\n    int markerSpan = constants.cNetCDF.Strides.STRIDE_MARKER_NAME;\n    int sampleSpan = constants.cNetCDF.Strides.STRIDE_SAMPLE_NAME;\n\n    String matrixName = \"prototype\";\n    String writeFileName = pathToStudy+\"/\"+matrixName+\".nc\";\n    NetcdfFileWriteable ncfile = NetcdfFileWriteable.createNew(writeFileName, false);\n\n    // add dimensions\n    Dimension samplesDim = ncfile.addDimension(\"samples\", sampleSetSize);\n    Dimension markersDim = ncfile.addDimension(\"markers\", markerSetSize);\n    Dimension gtSpanDim = ncfile.addDimension(\"span\", gtSpan);\n    ArrayList dims = new ArrayList();\n    dims.add(samplesDim);\n    dims.add(markersDim);\n    dims.add(gtSpanDim);\n\n    ArrayList markerGenotypeDims = new ArrayList();\n    markerGenotypeDims.add(markersDim);\n    markerGenotypeDims.add(markerSpan);\n\n    ArrayList markerPositionDim = new ArrayList();\n    markerPositionDim.add(markersDim);\n\n    ArrayList markerPropertyDim32 = new ArrayList();\n    markerPropertyDim32.add(markersDim);\n    markerPropertyDim32.add(32);\n\n    ArrayList markerPropertyDim16 = new ArrayList();\n    markerPropertyDim16.add(markersDim);\n    markerPropertyDim16.add(16);\n\n    ArrayList markerPropertyDim8 = new ArrayList();\n    markerPropertyDim8.add(markersDim);\n    markerPropertyDim8.add(8);\n\n    ArrayList markerPropertyDim2 = new ArrayList();\n    markerPropertyDim2.add(markersDim);\n    markerPropertyDim2.add(2);\n\n    ArrayList markerPropertyDim1 = new ArrayList();\n    markerPropertyDim1.add(markersDim);\n    markerPropertyDim1.add(1);\n\n    ArrayList sampleSetDims = new ArrayList();\n    sampleSetDims.add(samplesDim);\n    sampleSetDims.add(sampleSpan);\n\n    // Define Marker Variables\n    ncfile.addVariable(\"markerset\", DataType.CHAR, markerGenotypeDims);\n    ncfile.addVariableAttribute(\"markerset\", constants.cNetCDF.Attributes.LENGTH, markerSetSize);\n\n    ncfile.addVariable(\"marker_chromosome\", DataType.CHAR, markerPropertyDim8);\n    ncfile.addVariable(\"marker_position\", DataType.CHAR, markerPropertyDim32);\n    ncfile.addVariable(\"marker_position_int\", DataType.INT, markerPositionDim);\n    ncfile.addVariable(\"marker_strand\", DataType.CHAR, markerPropertyDim8);\n\n    ncfile.addVariable(\"marker_property_1\", DataType.CHAR, markerPropertyDim1);\n    ncfile.addVariable(\"marker_property_2\", DataType.CHAR, markerPropertyDim2);\n    ncfile.addVariable(\"marker_property_8\", DataType.CHAR, markerPropertyDim8);\n    ncfile.addVariable(\"marker_property_16\", DataType.CHAR, markerPropertyDim16);\n    ncfile.addVariable(\"marker_property_32\", DataType.CHAR, markerPropertyDim32);\n\n    // Define Sample Variables\n    ncfile.addVariable(\"sampleset\", DataType.CHAR, sampleSetDims);\n    ncfile.addVariableAttribute(\"sampleset\", constants.cNetCDF.Attributes.LENGTH, sampleSetSize);\n\n    // Define Genotype Variables\n    ncfile.addVariable(\"genotypes\", DataType.CHAR, dims);\n    ncfile.addVariableAttribute(\"genotypes\", constants.cNetCDF.Attributes.GLOB_STRAND, \"+/-\");\n\n    // add global attributes\n    ncfile.addGlobalAttribute(constants.cNetCDF.Attributes.GLOB_STUDY, studyId);\n    ncfile.addGlobalAttribute(constants.cNetCDF.Attributes.GLOB_TECHNOLOGY, \"INTERNAL\");\n    ncfile.addGlobalAttribute(constants.cNetCDF.Attributes.GLOB_DESCRIPTION, \"Matrix created by MOAPI through addition of 2 matrices\");\n\n    return ncfile;\n\n}\n</code></pre>\n\n<p>}</p>\n\n<p>Use the above in the following way:</p>\n\n<p>package netCDF;</p>\n\n<p>import java.util.List;\nimport ucar.ma2.<em>;\nimport ucar.nc2.</em>;\nimport java.io.IOException;</p>\n\n<p>/**\n *\n * @author Fernando Mu\u00f1iz Fernandez\n * IBE, Institute of Evolutionary Biology (UPF-CSIC)\n * CEXS-UPF-PRBB\n * \n * THIS TO GENERATE A netCDF-3 GENOTYPE DB\n */</p>\n\n<p>public class TestWriteNetcdf {</p>\n\n<pre><code>public static void main(String[] arg) throws InvalidRangeException, IOException {\n\n    NetcdfFileWriteable ncfile = netCDF.CreateNetcdf.setDimsAndAttributes(0, \n                                                                      \"INTERNAL\", \n                                                                      \"test in TestWriteNetcdf\", \n                                                                      \"+/-\", \n                                                                      5,\n                                                                      10);\n\n    // create the file\n    try {\n        ncfile.create();\n    } catch (IOException e) {\n        System.err.println(\"ERROR creating file \"+ncfile.getLocation()+\"\\n\"+e);\n    }\n\n    ////////////// FILL'ER UP! ////////////////\n    List&lt;Dimension&gt; dims = ncfile.getDimensions();\n    Dimension samplesDim = dims.get(0);\n    Dimension markersDim = dims.get(1);\n    Dimension markerSpanDim = dims.get(2);\n\n    ArrayChar charArray = new ArrayChar.D3(samplesDim.getLength(),markersDim.getLength(),markerSpanDim.getLength());\n    int i,j;\n    Index ima = charArray.getIndex();\n\n    int method = 1;\n    switch (method) {\n        case 1: \n            // METHOD 1: Feed the complete genotype in one go\n            for (i=0; i&lt;samplesDim.getLength(); i++) {\n                for (j=0; j&lt;markersDim.getLength(); j++) {\n                    char c = (char) ((char) j + 65);\n                    String s = Character.toString(c) + Character.toString(c);\n                    charArray.setString(ima.set(i,j,0),s);\n                    System.out.println(\"SNP: \"+i);\n                }\n            }\n            break;\n        case 2: \n            //METHOD 2: One snp at a time -&gt; feed in all samples\n            for (i=0; i&lt;markersDim.getLength(); i++) {\n                charArray.setString(ima.set(i,0), \"s\"+i+\"I0\");\n                System.out.println(\"SNP: \"+i);\n            }\n            break;\n        case 3: \n            //METHOD 3: One sample at a time -&gt; feed in all snps\n            break;\n    }\n\n    int[] offsetOrigin = new int[3]; //0,0\n    try {\n        ncfile.write(\"genotypes\", offsetOrigin, charArray);\n        //ncfile.write(\"genotype\", origin, A);\n    } catch (IOException e) {\n        System.err.println(\"ERROR writing file\");\n    } catch (InvalidRangeException e) {\n        e.printStackTrace();\n    }\n\n    // close the file\n    try {\n        ncfile.close();\n    } catch (IOException e) {\n        System.err.println(\"ERROR creating file \"+ncfile.getLocation()+\"\\n\"+e);\n    }\n\n}\n</code></pre>\n\n<p>}</p>", "lastedit_user": 42}}, {"pk": 75, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 1, "views": 0, "author": 26, "creation_date": "2010-02-26 14:44:01", "content": "<p>This is an excellent initiative: congratulations and thank you for setting it up!</p>\n\n<p>I guess this site will be all the more useful as there are more contributers... So I guess that good questions for the administrator(s) of this site are: </p>\n\n<ul>\n<li>Do you have a plan for advertising this site/attracting new Users?</li>\n<li>How can the Users help?</li>\n</ul>", "html": "<p>This is an excellent initiative: congratulations and thank you for setting it up!</p>\n\n<p>I guess this site will be all the more useful as there are more contributers... So I guess that good questions for the administrator(s) of this site are: </p>\n\n<ul>\n<li>Do you have a plan for advertising this site/attracting new Users?</li>\n<li>How can the Users help?</li>\n</ul>", "lastedit_user": 26}}, {"pk": 76, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 3, "views": 77, "author": 30, "creation_date": "2010-02-26 15:37:25", "content": "<p>Hi all,\nI'd like to create a very simple plugin for <a href=\"http://www.taverna.org.uk/\" rel=\"nofollow\">Taverna 2.0</a>, something very simple like like implementing a 'convertDnaToRna'. There is already some source code that can be found on the net e.g. Egon Willighagen's code at <a href=\"http://github.com/egonw/cdk-taverna\" rel=\"nofollow\">http://github.com/egonw/cdk-taverna</a> but it requires to know <strong>Maven</strong> and.... I'm too <strong>lazy</strong> :-)</p>\n\n<p>How can I implement this kind of simple plugin without maven ? ( I <em>just</em> want to compile, package &amp; create the right XML config files)</p>\n\n<p>Thanks !</p>", "html": "<p>Hi all,\nI'd like to create a very simple plugin for <a href=\"http://www.taverna.org.uk/\" rel=\"nofollow\">Taverna 2.0</a>, something very simple like like implementing a 'convertDnaToRna'. There is already some source code that can be found on the net e.g. Egon Willighagen's code at <a href=\"http://github.com/egonw/cdk-taverna\" rel=\"nofollow\">http://github.com/egonw/cdk-taverna</a> but it requires to know <strong>Maven</strong> and.... I'm too <strong>lazy</strong> :-)</p>\n\n<p>How can I implement this kind of simple plugin without maven ? ( I <em>just</em> want to compile, package &amp; create the right XML config files)</p>\n\n<p>Thanks !</p>", "lastedit_user": 30}}, {"pk": 77, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 2, "views": 111, "author": 44, "creation_date": "2010-02-26 15:49:18", "content": "<p>I have some illumina data generated from the latest version of the illumina pipeline (1.6.0) I need to convert my data into BED to view in ucsc genome browser.</p>\n\n<p>This seems like it should be a fairly common task, however, I am unable to find any scripts to convert my data.</p>", "html": "<p>I have some illumina data generated from the latest version of the illumina pipeline (1.6.0) I need to convert my data into BED to view in ucsc genome browser.</p>\n\n<p>This seems like it should be a fairly common task, however, I am unable to find any scripts to convert my data.</p>", "lastedit_user": 44}}, {"pk": 78, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 2, "views": 0, "author": 10, "creation_date": "2010-02-26 16:15:18", "content": "<p>I found a script <a href=\"http://mng.iop.kcl.ac.uk/site/node/378\" rel=\"nofollow\">on another site</a>, Uses perl but I have not checked for correctness:</p>\n\n<pre><code>#!/usr/bin/perl\n\nuse strict;\nuse warnings;\nuse IO::File;\n\nmy $filename = shift @ARGV;\ndie \"Usage\\n\\tperl sorted2bed.pl s_X_sorted.txt &gt; s_X_sorted.bed\\n\" unless $filename;\nchomp $filename;\n\nmy $fh = new IO::File;\n$fh-&gt;open(\"&lt; $filename\") or die \"Can't open file $filename for reading: $!\";\n\nmy $count = 1;\nwhile(my $line = &lt;$fh&gt;){\n   warn \"Line $count\\n\" if $count%1000 == 0;\n   $count++;\n   my @line = split \"\\t\", $line;\n   my $chr = $line[10];\n   $chr =~ s/(.+)\\.fa/$1/;\n   #Illumina is 1-based, BED is 0-based\n   my $start = $line[12]-1;\n   my $read = $line[8];\n   my $end = $start + length $read;\n   my $strand = $line[13] eq 'F' ? '+': '-';\n   my $score = $line[15];\n   my $bedline = \"$chr\\t$start\\t$end\\t$read\\t$score\\t$strand\\n\";\n   print $bedline;\n}\n$fh-&gt;close;\n\nwarn \"Done\";\n</code></pre>", "html": "<p>I found a script <a href=\"http://mng.iop.kcl.ac.uk/site/node/378\" rel=\"nofollow\">on another site</a>, Uses perl but I have not checked for correctness:</p>\n\n<pre><code>#!/usr/bin/perl\n\nuse strict;\nuse warnings;\nuse IO::File;\n\nmy $filename = shift @ARGV;\ndie \"Usage\\n\\tperl sorted2bed.pl s_X_sorted.txt &gt; s_X_sorted.bed\\n\" unless $filename;\nchomp $filename;\n\nmy $fh = new IO::File;\n$fh-&gt;open(\"&lt; $filename\") or die \"Can't open file $filename for reading: $!\";\n\nmy $count = 1;\nwhile(my $line = &lt;$fh&gt;){\n   warn \"Line $count\\n\" if $count%1000 == 0;\n   $count++;\n   my @line = split \"\\t\", $line;\n   my $chr = $line[10];\n   $chr =~ s/(.+)\\.fa/$1/;\n   #Illumina is 1-based, BED is 0-based\n   my $start = $line[12]-1;\n   my $read = $line[8];\n   my $end = $start + length $read;\n   my $strand = $line[13] eq 'F' ? '+': '-';\n   my $score = $line[15];\n   my $bedline = \"$chr\\t$start\\t$end\\t$read\\t$score\\t$strand\\n\";\n   print $bedline;\n}\n$fh-&gt;close;\n\nwarn \"Done\";\n</code></pre>", "lastedit_user": 10}}, {"pk": 79, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 6, "views": 276, "author": 23, "creation_date": "2010-02-26 16:49:35", "content": "<p>In bioinformatics it is very common to end up with a lot of small scripts, each one with a different scope - plotting a chart, converting a file into another format, execute small operations - so it is very important to have a good way to clue them together, to define which should be executed before the others and so on.</p>\n\n<p>How do you deal with the problem? Do you use makefiles, taverna workflows, batch scripts, or any other solution?</p>", "html": "<p>In bioinformatics it is very common to end up with a lot of small scripts, each one with a different scope - plotting a chart, converting a file into another format, execute small operations - so it is very important to have a good way to clue them together, to define which should be executed before the others and so on.</p>\n\n<p>How do you deal with the problem? Do you use makefiles, taverna workflows, batch scripts, or any other solution?</p>", "lastedit_user": 23}}, {"pk": 80, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 5, "views": 0, "author": 2, "creation_date": "2010-02-26 16:58:09", "content": "<p>I don't have personal experience with this package but it is something that I plan to explore in the near future:</p>\n\n<p><strong><a href=\"http://code.google.com/p/ruffus/\" rel=\"nofollow\">Ruffus </a></strong> a lightweight python module to run computational pipelines. </p>", "html": "<p>I don't have personal experience with this package but it is something that I plan to explore in the near future:</p>\n\n<p><strong><a href=\"http://code.google.com/p/ruffus/\" rel=\"nofollow\">Ruffus </a></strong> a lightweight python module to run computational pipelines. </p>", "lastedit_user": 2}}, {"pk": 81, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 6, "views": 0, "author": 23, "creation_date": "2010-02-26 17:03:52", "content": "<p>My favorite way of defining pipelines is by writing Makefiles, about which you can find <a href=\"http://software-carpentry.org/build.html\" rel=\"nofollow\">a very good introduction</a> in Software Carpentry for Bioinformatics: <a href=\"http://swc.scipy.org/lec/build.html\" rel=\"nofollow\">http://swc.scipy.org/lec/build.html</a> .</p>\n\n<p>Although they have been originally developed for compiling programs, Makefiles allow to define which operations are needed to create each file, with a declarative syntax that it is a bit old-style but still does its job. Each Makefile is composed of a set of rules, which define operations needed to calculate a file and that can be combined together to make a pipeline. Other advantages of makefiles are conditional execution of tasks, so you can stop the execution of a pipeline and get back to it later, without having to repeat calculations. However, one of the big disadvantages of Makefiles is its old syntax... in particular, rules are identified by the names of the files that they create, and there is no such thing as 'titles' for rules, which make more tricky.</p>\n\n<p>I think one of the best solutions would be to use <a href=\"http://skam.sourceforge.net/skam-intro.html\" rel=\"nofollow\">BioMake</a>, that allow to define tasks with titles that are not the name of the output files. To understand it better, look at <a href=\"http://skam.sourceforge.net/skam-intro.html\" rel=\"nofollow\">this example</a>: you see that each rule has a title and a series of parameters like its output, inputs, comments, etc.</p>\n\n<p>Unfortunately, I can't make biomake to run on my computer, as it requires very old dependencies and it is written in a very difficult perl. I have tried many alternatives and I think that <a href=\"http://rake.rubyforge.org/files/doc/rational_rdoc.html\" rel=\"nofollow\">rake</a> is the one that is more close to biomake, but unfortunately I don't understand ruby's syntax. </p>\n\n<p>So, I am still looking for a good alternative... Maybe one day I will have to time to re-write BioMake in python :-)</p>", "html": "<p>My favorite way of defining pipelines is by writing Makefiles, about which you can find <a href=\"http://software-carpentry.org/build.html\" rel=\"nofollow\">a very good introduction</a> in Software Carpentry for Bioinformatics: <a href=\"http://swc.scipy.org/lec/build.html\" rel=\"nofollow\">http://swc.scipy.org/lec/build.html</a> .</p>\n\n<p>Although they have been originally developed for compiling programs, Makefiles allow to define which operations are needed to create each file, with a declarative syntax that it is a bit old-style but still does its job. Each Makefile is composed of a set of rules, which define operations needed to calculate a file and that can be combined together to make a pipeline. Other advantages of makefiles are conditional execution of tasks, so you can stop the execution of a pipeline and get back to it later, without having to repeat calculations. However, one of the big disadvantages of Makefiles is its old syntax... in particular, rules are identified by the names of the files that they create, and there is no such thing as 'titles' for rules, which make more tricky.</p>\n\n<p>I think one of the best solutions would be to use <a href=\"http://skam.sourceforge.net/skam-intro.html\" rel=\"nofollow\">BioMake</a>, that allow to define tasks with titles that are not the name of the output files. To understand it better, look at <a href=\"http://skam.sourceforge.net/skam-intro.html\" rel=\"nofollow\">this example</a>: you see that each rule has a title and a series of parameters like its output, inputs, comments, etc.</p>\n\n<p>Unfortunately, I can't make biomake to run on my computer, as it requires very old dependencies and it is written in a very difficult perl. I have tried many alternatives and I think that <a href=\"http://rake.rubyforge.org/files/doc/rational_rdoc.html\" rel=\"nofollow\">rake</a> is the one that is more close to biomake, but unfortunately I don't understand ruby's syntax. </p>\n\n<p>So, I am still looking for a good alternative... Maybe one day I will have to time to re-write BioMake in python :-)</p>", "lastedit_user": 23}}, {"pk": 82, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 3, "views": 0, "author": 47, "creation_date": "2010-02-26 17:04:53", "content": "<p>Since I work a lot with Python, I usually write a wrapper method that embeds the external script/program, i.e. calls it, parses its output and returns the desired information. The 'glueing' of several such methods then takes place within my Python code that calls all these wrappers. I guess that's a very common thing to do.</p>\n\n<p>Chris</p>", "html": "<p>Since I work a lot with Python, I usually write a wrapper method that embeds the external script/program, i.e. calls it, parses its output and returns the desired information. The 'glueing' of several such methods then takes place within my Python code that calls all these wrappers. I guess that's a very common thing to do.</p>\n\n<p>Chris</p>", "lastedit_user": 47}}, {"pk": 83, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 4, "views": 0, "author": 7, "creation_date": "2010-02-26 17:16:41", "content": "<p>If you have the PDB file then you can use the standard tool called DSSP , it is supposed to be the gold standard for obtaining secondary structure. In case you just have sequence then I personally prefer PSIPRED , it takes evolutionary information into account to predict the secondary structure . According to CASP evaluation it is one of the best secondary structure predictor available.</p>", "html": "<p>If you have the PDB file then you can use the standard tool called DSSP , it is supposed to be the gold standard for obtaining secondary structure. In case you just have sequence then I personally prefer PSIPRED , it takes evolutionary information into account to predict the secondary structure . According to CASP evaluation it is one of the best secondary structure predictor available.</p>", "lastedit_user": 7}}, {"pk": 84, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 5, "views": 0, "author": 53, "creation_date": "2010-02-26 20:16:31", "content": "<p>My answer would be: don't bother. I've often found that much of the scripts I write are never used again after the initial use. Therefore spending time using a complex framework that considers dependency between scripts is a waste because the results might be negative and you never visit the analysis again. Even if you do end up using the script multiple times a simple hacky bash script might be more than enough to meet the requirements.</p>\n\n<p>There will however be the 1-2% of initial analyses that return a interesting result and therefore need to be expanded with more deeper investigation. I think this is the point to invest more time time in organising the project. For me I use Rake because it's simple and allows me to write in the language I'm used to (Ruby).</p>\n\n<p>Overall I think pragmatism is the important factor in computational biology. Just do enough to get the results you need and only invest more time when it's necessary. There's so many blind alleys in computational analysis of biological data it's not worth investing too much of your time until it's necessary.</p>", "html": "<p>My answer would be: don't bother. I've often found that much of the scripts I write are never used again after the initial use. Therefore spending time using a complex framework that considers dependency between scripts is a waste because the results might be negative and you never visit the analysis again. Even if you do end up using the script multiple times a simple hacky bash script might be more than enough to meet the requirements.</p>\n\n<p>There will however be the 1-2% of initial analyses that return a interesting result and therefore need to be expanded with more deeper investigation. I think this is the point to invest more time time in organising the project. For me I use Rake because it's simple and allows me to write in the language I'm used to (Ruby).</p>\n\n<p>Overall I think pragmatism is the important factor in computational biology. Just do enough to get the results you need and only invest more time when it's necessary. There's so many blind alleys in computational analysis of biological data it's not worth investing too much of your time until it's necessary.</p>", "lastedit_user": 53}}, {"pk": 85, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 2, "views": 0, "author": 24, "creation_date": "2010-02-26 20:27:32", "content": "<p>My lab uses a network-attached storage unit which every Linux workstation mounts by NFS at startup. It was reasonably cheap -- a couple hundred dollars per TB. We also keep copies of public databases on there. We put data sets on there as we're working on them, and also put the more important scripts in a Mercurial repositiory.</p>\n\n<p>As Marcos and Istvan mentioned, a wiki integrated with your VCS would be wise, and Trac (trac.edgewall.org) is the obvious choice for that.</p>", "html": "<p>My lab uses a network-attached storage unit which every Linux workstation mounts by NFS at startup. It was reasonably cheap -- a couple hundred dollars per TB. We also keep copies of public databases on there. We put data sets on there as we're working on them, and also put the more important scripts in a Mercurial repositiory.</p>\n\n<p>As Marcos and Istvan mentioned, a wiki integrated with your VCS would be wise, and Trac (trac.edgewall.org) is the obvious choice for that.</p>", "lastedit_user": 24}}, {"pk": 86, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 2, "views": 0, "author": 7, "creation_date": "2010-02-26 20:44:04", "content": "<p>This might be useful .</p>\n\n<p><a href=\"http://www.ploscompbiol.org/article/info%3Adoi%2F10.1371%2Fjournal.pcbi.1000424\" rel=\"nofollow\">A Quick Guide to Organizing Computational Biology Projects</a></p>", "html": "<p>This might be useful .</p>\n\n<p><a href=\"http://www.ploscompbiol.org/article/info%3Adoi%2F10.1371%2Fjournal.pcbi.1000424\" rel=\"nofollow\">A Quick Guide to Organizing Computational Biology Projects</a></p>", "lastedit_user": 7}}, {"pk": 87, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 2, "views": 0, "author": 55, "creation_date": "2010-02-27 21:00:56", "content": "<p>There is also a Perl binding to HDF5: PDL::IO::HDF5</p>\n\n<p><a href=\"http://search.cpan.org/~cerney/PDL-IO-HDF5-0.5/\" rel=\"nofollow\">http://search.cpan.org/~cerney/PDL-IO-HDF5-0.5/</a>\nThis requires the Perl Data Language (PDL) package. The way, data-structures can be handled, sub-ranges of data can be defined  an data can be manipulated is actually very elegant in PDL such that computational code can profit from PDLs vectorized style of writing expressions.</p>\n\n<p>The same is true for R and the hdf5 package: <a href=\"http://cran.r-project.org/web/packages/hdf5/index.html\" rel=\"nofollow\">http://cran.r-project.org/web/packages/hdf5/index.html</a></p>\n\n<p>Code examples are in the package documentations of both, the R-hdf5 package documentation is quite little though.</p>\n\n<p>Both of these language bindings might be a very efficient way to read and write HDF5 files.</p>\n\n<p>There are also APIs in Fortran, Java, Python, Matlab, C, or C++. So it might make sense to select the language and define the type of data you wish to store first. </p>", "html": "<p>There is also a Perl binding to HDF5: PDL::IO::HDF5</p>\n\n<p><a href=\"http://search.cpan.org/~cerney/PDL-IO-HDF5-0.5/\" rel=\"nofollow\">http://search.cpan.org/~cerney/PDL-IO-HDF5-0.5/</a>\nThis requires the Perl Data Language (PDL) package. The way, data-structures can be handled, sub-ranges of data can be defined  an data can be manipulated is actually very elegant in PDL such that computational code can profit from PDLs vectorized style of writing expressions.</p>\n\n<p>The same is true for R and the hdf5 package: <a href=\"http://cran.r-project.org/web/packages/hdf5/index.html\" rel=\"nofollow\">http://cran.r-project.org/web/packages/hdf5/index.html</a></p>\n\n<p>Code examples are in the package documentations of both, the R-hdf5 package documentation is quite little though.</p>\n\n<p>Both of these language bindings might be a very efficient way to read and write HDF5 files.</p>\n\n<p>There are also APIs in Fortran, Java, Python, Matlab, C, or C++. So it might make sense to select the language and define the type of data you wish to store first. </p>", "lastedit_user": 55}}, {"pk": 88, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 1, "views": 67, "author": 23, "creation_date": "2010-03-01 13:51:12", "content": "<p>I am planning to prepare a talk for my workmates, to introduce them the basics of some agile programming methodology, which I think could give us good ideas to improve our working as a team.</p>\n\n<p>My idea was to take inspiration from <a href=\"http://www.extremeprogramming.org/rules/\" rel=\"nofollow\">extreme programming</a> and explain the rules I like the most: use of <a href=\"http://www.extremeprogramming.org/example/crcsim.html\" rel=\"nofollow\">A7 cards to write tasks</a>, <a href=\"http://www.extremeprogramming.org/rules/planninggame.html\" rel=\"nofollow\">release planning</a> every 3 week, stand-up meeting every day, <a href=\"http://www.extremeprogramming.org/rules/movepeople.html\" rel=\"nofollow\">Move people around</a>, <a href=\"http://www.extremeprogramming.org/rules/testfirst.html\" rel=\"nofollow\">unit tests first</a>, <a href=\"http://www.extremeprogramming.org/rules/pair.html\" rel=\"nofollow\">pair programming</a> (at least introduce the concept), <a href=\"http://www.extremeprogramming.org/rules/collective.html\" rel=\"nofollow\">collective ownership</a>.</p>\n\n<p>It is difficult for me to explain these rules as I don't have much direct experience with, apart for few exceptions, and it is even more difficult because I will have to explain them to people who are not comfortable with programming and with software engineering in general.\nHowever, I also think that I have to prepare this talk early and it will be much more difficult if I wait too much.</p>\n\n<p>Do you have any experience with what I am talking about? Do you have any advice to give me, or can you recommend me a book or a practice that I could explain along with extreme programming?</p>", "html": "<p>I am planning to prepare a talk for my workmates, to introduce them the basics of some agile programming methodology, which I think could give us good ideas to improve our working as a team.</p>\n\n<p>My idea was to take inspiration from <a href=\"http://www.extremeprogramming.org/rules/\" rel=\"nofollow\">extreme programming</a> and explain the rules I like the most: use of <a href=\"http://www.extremeprogramming.org/example/crcsim.html\" rel=\"nofollow\">A7 cards to write tasks</a>, <a href=\"http://www.extremeprogramming.org/rules/planninggame.html\" rel=\"nofollow\">release planning</a> every 3 week, stand-up meeting every day, <a href=\"http://www.extremeprogramming.org/rules/movepeople.html\" rel=\"nofollow\">Move people around</a>, <a href=\"http://www.extremeprogramming.org/rules/testfirst.html\" rel=\"nofollow\">unit tests first</a>, <a href=\"http://www.extremeprogramming.org/rules/pair.html\" rel=\"nofollow\">pair programming</a> (at least introduce the concept), <a href=\"http://www.extremeprogramming.org/rules/collective.html\" rel=\"nofollow\">collective ownership</a>.</p>\n\n<p>It is difficult for me to explain these rules as I don't have much direct experience with, apart for few exceptions, and it is even more difficult because I will have to explain them to people who are not comfortable with programming and with software engineering in general.\nHowever, I also think that I have to prepare this talk early and it will be much more difficult if I wait too much.</p>\n\n<p>Do you have any experience with what I am talking about? Do you have any advice to give me, or can you recommend me a book or a practice that I could explain along with extreme programming?</p>", "lastedit_user": 23}}, {"pk": 89, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:35:57", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-01 14:06:55", "content": "<p>I think the approach is unsuited for individuals who are not comfortable with programming in general. There is a long way to go until someone becomes confident in their abilities. Before that this approach is not only ineffective, it might be even be detrimental.</p>\n\n<p>Instead what helps most is transparency. Everyone needs to write code in a source code repository that can be viewed, commented and verified. People should become familiar with testing, code coverage, and continuous integration. </p>\n\n<p>Something to read: <a href=\"http://en.wikipedia.org/wiki/The_Mythical_Man-Month\" rel=\"nofollow\">Mythical Man Month</a>.</p>", "html": "<p>I think the approach is unsuited for individuals who are not comfortable with programming in general. There is a long way to go until someone becomes confident in their abilities. Before that this approach is not only ineffective, it might be even be detrimental.</p>\n\n<p>Instead what helps most is transparency. Everyone needs to write code in a source code repository that can be viewed, commented and verified. People should become familiar with testing, code coverage, and continuous integration. </p>\n\n<p>Something to read: <a href=\"http://en.wikipedia.org/wiki/The_Mythical_Man-Month\" rel=\"nofollow\">Mythical Man Month</a>.</p>", "lastedit_user": 2}}, {"pk": 90, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 1, "views": 112, "author": 10, "creation_date": "2010-03-01 14:26:09", "content": "<p>An example that computes the reverse complement of a sequence with <a href=\"http://biopython.org/wiki/Main_Page\" rel=\"nofollow\">BioPython</a></p>\n\n<pre><code>#\n# Reverse complement example with BioPython\n#\n\nfrom Bio.Seq import Seq\n\n# a separate function to reverse strings (or other iterables)\ndef rev(it):\n    \"Reverses an interable and returns it as a string\"\n    return ''.join(reversed(it))\n\n# create a Seq class instance\ndna = Seq(\"ATGGCCATTGTAATGGGCCGCTGAAAGGGTGCCCGATAG\")\n\n# original DNA\nprint type(dna)\nprint dna\n\n# reverse complement DNA, returns a new sequence\nprint dna.reverse_complement()\n\n# currently there is no direct way to just reverse a sequence\n# we need to do a little extra work\n\nrseq = rev(str(dna))\nrdna = Seq(rseq)\n\n# reversed sequence\nprint rdna\n\n# to complement DNA, returns a new sequence\nprint dna.complement()\n</code></pre>\n\n<p>Produces the following output:</p>\n\n<pre><code>&lt;class 'Bio.Seq.Seq'&gt;\nATGGCCATTGTAATGGGCCGCTGAAAGGGTGCCCGATAG\nCTATCGGGCACCCTTTCAGCGGCCCATTACAATGGCCAT\nGATAGCCCGTGGGAAAGTCGCCGGGTAATGTTACCGGTA\nTACCGGTAACATTACCCGGCGACTTTCCCACGGGCTATC\n</code></pre>", "html": "<p>An example that computes the reverse complement of a sequence with <a href=\"http://biopython.org/wiki/Main_Page\" rel=\"nofollow\">BioPython</a></p>\n\n<pre><code>#\n# Reverse complement example with BioPython\n#\n\nfrom Bio.Seq import Seq\n\n# a separate function to reverse strings (or other iterables)\ndef rev(it):\n    \"Reverses an interable and returns it as a string\"\n    return ''.join(reversed(it))\n\n# create a Seq class instance\ndna = Seq(\"ATGGCCATTGTAATGGGCCGCTGAAAGGGTGCCCGATAG\")\n\n# original DNA\nprint type(dna)\nprint dna\n\n# reverse complement DNA, returns a new sequence\nprint dna.reverse_complement()\n\n# currently there is no direct way to just reverse a sequence\n# we need to do a little extra work\n\nrseq = rev(str(dna))\nrdna = Seq(rseq)\n\n# reversed sequence\nprint rdna\n\n# to complement DNA, returns a new sequence\nprint dna.complement()\n</code></pre>\n\n<p>Produces the following output:</p>\n\n<pre><code>&lt;class 'Bio.Seq.Seq'&gt;\nATGGCCATTGTAATGGGCCGCTGAAAGGGTGCCCGATAG\nCTATCGGGCACCCTTTCAGCGGCCCATTACAATGGCCAT\nGATAGCCCGTGGGAAAGTCGCCGGGTAATGTTACCGGTA\nTACCGGTAACATTACCCGGCGACTTTCCCACGGGCTATC\n</code></pre>", "lastedit_user": 10}}, {"pk": 91, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 2, "views": 0, "author": 39, "creation_date": "2010-03-01 14:41:28", "content": "<p>I would suggest to have a look at <a href=\"http://en.wikipedia.org/wiki/Scrum_%28development%29\" rel=\"nofollow\">Scrum</a>, too. Certain parts would help not only bioinformations. For example estimating the time expenditure of tasks and the resulting burn down charts can be really helpful to see if something is stuck especially when working together on bigger projects.The daily scrum reports helps to meditate why who is doing what and offers a platform to discuss problems.</p>", "html": "<p>I would suggest to have a look at <a href=\"http://en.wikipedia.org/wiki/Scrum_%28development%29\" rel=\"nofollow\">Scrum</a>, too. Certain parts would help not only bioinformations. For example estimating the time expenditure of tasks and the resulting burn down charts can be really helpful to see if something is stuck especially when working together on bigger projects.The daily scrum reports helps to meditate why who is doing what and offers a platform to discuss problems.</p>", "lastedit_user": 39}}, {"pk": 92, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 0, "views": 71, "author": 10, "creation_date": "2010-03-01 14:48:25", "content": "<p>Computing the reverse complement with the <a href=\"http://code.google.com/p/pygr/wiki/PygrDocumentation\" rel=\"nofollow\">Pygr</a> bioinformatics framework:</p>\n\n<pre><code>#\n# Reverse complement example with pygr\n#\n\nfrom pygr.sequence import Sequence\n\n# needs a separate function to reverse strings\ndef rev(it):\n    \"Reverses an interable and returns it as a string\"\n    return ''.join(reversed(it))\n\n# original sequence as as string\nseq = 'ATGGCCATTGTAATGGGCCGCTGAAAGGGTGCCCGATAG'\n\n# create a Sequence class  instance named bobo\ndna = Sequence(seq,'bobo')\n\n# sequence class' type and content\nprint type(dna)\nprint dna\n\n# the -operator reverse complements the DNA, returns a new sequence\nprint -dna\n\n# to reverse the DNA, reverse the input data\nrdna = Sequence( rev(seq),'bobo')\nprint rdna\n\n# to complement the DNA reverse complement, then reverse again\ncseq = rev(str(-dna))\ncdna = Sequence(cseq,'bobo')\n\nprint cdna\n</code></pre>\n\n<p>Produces the output:</p>\n\n<pre><code>&lt;class 'pygr.sequence.Sequence'&gt;\nATGGCCATTGTAATGGGCCGCTGAAAGGGTGCCCGATAG\nCTATCGGGCACCCTTTCAGCGGCCCATTACAATGGCCAT\nGATAGCCCGTGGGAAAGTCGCCGGGTAATGTTACCGGTA\nTACCGGTAACATTACCCGGCGACTTTCCCACGGGCTATC\n</code></pre>", "html": "<p>Computing the reverse complement with the <a href=\"http://code.google.com/p/pygr/wiki/PygrDocumentation\" rel=\"nofollow\">Pygr</a> bioinformatics framework:</p>\n\n<pre><code>#\n# Reverse complement example with pygr\n#\n\nfrom pygr.sequence import Sequence\n\n# needs a separate function to reverse strings\ndef rev(it):\n    \"Reverses an interable and returns it as a string\"\n    return ''.join(reversed(it))\n\n# original sequence as as string\nseq = 'ATGGCCATTGTAATGGGCCGCTGAAAGGGTGCCCGATAG'\n\n# create a Sequence class  instance named bobo\ndna = Sequence(seq,'bobo')\n\n# sequence class' type and content\nprint type(dna)\nprint dna\n\n# the -operator reverse complements the DNA, returns a new sequence\nprint -dna\n\n# to reverse the DNA, reverse the input data\nrdna = Sequence( rev(seq),'bobo')\nprint rdna\n\n# to complement the DNA reverse complement, then reverse again\ncseq = rev(str(-dna))\ncdna = Sequence(cseq,'bobo')\n\nprint cdna\n</code></pre>\n\n<p>Produces the output:</p>\n\n<pre><code>&lt;class 'pygr.sequence.Sequence'&gt;\nATGGCCATTGTAATGGGCCGCTGAAAGGGTGCCCGATAG\nCTATCGGGCACCCTTTCAGCGGCCCATTACAATGGCCAT\nGATAGCCCGTGGGAAAGTCGCCGGGTAATGTTACCGGTA\nTACCGGTAACATTACCCGGCGACTTTCCCACGGGCTATC\n</code></pre>", "lastedit_user": 10}}, {"pk": 93, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 2, "views": 0, "author": 45, "creation_date": "2010-03-01 14:51:52", "content": "<p>Possibly related:\n<a href=\"http://mmc.gnets.ncsu.edu/\" rel=\"nofollow\">http://mmc.gnets.ncsu.edu/</a></p>", "html": "<p>Possibly related:\n<a href=\"http://mmc.gnets.ncsu.edu/\" rel=\"nofollow\">http://mmc.gnets.ncsu.edu/</a></p>", "lastedit_user": 45}}, {"pk": 94, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 2, "views": 0, "author": 23, "creation_date": "2010-03-01 16:07:15", "content": "<p>Wouldn't it better to have a single question titled 'How to compute the reverse complement with python' and put all the examples as different answers? Otherwise it seems a bit confusing..</p>", "html": "<p>Wouldn't it better to have a single question titled 'How to compute the reverse complement with python' and put all the examples as different answers? Otherwise it seems a bit confusing..</p>", "lastedit_user": 23}}, {"pk": 95, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 4, "views": 0, "author": 24, "creation_date": "2010-03-01 16:32:26", "content": "<p>The most important thing for me has been keeping a README file at the top of each project directory, where I write down not just <em>how</em> to run the scripts, but <em>why</em> I wrote them in the first place -- coming back to a project after a several-month lull, it's remarkable difficult to figure out what all the half-finished results mean without detailed notes.</p>\n\n<p>That said:</p>\n\n<ul>\n<li><code>make</code> is pretty handy for simple pipelines that need to be re-run a lot</li>\n<li>I'm also intrigued by <a href=\"http://code.google.com/p/waf/\" rel=\"nofollow\">waf</a> and <a href=\"http://www.scons.org/\" rel=\"nofollow\">scons</a>, since I use Python a lot</li>\n<li>If a pipeline only takes a couple of minutes to run, and you only re-run it every few days, coercing it into a build system doesn't really save time overall for that project</li>\n<li>But once you're used to working with a build system, the threshold where it pays off to use it on a new project drops dramatically</li>\n</ul>", "html": "<p>The most important thing for me has been keeping a README file at the top of each project directory, where I write down not just <em>how</em> to run the scripts, but <em>why</em> I wrote them in the first place -- coming back to a project after a several-month lull, it's remarkable difficult to figure out what all the half-finished results mean without detailed notes.</p>\n\n<p>That said:</p>\n\n<ul>\n<li><code>make</code> is pretty handy for simple pipelines that need to be re-run a lot</li>\n<li>I'm also intrigued by <a href=\"http://code.google.com/p/waf/\" rel=\"nofollow\">waf</a> and <a href=\"http://www.scons.org/\" rel=\"nofollow\">scons</a>, since I use Python a lot</li>\n<li>If a pipeline only takes a couple of minutes to run, and you only re-run it every few days, coercing it into a build system doesn't really save time overall for that project</li>\n<li>But once you're used to working with a build system, the threshold where it pays off to use it on a new project drops dramatically</li>\n</ul>", "lastedit_user": 24}}, {"pk": 96, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 2, "views": 0, "author": 24, "creation_date": "2010-03-01 16:52:22", "content": "<p>The Bio.Seq module provides two easy ways to get the complement and reverse complement from a sequence:</p>\n\n<ul>\n<li>If you have a string, use the functions <code>complement(dna)</code> and <code>reverse_complement(dna)</code></li>\n<li>If you have a Seq object, use its methods with the same names: <code>dna.complement()</code> and <code>dna.reverse_complement</code></li>\n</ul>\n\n<p>To reverse a sequence, there is a function in the <code>Bio.SeqUtils</code> module called <code>reverse</code> which does what you would expect.</p>\n\n<hr>\n\n<p>(Sorry for going meta, but I don't have commenting privileges yet. This can be deleted if the original post is edited.)</p>\n\n<p>According to <a href=\"http://meta.stackoverflow.com/questions/17845/etiquette-for-answering-your-own-question\">Meta Stack Overflow</a>, if you want to share the answer to a difficult question that's poorly documented elsewhere online, you should post the question as a genuine one, and then submit your own answer separately. In theory, someone else may have an answer that's better than yours, and this allows it to be voted to the top properly.</p>", "html": "<p>The Bio.Seq module provides two easy ways to get the complement and reverse complement from a sequence:</p>\n\n<ul>\n<li>If you have a string, use the functions <code>complement(dna)</code> and <code>reverse_complement(dna)</code></li>\n<li>If you have a Seq object, use its methods with the same names: <code>dna.complement()</code> and <code>dna.reverse_complement</code></li>\n</ul>\n\n<p>To reverse a sequence, there is a function in the <code>Bio.SeqUtils</code> module called <code>reverse</code> which does what you would expect.</p>\n\n<hr>\n\n<p>(Sorry for going meta, but I don't have commenting privileges yet. This can be deleted if the original post is edited.)</p>\n\n<p>According to <a href=\"http://meta.stackoverflow.com/questions/17845/etiquette-for-answering-your-own-question\">Meta Stack Overflow</a>, if you want to share the answer to a difficult question that's poorly documented elsewhere online, you should post the question as a genuine one, and then submit your own answer separately. In theory, someone else may have an answer that's better than yours, and this allows it to be voted to the top properly.</p>", "lastedit_user": 24}}, {"pk": 97, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 2, "views": 0, "author": 59, "creation_date": "2010-03-01 17:05:13", "content": "<p><a href=\"http://idconverter.bioinfo.cnio.es/\" rel=\"nofollow\">http://idconverter.bioinfo.cnio.es/</a></p>\n\n<p>Is another possible solution to this, although you might find this is not as up to date as you might like either.</p>", "html": "<p><a href=\"http://idconverter.bioinfo.cnio.es/\" rel=\"nofollow\">http://idconverter.bioinfo.cnio.es/</a></p>\n\n<p>Is another possible solution to this, although you might find this is not as up to date as you might like either.</p>", "lastedit_user": 59}}, {"pk": 98, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 3, "views": 0, "author": 55, "creation_date": "2010-03-01 19:51:25", "content": "<p>BioMart has already been mentioned. It can do much more than ID conversion but it is very useful for conversion purposes, it is regularly updated and you can select different genome builds and all kinds of genomic features. It seems to me that you wish to retrieve GeneIDs linked to Affymetrix IDs. To select these attributes in BioMart: go to the <a href=\"http://www.biomart.org/biomart/martview\" rel=\"nofollow\">Martview</a> page to start a new BioMart query.</p>\n\n<p>Select attributes on the attribute page: The Ensembl GeneIDs and Transcript IDs are default. Ensembl GeneID and Affy IDs are under the \"External\" tab. Select your chip there.\nTo limit to those genes which are on the chip, use the Filters->Gene menue. You can limit the genes to those present on various platforms or your favourite set.</p>\n\n<p>There is an URL button in biomart that allows to retrieve a URL for your query and to pass it on to others. Try this example:</p>\n\n<p><a href=\"http://www.biomart.org/biomart/martview?VIRTUALSCHEMANAME=default&amp;ATTRIBUTES=hsapiens_gene_ensembl.default.feature_page.ensembl_gene_id|hsapiens_gene_ensembl.default.feature_page.ensembl_transcript_id|hsapiens_gene_ensembl.default.feature_page.embl|hsapiens_gene_ensembl.default.feature_page.affy_hg_u133a&amp;FILTERS=hsapiens_gene_ensembl.default.filters.with_affy_hg_u133a.only&amp;VISIBLEPANEL=resultspanel\" rel=\"nofollow\">BioMart URL</a> URL, that should be a good starting point.</p>\n\n<p>If you are interested in KEGG identifiers (Pathways, Genes), EC-numbers, etc. the  </p>\n\n<p><a href=\"http://www.genome.jp/kegg/kegg3.html\" rel=\"nofollow\">KEGG Identifier page</a> could be handy, because the KEGG ids are not in BioMart as far as I know.</p>", "html": "<p>BioMart has already been mentioned. It can do much more than ID conversion but it is very useful for conversion purposes, it is regularly updated and you can select different genome builds and all kinds of genomic features. It seems to me that you wish to retrieve GeneIDs linked to Affymetrix IDs. To select these attributes in BioMart: go to the <a href=\"http://www.biomart.org/biomart/martview\" rel=\"nofollow\">Martview</a> page to start a new BioMart query.</p>\n\n<p>Select attributes on the attribute page: The Ensembl GeneIDs and Transcript IDs are default. Ensembl GeneID and Affy IDs are under the \"External\" tab. Select your chip there.\nTo limit to those genes which are on the chip, use the Filters->Gene menue. You can limit the genes to those present on various platforms or your favourite set.</p>\n\n<p>There is an URL button in biomart that allows to retrieve a URL for your query and to pass it on to others. Try this example:</p>\n\n<p><a href=\"http://www.biomart.org/biomart/martview?VIRTUALSCHEMANAME=default&amp;ATTRIBUTES=hsapiens_gene_ensembl.default.feature_page.ensembl_gene_id|hsapiens_gene_ensembl.default.feature_page.ensembl_transcript_id|hsapiens_gene_ensembl.default.feature_page.embl|hsapiens_gene_ensembl.default.feature_page.affy_hg_u133a&amp;FILTERS=hsapiens_gene_ensembl.default.filters.with_affy_hg_u133a.only&amp;VISIBLEPANEL=resultspanel\" rel=\"nofollow\">BioMart URL</a> URL, that should be a good starting point.</p>\n\n<p>If you are interested in KEGG identifiers (Pathways, Genes), EC-numbers, etc. the  </p>\n\n<p><a href=\"http://www.genome.jp/kegg/kegg3.html\" rel=\"nofollow\">KEGG Identifier page</a> could be handy, because the KEGG ids are not in BioMart as far as I know.</p>", "lastedit_user": 55}}, {"pk": 99, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 2, "views": 143, "author": 10, "creation_date": "2010-03-01 20:01:20", "content": "<p>Most genomic annotations are specified as intervals along the genome. </p>\n\n<ul>\n<li><a href=\"http://books.google.com/books?id=NLngYyWFl_YC&amp;lpg=PA311&amp;ots=BwTtEE-jJ9&amp;dq=cormen%20interval%20tree&amp;pg=PA311#v=onepage&amp;q=&amp;f=false\" rel=\"nofollow\">Interval trees</a> have been known to provide an efficient datastructure that allows for very fast overlap querying. </li>\n<li><a href=\"http://bioinformatics.oxfordjournals.org/cgi/content/abstract/btl647v1\" rel=\"nofollow\">Nested Containment Lists</a> have been proposed as an even faster alternative </li>\n</ul>\n\n<p>Provide code examples in your programming language that demonstrate the use of fast interval querying.</p>", "html": "<p>Most genomic annotations are specified as intervals along the genome. </p>\n\n<ul>\n<li><a href=\"http://books.google.com/books?id=NLngYyWFl_YC&amp;lpg=PA311&amp;ots=BwTtEE-jJ9&amp;dq=cormen%20interval%20tree&amp;pg=PA311#v=onepage&amp;q=&amp;f=false\" rel=\"nofollow\">Interval trees</a> have been known to provide an efficient datastructure that allows for very fast overlap querying. </li>\n<li><a href=\"http://bioinformatics.oxfordjournals.org/cgi/content/abstract/btl647v1\" rel=\"nofollow\">Nested Containment Lists</a> have been proposed as an even faster alternative </li>\n</ul>\n\n<p>Provide code examples in your programming language that demonstrate the use of fast interval querying.</p>", "lastedit_user": 10}}, {"pk": 100, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 2, "views": 0, "author": 2, "creation_date": "2010-03-01 20:06:18", "content": "<p>This code example generates 10,000 intervals then queries them for overlapping regions. <strong>Requires only the presence of Python.</strong></p>\n\n<p>The code below requires the either the installation of the <a href=\"http://bitbucket.org/james_taylor/bx-python/wiki/Home\" rel=\"nofollow\">bx python</a> package or alternatively you may just download the <a href=\"http://bitbucket.org/james_taylor/bx-python/raw/ebf9a4b352d3/lib/bx/intervals/operations/quicksect.py\" rel=\"nofollow\">quicksect.py</a> module and place it next to the script itself:</p>\n\n<pre><code>from random import randint, seed\n\n# if you can install bx python then uncomment the line below\n#\n# from bx.intervals.operations.quicksect import IntervalNode\n\n# otherwise just download the quickset module as shown above \n# and place it in next to your program\n#\nfrom quicksect import IntervalNode\n\n# the span of the generated intervals\nSPAN = 10\n\n# the size of the genome\nSIZE = 5*10**4\n\n# the number of intervals\nN = 10**4\n\ndef generate(x):\n    \"Generates random interval over a size and span\"\n    lo = randint(10000, SIZE)\n    hi = lo + randint(1, SPAN)\n    return (lo, hi)\n\ndef find(start, end, tree):\n    \"Returns a list with the overlapping intervals\"\n    out = []\n    tree.intersect( start, end, lambda x: out.append(x) )\n    return [ (x.start, x.end) for x in out ]\n\n# use this to force both examples to generate the same data\nseed(10)\n\n# generate 10 thousand random intervals\ndata = map(generate, xrange(N))\n\n# generate the intervals to query over\nquery = map(generate, xrange(10))\n\n# start the root at the first element\nstart, end = data[0]\ntree = IntervalNode( start, end )\n\n# build an interval tree from the rest of the data\nfor start, end in data[1:]:\n    tree = tree.insert( start, end )\n\nfor start, end in query:\n    overlap = find(start, end , tree)\n    print '(%s, %s) -&gt; %s' % (start, end, overlap)\n</code></pre>\n\n<p>Produces the output:</p>\n\n<pre><code>(41901, 41903) -&gt; [(41894, 41902)]\n(36981, 36987) -&gt; [(36981, 36984), (36973, 36982), (36978, 36987)]\n(36338, 36339) -&gt; [(36337, 36347)]\n(32741, 32748) -&gt; [(32738, 32742)]\n(49864, 49872) -&gt; [(49859, 49865)]\n(21475, 21477) -&gt; []\n(29425, 29428) -&gt; [(29418, 29426), (29419, 29426)]\n(29590, 29599) -&gt; [(29586, 29595), (29596, 29598)]\n(12804, 12811) -&gt; [(12806, 12811), (12799, 12806), (12809, 12819)]\n(30339, 30343) -&gt; [(30336, 30346), (30335, 30345), (30340, 30341)]\n</code></pre>", "html": "<p>This code example generates 10,000 intervals then queries them for overlapping regions. <strong>Requires only the presence of Python.</strong></p>\n\n<p>The code below requires the either the installation of the <a href=\"http://bitbucket.org/james_taylor/bx-python/wiki/Home\" rel=\"nofollow\">bx python</a> package or alternatively you may just download the <a href=\"http://bitbucket.org/james_taylor/bx-python/raw/ebf9a4b352d3/lib/bx/intervals/operations/quicksect.py\" rel=\"nofollow\">quicksect.py</a> module and place it next to the script itself:</p>\n\n<pre><code>from random import randint, seed\n\n# if you can install bx python then uncomment the line below\n#\n# from bx.intervals.operations.quicksect import IntervalNode\n\n# otherwise just download the quickset module as shown above \n# and place it in next to your program\n#\nfrom quicksect import IntervalNode\n\n# the span of the generated intervals\nSPAN = 10\n\n# the size of the genome\nSIZE = 5*10**4\n\n# the number of intervals\nN = 10**4\n\ndef generate(x):\n    \"Generates random interval over a size and span\"\n    lo = randint(10000, SIZE)\n    hi = lo + randint(1, SPAN)\n    return (lo, hi)\n\ndef find(start, end, tree):\n    \"Returns a list with the overlapping intervals\"\n    out = []\n    tree.intersect( start, end, lambda x: out.append(x) )\n    return [ (x.start, x.end) for x in out ]\n\n# use this to force both examples to generate the same data\nseed(10)\n\n# generate 10 thousand random intervals\ndata = map(generate, xrange(N))\n\n# generate the intervals to query over\nquery = map(generate, xrange(10))\n\n# start the root at the first element\nstart, end = data[0]\ntree = IntervalNode( start, end )\n\n# build an interval tree from the rest of the data\nfor start, end in data[1:]:\n    tree = tree.insert( start, end )\n\nfor start, end in query:\n    overlap = find(start, end , tree)\n    print '(%s, %s) -&gt; %s' % (start, end, overlap)\n</code></pre>\n\n<p>Produces the output:</p>\n\n<pre><code>(41901, 41903) -&gt; [(41894, 41902)]\n(36981, 36987) -&gt; [(36981, 36984), (36973, 36982), (36978, 36987)]\n(36338, 36339) -&gt; [(36337, 36347)]\n(32741, 32748) -&gt; [(32738, 32742)]\n(49864, 49872) -&gt; [(49859, 49865)]\n(21475, 21477) -&gt; []\n(29425, 29428) -&gt; [(29418, 29426), (29419, 29426)]\n(29590, 29599) -&gt; [(29586, 29595), (29596, 29598)]\n(12804, 12811) -&gt; [(12806, 12811), (12799, 12806), (12809, 12819)]\n(30339, 30343) -&gt; [(30336, 30346), (30335, 30345), (30340, 30341)]\n</code></pre>", "lastedit_user": 2}}, {"pk": 101, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 2, "views": 0, "author": 2, "creation_date": "2010-03-01 20:09:49", "content": "<p>This code example generates 10,000 intervals then queries them for overlapping regions. <strong>The installation requires a C compiler and Python.</strong></p>\n\n<p>This is a faster solution than the other example, one that now requires the full installation of the <a href=\"http://bitbucket.org/james_taylor/bx-python/overview/\" rel=\"nofollow\">bx-python</a> module. <strong>The data structure is implemented in C</strong> and is at least one order of magnitude faster than the <strong>quicksect.py</strong> module presented in another example.</p>\n\n<pre><code>from random import randint, seed\nfrom bx.intervals.intersection import Intersecter, Interval\n\n# the span of the generated intervals\nSPAN = 10\n\n# the size of the genome\nSIZE = 5*10**4\n\n# the number of intervals\nN = 10**4\n\ndef generate(x):\n    \"Generates random interval over a size and span\"\n    lo = randint(10000, SIZE)\n    hi = lo + randint(1, SPAN)\n    return (lo, hi)\n\n# use this to force both examples to generate the same data\nseed(10)\n\n# generate 10 thousand random intervals\ndata = map(generate, xrange(N))\n\n# generate the intervals to query over\nquery = map(generate, xrange(10))\n\n# create the interval tree\ntree = Intersecter()\n\n# build an interval tree from the rest of the data\nfor start, end in data:\n    tree.add_interval( Interval(start, end) )\n\n# perform the query\nfor start, end in query:\n    overlap = tree.find(start, end)\n    out = [ (x.start, x.end) for x in overlap ]\n    print '(%s, %s) -&gt; %s' % (start, end, out)\n</code></pre>\n\n<p>Produces the output:</p>\n\n<pre><code>(41901, 41903) -&gt; [(41894, 41902)]\n(36981, 36987) -&gt; [(36973, 36982), (36978, 36987), (36981, 36984)]\n(36338, 36339) -&gt; [(36337, 36347)]\n(32741, 32748) -&gt; [(32738, 32742)]\n(49864, 49872) -&gt; [(49859, 49865)]\n(21475, 21477) -&gt; []\n(29425, 29428) -&gt; [(29418, 29426), (29419, 29426)]\n(29590, 29599) -&gt; [(29586, 29595), (29596, 29598)]\n(12804, 12811) -&gt; [(12799, 12806), (12806, 12811), (12809, 12819)]\n(30339, 30343) -&gt; [(30335, 30345), (30336, 30346), (30340, 30341)]\n</code></pre>", "html": "<p>This code example generates 10,000 intervals then queries them for overlapping regions. <strong>The installation requires a C compiler and Python.</strong></p>\n\n<p>This is a faster solution than the other example, one that now requires the full installation of the <a href=\"http://bitbucket.org/james_taylor/bx-python/overview/\" rel=\"nofollow\">bx-python</a> module. <strong>The data structure is implemented in C</strong> and is at least one order of magnitude faster than the <strong>quicksect.py</strong> module presented in another example.</p>\n\n<pre><code>from random import randint, seed\nfrom bx.intervals.intersection import Intersecter, Interval\n\n# the span of the generated intervals\nSPAN = 10\n\n# the size of the genome\nSIZE = 5*10**4\n\n# the number of intervals\nN = 10**4\n\ndef generate(x):\n    \"Generates random interval over a size and span\"\n    lo = randint(10000, SIZE)\n    hi = lo + randint(1, SPAN)\n    return (lo, hi)\n\n# use this to force both examples to generate the same data\nseed(10)\n\n# generate 10 thousand random intervals\ndata = map(generate, xrange(N))\n\n# generate the intervals to query over\nquery = map(generate, xrange(10))\n\n# create the interval tree\ntree = Intersecter()\n\n# build an interval tree from the rest of the data\nfor start, end in data:\n    tree.add_interval( Interval(start, end) )\n\n# perform the query\nfor start, end in query:\n    overlap = tree.find(start, end)\n    out = [ (x.start, x.end) for x in overlap ]\n    print '(%s, %s) -&gt; %s' % (start, end, out)\n</code></pre>\n\n<p>Produces the output:</p>\n\n<pre><code>(41901, 41903) -&gt; [(41894, 41902)]\n(36981, 36987) -&gt; [(36973, 36982), (36978, 36987), (36981, 36984)]\n(36338, 36339) -&gt; [(36337, 36347)]\n(32741, 32748) -&gt; [(32738, 32742)]\n(49864, 49872) -&gt; [(49859, 49865)]\n(21475, 21477) -&gt; []\n(29425, 29428) -&gt; [(29418, 29426), (29419, 29426)]\n(29590, 29599) -&gt; [(29586, 29595), (29596, 29598)]\n(12804, 12811) -&gt; [(12799, 12806), (12806, 12811), (12809, 12819)]\n(30339, 30343) -&gt; [(30335, 30345), (30336, 30346), (30340, 30341)]\n</code></pre>", "lastedit_user": 2}}, {"pk": 102, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 1, "views": 42, "author": 10, "creation_date": "2010-03-01 23:47:17", "content": "<p>How do I verify that a sequence only contains letters from a given alphabet: DNA, RNA, protein?</p>", "html": "<p>How do I verify that a sequence only contains letters from a given alphabet: DNA, RNA, protein?</p>", "lastedit_user": 10}}, {"pk": 103, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 2, "views": 0, "author": 10, "creation_date": "2010-03-01 23:50:05", "content": "<p>Here is an efficient function written in Python:</p>\n\n<pre><code>dna = set(\"ATGC\")\ndef validate(seq, alphabet=dna):\n    \"Checks that a sequence only contains values from an alphabet\"\n    leftover = set(seq.upper()) - alphabet\n    return not leftover\n\n# typical usage below\n\n# this will print True\nprint validate('AAAATGCCG')\n\n# this will print False\nprint validate('AAANTGCCG')\n\n# using it with other alphabets\nprot = set('ACDEFGHIKLMNPQRSTVWY')\nprint validate(\"mglsdgewql\", alphabet=prot)\n</code></pre>", "html": "<p>Here is an efficient function written in Python:</p>\n\n<pre><code>dna = set(\"ATGC\")\ndef validate(seq, alphabet=dna):\n    \"Checks that a sequence only contains values from an alphabet\"\n    leftover = set(seq.upper()) - alphabet\n    return not leftover\n\n# typical usage below\n\n# this will print True\nprint validate('AAAATGCCG')\n\n# this will print False\nprint validate('AAANTGCCG')\n\n# using it with other alphabets\nprot = set('ACDEFGHIKLMNPQRSTVWY')\nprint validate(\"mglsdgewql\", alphabet=prot)\n</code></pre>", "lastedit_user": 10}}, {"pk": 104, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 3, "views": 0, "author": 61, "creation_date": "2010-03-02 05:22:30", "content": "<p>I've been talking a bit with one of the devs behind BioHDF (being at UIUC, up the road from The HDF Group doesn't hurt). I believe a publication is on the way describing it along with some implementation details. </p>", "html": "<p>I've been talking a bit with one of the devs behind BioHDF (being at UIUC, up the road from The HDF Group doesn't hurt). I believe a publication is on the way describing it along with some implementation details. </p>", "lastedit_user": 61}}, {"pk": 105, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 3, "views": 0, "author": 40, "creation_date": "2010-03-02 07:54:01", "content": "<p>Since i use Ruby quite often, I have found Rake very useful in creating simple pipelines. Rake has an idea of a task(s) and you can have prerequisites for the tasks, thus create pipelines. See An extension to rake that can be used to build database-backed workflows \u2014 at github <a href=\"http://github.com/jandot/biorake\" rel=\"nofollow\">http://github.com/jandot/biorake</a></p>", "html": "<p>Since i use Ruby quite often, I have found Rake very useful in creating simple pipelines. Rake has an idea of a task(s) and you can have prerequisites for the tasks, thus create pipelines. See An extension to rake that can be used to build database-backed workflows \u2014 at github <a href=\"http://github.com/jandot/biorake\" rel=\"nofollow\">http://github.com/jandot/biorake</a></p>", "lastedit_user": 40}}, {"pk": 106, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 2, "views": 0, "author": 23, "creation_date": "2010-03-02 09:26:39", "content": "<p>An alternative is to use BED files to store data and <a href=\"http://code.google.com/p/bedtools/\" rel=\"nofollow\">BEDTools</a> to calculate the intersection.</p>\n\n<p>The <a href=\"http://genome.ucsc.edu/FAQ/FAQformat#format1\" rel=\"nofollow\">BED</a> format is a format used by UCSC and many other projects to generically store annotations on genomes. Sometimes, it is easier to use just plain BED files to store annotations, instead of complex databases or HDF5, and BEDTools make it also faster to access them. Moreover, with BEDFiles you have other advantages, as you can use custom tracks on ucsc or gbrowse and there are other tools that use BED as input.</p>\n\n<p>Anyway, to solve the problem of intersection with BEDTools, you would do:</p>\n\n<p><code>$: intersectBed -a segdups.bed -b exons.bed</code></p>", "html": "<p>An alternative is to use BED files to store data and <a href=\"http://code.google.com/p/bedtools/\" rel=\"nofollow\">BEDTools</a> to calculate the intersection.</p>\n\n<p>The <a href=\"http://genome.ucsc.edu/FAQ/FAQformat#format1\" rel=\"nofollow\">BED</a> format is a format used by UCSC and many other projects to generically store annotations on genomes. Sometimes, it is easier to use just plain BED files to store annotations, instead of complex databases or HDF5, and BEDTools make it also faster to access them. Moreover, with BEDFiles you have other advantages, as you can use custom tracks on ucsc or gbrowse and there are other tools that use BED as input.</p>\n\n<p>Anyway, to solve the problem of intersection with BEDTools, you would do:</p>\n\n<p><code>$: intersectBed -a segdups.bed -b exons.bed</code></p>", "lastedit_user": 23}}, {"pk": 107, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 1, "views": 0, "author": 62, "creation_date": "2010-03-02 10:37:07", "content": "<p>re Biomake:</p>\n\n<p>It does look like a great tool but it is unsupported. What you get from Sourceforge is a snapshot with README pointing you to one dialect of Prolog (XSB) only to learn running the examples that project moved to another one (SWI-Prolog). Unless you know Prolog and can fix it Biomake is not functional as I last checked (Jan 2010).  </p>", "html": "<p>re Biomake:</p>\n\n<p>It does look like a great tool but it is unsupported. What you get from Sourceforge is a snapshot with README pointing you to one dialect of Prolog (XSB) only to learn running the examples that project moved to another one (SWI-Prolog). Unless you know Prolog and can fix it Biomake is not functional as I last checked (Jan 2010).  </p>", "lastedit_user": 62}}, {"pk": 108, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 1, "views": 100, "author": 62, "creation_date": "2010-03-02 11:00:20", "content": "<p>I am interested in your opinions about database systems used to store, query and visualize genomic sequence and annotations. I am talking about ca 600-700Mb draft genome with a large number of contigs outside scaffolds. Yep, I know that annotating anything before reaching some quality milestones may be considered pointless, but I want to get the back end (DB) and the pipeline<br>\nworking way before that.</p>\n\n<p>So far I started testing Gbrowse (1.70), been impressed by Ensembl as an end-user, and looked at (unsuitable) eye candy GenomeProjector  <a href=\"http://www.g-language.org/GenomeProjector/\" rel=\"nofollow\">http://www.g-language.org/GenomeProjector/</a>.</p>\n\n<p>I will appreciate any thoughts about ease of installation/maintenance and integration with annotation tools such as Apollo / Artemis.</p>\n\n<p>Thanks</p>\n\n<p>darked89</p>\n\n<p>PS There is no way top add proper tags (genome annotation database) to this post</p>", "html": "<p>I am interested in your opinions about database systems used to store, query and visualize genomic sequence and annotations. I am talking about ca 600-700Mb draft genome with a large number of contigs outside scaffolds. Yep, I know that annotating anything before reaching some quality milestones may be considered pointless, but I want to get the back end (DB) and the pipeline<br>\nworking way before that.</p>\n\n<p>So far I started testing Gbrowse (1.70), been impressed by Ensembl as an end-user, and looked at (unsuitable) eye candy GenomeProjector  <a href=\"http://www.g-language.org/GenomeProjector/\" rel=\"nofollow\">http://www.g-language.org/GenomeProjector/</a>.</p>\n\n<p>I will appreciate any thoughts about ease of installation/maintenance and integration with annotation tools such as Apollo / Artemis.</p>\n\n<p>Thanks</p>\n\n<p>darked89</p>\n\n<p>PS There is no way top add proper tags (genome annotation database) to this post</p>", "lastedit_user": 62}}, {"pk": 109, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 2, "views": 0, "author": 23, "creation_date": "2010-03-02 12:06:01", "content": "<p>This is a really debated topic, whether it is better to store sequences on a database or on simple flat files. I have never had to annotate draft genomes as you so I can't suggest you which is the best approach for you, but I would recommend using flat files, as you will have more support and tools, it will take less time to set it up, and I have the feeling that that is the direction that most projects are taking for the future.</p>\n\n<p>In case you want to use databases, have a look at <a href=\"http://www.mailund.dk/index.php/2009/01/22/playing-with-spatial-queries-in-mysql/\" rel=\"nofollow\">this post</a> and a this type of column type, the <a href=\"http://www.postgresql.org/docs/8.1/interactive/datatype-geometric.html\" rel=\"nofollow\">datatype-geometric</a>.</p>\n\n<p>In case you want to try flat files, you will have to study <a href=\"http://genome.ucsc.edu/FAQ/FAQformat.html#format1\" rel=\"nofollow\">BED</a>, <a href=\"http://genome.ucsc.edu/FAQ/FAQformat.html#format3\" rel=\"nofollow\">GFF</a>, and maybe <a href=\"http://samtools.sourceforge.net/\" rel=\"nofollow\">BAM</a> formats, along with <a href=\"http://vcftools.sourceforge.net/options.html\" rel=\"nofollow\">VCF</a> if you have snps. For example, if you BED, you will be able to use <a href=\"http://code.google.com/p/bedtools/\" rel=\"nofollow\">BEDTools</a>, which will allow you to merge and work with genomic features and are very fast. You will be surprised to know that GBrowse uses only GFF files to store data, it has no DB backend.</p>\n\n<p>Another alternative is HDF5, about which you may find some questions here. So, you have a lot of homework here :-)</p>", "html": "<p>This is a really debated topic, whether it is better to store sequences on a database or on simple flat files. I have never had to annotate draft genomes as you so I can't suggest you which is the best approach for you, but I would recommend using flat files, as you will have more support and tools, it will take less time to set it up, and I have the feeling that that is the direction that most projects are taking for the future.</p>\n\n<p>In case you want to use databases, have a look at <a href=\"http://www.mailund.dk/index.php/2009/01/22/playing-with-spatial-queries-in-mysql/\" rel=\"nofollow\">this post</a> and a this type of column type, the <a href=\"http://www.postgresql.org/docs/8.1/interactive/datatype-geometric.html\" rel=\"nofollow\">datatype-geometric</a>.</p>\n\n<p>In case you want to try flat files, you will have to study <a href=\"http://genome.ucsc.edu/FAQ/FAQformat.html#format1\" rel=\"nofollow\">BED</a>, <a href=\"http://genome.ucsc.edu/FAQ/FAQformat.html#format3\" rel=\"nofollow\">GFF</a>, and maybe <a href=\"http://samtools.sourceforge.net/\" rel=\"nofollow\">BAM</a> formats, along with <a href=\"http://vcftools.sourceforge.net/options.html\" rel=\"nofollow\">VCF</a> if you have snps. For example, if you BED, you will be able to use <a href=\"http://code.google.com/p/bedtools/\" rel=\"nofollow\">BEDTools</a>, which will allow you to merge and work with genomic features and are very fast. You will be surprised to know that GBrowse uses only GFF files to store data, it has no DB backend.</p>\n\n<p>Another alternative is HDF5, about which you may find some questions here. So, you have a lot of homework here :-)</p>", "lastedit_user": 23}}, {"pk": 110, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 2, "views": 0, "author": 62, "creation_date": "2010-03-02 13:10:29", "content": "<p>Not BioHDF5 but probably readable and maintained: </p>\n\n<p>HDF5 for Python\n<a href=\"http://code.google.com/p/h5py/\" rel=\"nofollow\">http://code.google.com/p/h5py/</a></p>", "html": "<p>Not BioHDF5 but probably readable and maintained: </p>\n\n<p>HDF5 for Python\n<a href=\"http://code.google.com/p/h5py/\" rel=\"nofollow\">http://code.google.com/p/h5py/</a></p>", "lastedit_user": 62}}, {"pk": 111, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 2, "views": 114, "author": 62, "creation_date": "2010-03-02 15:35:52", "content": "<p>Lets have 200k genomic contigs with some (unknown) bacterial contamination. </p>\n\n<p>I blasted (blastn vs nr) all of them, got tabulated output and passed the uniq acc nos ca 5k to Batch Entrez. Since neither my target genome nor bacterias causing contamination are not sequenced, I got a shotgun of results (3000 Eukaryota, 2000 Bacteria, few viruses). </p>\n\n<p>Now for a tricky part: \nwhat I need is:\nsequence_identifier + taxonomic_id(s) + main_tax_group</p>\n\n<p>something along the line:</p>\n\n<p>A000001 573 Bacteria</p>\n\n<p>Apart from writing a script storing the sequence &amp; taxonomy info into say MySQL, then going through blast top hits output, are there any tools (taverna work flows?) which can do it for me?</p>\n\n<p><strong>re Pierre</strong></p>\n\n<p>Primary input is text blast output of:</p>\n\n<pre><code>blastcl3 -p blastn -m 9 -e 0.00001 -b 1 -i frag01 -o out_blastn_frag01\n</code></pre>\n\n<p>I grep-ed and awk-ed hit acc numbers from second column. Resulting text file (one acc no per line) was feed to Batch Entrez. As far as I can tell there is no way of selecting output in form: \nA000001 573 Bacteria\nThe most parsable output seems to be TinyXML, but then I will download full bacterial genomes / eukaryotic chromosomes worth of sequence which at this stage I do not need.</p>\n\n<p>Ideally instead of two extremes (E.coli K12 + Bacteria) getting a whole taxonomic path:</p>\n\n<blockquote>\n  <p>cellular organisms; Bacteria; Proteobacteria; Gammaproteobacteria;\n  Enterobacteriales; Enterobacteriaceae; Escherichia; Escherichia coli</p>\n</blockquote>\n\n<p>will be preferred. That way one can zoom in (select more than just species/strain and  taxonomic Kingdom).</p>\n\n<p>So at this moment I am split between using (1) just blast tabulated text output or selecting some Batch Entrez output which then I will be able to combine with (1).</p>\n\n<p><strong>re giovanni</strong>\nsingle line which gets squezzed a bit  here:</p>\n\n<p>contig62836  gi|119525916|gb|CP000508.1|     93.18   44      3       0       1109    1152    262350  262393  2e-06   63.9</p>\n\n<p>Before each of the top hits there is blast header with hash sign in front:</p>\n\n<pre><code># Fields: Query id, Subject id, % identity, alignment length, mismatches, gap openings, q. start, q. end, s. start, s. end, e-value, bit score\n</code></pre>\n\n<p>So simple:</p>\n\n<pre><code> grep -A 1 Fields out_blastn_frag0* | grep contig | awk '{ print $2}' | awk 'FS=\"|\" {print $4}' | sort | uniq &gt; all_uniq_hits_100302.txt\n</code></pre>\n\n<p>gives me list off unique accession numbers of my top hits suitable for Batch Entrez.</p>\n\n<p><strong>re XML:</strong>\nyes, but I tried to avoid too much network traffic. XML for half a million contigs is a lot of data. save for oneliners I am using python. </p>", "html": "<p>Lets have 200k genomic contigs with some (unknown) bacterial contamination. </p>\n\n<p>I blasted (blastn vs nr) all of them, got tabulated output and passed the uniq acc nos ca 5k to Batch Entrez. Since neither my target genome nor bacterias causing contamination are not sequenced, I got a shotgun of results (3000 Eukaryota, 2000 Bacteria, few viruses). </p>\n\n<p>Now for a tricky part: \nwhat I need is:\nsequence_identifier + taxonomic_id(s) + main_tax_group</p>\n\n<p>something along the line:</p>\n\n<p>A000001 573 Bacteria</p>\n\n<p>Apart from writing a script storing the sequence &amp; taxonomy info into say MySQL, then going through blast top hits output, are there any tools (taverna work flows?) which can do it for me?</p>\n\n<p><strong>re Pierre</strong></p>\n\n<p>Primary input is text blast output of:</p>\n\n<pre><code>blastcl3 -p blastn -m 9 -e 0.00001 -b 1 -i frag01 -o out_blastn_frag01\n</code></pre>\n\n<p>I grep-ed and awk-ed hit acc numbers from second column. Resulting text file (one acc no per line) was feed to Batch Entrez. As far as I can tell there is no way of selecting output in form: \nA000001 573 Bacteria\nThe most parsable output seems to be TinyXML, but then I will download full bacterial genomes / eukaryotic chromosomes worth of sequence which at this stage I do not need.</p>\n\n<p>Ideally instead of two extremes (E.coli K12 + Bacteria) getting a whole taxonomic path:</p>\n\n<blockquote>\n  <p>cellular organisms; Bacteria; Proteobacteria; Gammaproteobacteria;\n  Enterobacteriales; Enterobacteriaceae; Escherichia; Escherichia coli</p>\n</blockquote>\n\n<p>will be preferred. That way one can zoom in (select more than just species/strain and  taxonomic Kingdom).</p>\n\n<p>So at this moment I am split between using (1) just blast tabulated text output or selecting some Batch Entrez output which then I will be able to combine with (1).</p>\n\n<p><strong>re giovanni</strong>\nsingle line which gets squezzed a bit  here:</p>\n\n<p>contig62836  gi|119525916|gb|CP000508.1|     93.18   44      3       0       1109    1152    262350  262393  2e-06   63.9</p>\n\n<p>Before each of the top hits there is blast header with hash sign in front:</p>\n\n<pre><code># Fields: Query id, Subject id, % identity, alignment length, mismatches, gap openings, q. start, q. end, s. start, s. end, e-value, bit score\n</code></pre>\n\n<p>So simple:</p>\n\n<pre><code> grep -A 1 Fields out_blastn_frag0* | grep contig | awk '{ print $2}' | awk 'FS=\"|\" {print $4}' | sort | uniq &gt; all_uniq_hits_100302.txt\n</code></pre>\n\n<p>gives me list off unique accession numbers of my top hits suitable for Batch Entrez.</p>\n\n<p><strong>re XML:</strong>\nyes, but I tried to avoid too much network traffic. XML for half a million contigs is a lot of data. save for oneliners I am using python. </p>", "lastedit_user": 62}}, {"pk": 112, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 5, "views": 341, "author": 23, "creation_date": "2010-03-02 17:25:33", "content": "<p>I think that for a professional is very important to follow blogs focused on his own speciality, it is a good way to learn without too much effort and to stay updated. Which bioinformatics-related blogs do you usually read?</p>\n\n<p>note: there is a <a href=\"http://stackoverflow.com/questions/2051319/bioinformatics-resources\">similar question</a> posted on stackoverflow.</p>", "html": "<p>I think that for a professional is very important to follow blogs focused on his own speciality, it is a good way to learn without too much effort and to stay updated. Which bioinformatics-related blogs do you usually read?</p>\n\n<p>note: there is a <a href=\"http://stackoverflow.com/questions/2051319/bioinformatics-resources\">similar question</a> posted on stackoverflow.</p>", "lastedit_user": 23}}, {"pk": 113, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 3, "views": 0, "author": 45, "creation_date": "2010-03-02 17:46:19", "content": "<p><a href=\"http://biostar.stackexchange.com\" rel=\"nofollow\">http://biostar.stackexchange.com</a></p>", "html": "<p><a href=\"http://biostar.stackexchange.com\" rel=\"nofollow\">http://biostar.stackexchange.com</a></p>", "lastedit_user": 45}}, {"pk": 114, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 3, "views": 0, "author": 30, "creation_date": "2010-03-02 18:02:17", "content": "<p>I you want to get the TinySeq XML  <em>without</em> getting the sequence, I would create a SAX parser that would only get the value of the <strong>TaxonId</strong> and ignoring the other field (see \"class TinySeqHandler\" in <a href=\"http://code.google.com/p/lindenb/source/browse/trunk/proj/tinytools/src/org/lindenb/tinytools/TwitterOmics.java\" rel=\"nofollow\">http://code.google.com/p/lindenb/source/browse/trunk/proj/tinytools/src/org/lindenb/tinytools/TwitterOmics.java</a> for an example). Having the taxonId you can get the full lineage from</p>\n\n<pre><code>http://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=taxonomy&amp;id=YOUR_TAXON_ID&amp;retmode=xml\n</code></pre>", "html": "<p>I you want to get the TinySeq XML  <em>without</em> getting the sequence, I would create a SAX parser that would only get the value of the <strong>TaxonId</strong> and ignoring the other field (see \"class TinySeqHandler\" in <a href=\"http://code.google.com/p/lindenb/source/browse/trunk/proj/tinytools/src/org/lindenb/tinytools/TwitterOmics.java\" rel=\"nofollow\">http://code.google.com/p/lindenb/source/browse/trunk/proj/tinytools/src/org/lindenb/tinytools/TwitterOmics.java</a> for an example). Having the taxonId you can get the full lineage from</p>\n\n<pre><code>http://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=taxonomy&amp;id=YOUR_TAXON_ID&amp;retmode=xml\n</code></pre>", "lastedit_user": 30}}, {"pk": 115, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 5, "views": 0, "author": 55, "creation_date": "2010-03-02 18:08:54", "content": "<p>From the description of your input data I guess that you are trying to do a taxonomic classification of sequences in a metagenomics approach. I further assume that you have about 200.000 reads or sequences (or do you alternatively mean assembled contigs of length 200 kB?).\nI am not sure if I completely understand the question, but whatever you do, filtering out the tax ids with your own script might not be the best option. </p>\n\n<p>I assume further you wish to compute a tree of the taxonomic composition of the data in total.</p>\n\n<blockquote>\n  <p>That way one can zoom in (select more\n  than just species/strain and taxonomic\n  Kingdom)</p>\n</blockquote>\n\n<p>For this task you might want to try the <a href=\"http://www-ab.informatik.uni-tuebingen.de/software/megan\" rel=\"nofollow\">MEGAN</a> (Metagenome Analysis) software. </p>\n\n<p>Actually, what you are describing looks very much like one of the publications they have in their publications list:</p>\n\n<p>H. N. Poinar, C. Schwarz, Ji Qi, B. Shapiro, R. D. E. MacPhee, B. Buigues, A. Tikhonov, D. H. Huson, L. P. Tomsho, A. Auch, M. Rampp, W. Miller, S. C. Schuster, <a href=\"http://www.sciencemag.org/cgi/content/abstract/1123360v1\" rel=\"nofollow\">Metagenomics to Paleogenomics: Large-Scale Sequencing of Mammoth DNA</a>, Science 311:392-394, 2006</p>\n\n<p>There is also a <a href=\"http://www-ab.informatik.uni-tuebingen.de/software/megan/how-to-use-blast\" rel=\"nofollow\">tutorial on setting the right BLAST parameter</a> for use with short reads.</p>\n\n<p>So in principle, this program could do the job or at least you can have a look at the right parameters for blast. </p>", "html": "<p>From the description of your input data I guess that you are trying to do a taxonomic classification of sequences in a metagenomics approach. I further assume that you have about 200.000 reads or sequences (or do you alternatively mean assembled contigs of length 200 kB?).\nI am not sure if I completely understand the question, but whatever you do, filtering out the tax ids with your own script might not be the best option. </p>\n\n<p>I assume further you wish to compute a tree of the taxonomic composition of the data in total.</p>\n\n<blockquote>\n  <p>That way one can zoom in (select more\n  than just species/strain and taxonomic\n  Kingdom)</p>\n</blockquote>\n\n<p>For this task you might want to try the <a href=\"http://www-ab.informatik.uni-tuebingen.de/software/megan\" rel=\"nofollow\">MEGAN</a> (Metagenome Analysis) software. </p>\n\n<p>Actually, what you are describing looks very much like one of the publications they have in their publications list:</p>\n\n<p>H. N. Poinar, C. Schwarz, Ji Qi, B. Shapiro, R. D. E. MacPhee, B. Buigues, A. Tikhonov, D. H. Huson, L. P. Tomsho, A. Auch, M. Rampp, W. Miller, S. C. Schuster, <a href=\"http://www.sciencemag.org/cgi/content/abstract/1123360v1\" rel=\"nofollow\">Metagenomics to Paleogenomics: Large-Scale Sequencing of Mammoth DNA</a>, Science 311:392-394, 2006</p>\n\n<p>There is also a <a href=\"http://www-ab.informatik.uni-tuebingen.de/software/megan/how-to-use-blast\" rel=\"nofollow\">tutorial on setting the right BLAST parameter</a> for use with short reads.</p>\n\n<p>So in principle, this program could do the job or at least you can have a look at the right parameters for blast. </p>", "lastedit_user": 55}}, {"pk": 116, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 6, "views": 0, "author": 30, "creation_date": "2010-03-02 18:10:21", "content": "<p>mine of course ! :-) <a href=\"http://plindenbaum.blogspot.com\" rel=\"nofollow\">http://plindenbaum.blogspot.com</a></p>\n\n<p>See also: Bioinformatics blogs on Nature-blogs: <a href=\"http://blogs.nature.com/blogs?tags=bioinformatics\" rel=\"nofollow\">http://blogs.nature.com/blogs?tags=bioinformatics</a></p>\n\n<p>And the life-scientists group on FriendFeed: <a href=\"http://friendfeed.com/the-life-scientists\" rel=\"nofollow\">http://friendfeed.com/the-life-scientists</a></p>", "html": "<p>mine of course ! :-) <a href=\"http://plindenbaum.blogspot.com\" rel=\"nofollow\">http://plindenbaum.blogspot.com</a></p>\n\n<p>See also: Bioinformatics blogs on Nature-blogs: <a href=\"http://blogs.nature.com/blogs?tags=bioinformatics\" rel=\"nofollow\">http://blogs.nature.com/blogs?tags=bioinformatics</a></p>\n\n<p>And the life-scientists group on FriendFeed: <a href=\"http://friendfeed.com/the-life-scientists\" rel=\"nofollow\">http://friendfeed.com/the-life-scientists</a></p>", "lastedit_user": 30}}, {"pk": 117, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 4, "views": 0, "author": 2, "creation_date": "2010-03-02 18:20:20", "content": "<p>Here is  one that I follow, but I'm interested in adding more blogs to my feed:</p>\n\n<ul>\n<li><a href=\"http://bcbio.wordpress.com/\" rel=\"nofollow\">Blue Collar Bioinformatics</a></li>\n</ul>", "html": "<p>Here is  one that I follow, but I'm interested in adding more blogs to my feed:</p>\n\n<ul>\n<li><a href=\"http://bcbio.wordpress.com/\" rel=\"nofollow\">Blue Collar Bioinformatics</a></li>\n</ul>", "lastedit_user": 2}}, {"pk": 118, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 4, "views": 0, "author": 53, "creation_date": "2010-03-02 18:35:19", "content": "<p><a href=\"http://web.archive.org/web/20080213153458/wiki.nodalpoint.org/blogs\" rel=\"nofollow\">Very large list of bioinformatics blogs</a> from the now defunct Nodalpoint wiki</p>", "html": "<p><a href=\"http://web.archive.org/web/20080213153458/wiki.nodalpoint.org/blogs\" rel=\"nofollow\">Very large list of bioinformatics blogs</a> from the now defunct Nodalpoint wiki</p>", "lastedit_user": 53}}, {"pk": 119, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 3, "views": 0, "author": 62, "creation_date": "2010-03-02 19:59:25", "content": "<p>Maybe not The Greatest but these few are covering next gen sequencing:</p>\n\n<p><a href=\"http://www.massgenomics.org/\" rel=\"nofollow\">http://www.massgenomics.org/</a>\nhttp://www.fejes.ca/labels/DNA.html\n<a href=\"http://omicsomics.blogspot.com/\" rel=\"nofollow\">http://omicsomics.blogspot.com/</a></p>", "html": "<p>Maybe not The Greatest but these few are covering next gen sequencing:</p>\n\n<p><a href=\"http://www.massgenomics.org/\" rel=\"nofollow\">http://www.massgenomics.org/</a>\nhttp://www.fejes.ca/labels/DNA.html\n<a href=\"http://omicsomics.blogspot.com/\" rel=\"nofollow\">http://omicsomics.blogspot.com/</a></p>", "lastedit_user": 62}}, {"pk": 120, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 1, "views": 0, "author": 62, "creation_date": "2010-03-02 20:10:25", "content": "<p>May be a little bit dated, but let me blow my own trumpet (collection of links):</p>\n\n<p><a href=\"http://openwetware.org/wiki/Wikiomics%3aBioinfo_tutorial#Protein_localization_and_structure_prediction\" rel=\"nofollow\">Bioinfo_tutorial#Protein_localization_and_structure_prediction</a></p>", "html": "<p>May be a little bit dated, but let me blow my own trumpet (collection of links):</p>\n\n<p><a href=\"http://openwetware.org/wiki/Wikiomics%3aBioinfo_tutorial#Protein_localization_and_structure_prediction\" rel=\"nofollow\">Bioinfo_tutorial#Protein_localization_and_structure_prediction</a></p>", "lastedit_user": 62}}, {"pk": 121, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 6, "views": 0, "author": 7, "creation_date": "2010-03-02 20:38:44", "content": "<p>A friend of mine is a very active blogger in bioinformatics. This is his blog site</p>\n\n<p><a href=\"http://www.abhishek-tiwari.com/\" rel=\"nofollow\">Fisheye Perspective</a></p>\n\n<p>He has also complied a list of bioinformatics and chemo informatics blogs which are very popular. some of you might be interested in it.</p>\n\n<p><a href=\"http://www.abhishek-tiwari.com/2009/02/30-blogs-about-bioinformatics-and.html\" rel=\"nofollow\">30+ Blogs about Bioinformatics and Chemoinformatics Programming</a> </p>", "html": "<p>A friend of mine is a very active blogger in bioinformatics. This is his blog site</p>\n\n<p><a href=\"http://www.abhishek-tiwari.com/\" rel=\"nofollow\">Fisheye Perspective</a></p>\n\n<p>He has also complied a list of bioinformatics and chemo informatics blogs which are very popular. some of you might be interested in it.</p>\n\n<p><a href=\"http://www.abhishek-tiwari.com/2009/02/30-blogs-about-bioinformatics-and.html\" rel=\"nofollow\">30+ Blogs about Bioinformatics and Chemoinformatics Programming</a> </p>", "lastedit_user": 7}}, {"pk": 122, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 7, "views": 0, "author": 7, "creation_date": "2010-03-02 22:42:11", "content": "<p>I think the emphasis should be more on the way we optimize our program rather than language which we use. I personally use languages based on the kind of problem I am answering.</p>\n\n<p>This was an interesting paper which I came across some time back although some of the information mentioned in here might sound redundant to some of you but still it's worth a read.</p>\n\n<p><a href=\"http://www.ploscompbiol.org/article/info%3adoi%2F10.1371%2Fjournal.pcbi.1000589\" rel=\"nofollow\">A Quick Guide for Developing Effective Bioinformatics Programming Skills</a></p>", "html": "<p>I think the emphasis should be more on the way we optimize our program rather than language which we use. I personally use languages based on the kind of problem I am answering.</p>\n\n<p>This was an interesting paper which I came across some time back although some of the information mentioned in here might sound redundant to some of you but still it's worth a read.</p>\n\n<p><a href=\"http://www.ploscompbiol.org/article/info%3adoi%2F10.1371%2Fjournal.pcbi.1000589\" rel=\"nofollow\">A Quick Guide for Developing Effective Bioinformatics Programming Skills</a></p>", "lastedit_user": 7}}, {"pk": 123, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 1, "views": 0, "author": 62, "creation_date": "2010-03-02 23:29:26", "content": "<p>You may check out these pages:</p>\n\n<p><a href=\"http://openwetware.org/wiki/Wikiomics%3aBioinfo_tutorial#Promoter_prediction\" rel=\"nofollow\">Bioinfo_tutorial#Promoter_prediction</a></p>\n\n<p><a href=\"http://openwetware.org/wiki/Wikiomics%3aSequence_motifs\" rel=\"nofollow\">Wikiomics:Sequence_motifs</a></p>\n\n<p>These are ca 2 years old (links may not work etc.) but as a starting point should be OK. \nAlso in unlikely case you did not found it yet: in yeast there has been an extensive motif search study done by Kellis with insane number of citations:</p>\n\n<p>Nature. 2003 May 15;423(6937):241-54.</p>\n\n<p>Kellis M, Patterson N, Endrizzi M, Birren B, Lander ES.</p>\n\n<p><a href=\"http://www.ncbi.nlm.nih.gov/pubmed/12748633\" rel=\"nofollow\">Sequencing and comparison of yeast species to identify genes and regulatory elements.</a></p>", "html": "<p>You may check out these pages:</p>\n\n<p><a href=\"http://openwetware.org/wiki/Wikiomics%3aBioinfo_tutorial#Promoter_prediction\" rel=\"nofollow\">Bioinfo_tutorial#Promoter_prediction</a></p>\n\n<p><a href=\"http://openwetware.org/wiki/Wikiomics%3aSequence_motifs\" rel=\"nofollow\">Wikiomics:Sequence_motifs</a></p>\n\n<p>These are ca 2 years old (links may not work etc.) but as a starting point should be OK. \nAlso in unlikely case you did not found it yet: in yeast there has been an extensive motif search study done by Kellis with insane number of citations:</p>\n\n<p>Nature. 2003 May 15;423(6937):241-54.</p>\n\n<p>Kellis M, Patterson N, Endrizzi M, Birren B, Lander ES.</p>\n\n<p><a href=\"http://www.ncbi.nlm.nih.gov/pubmed/12748633\" rel=\"nofollow\">Sequencing and comparison of yeast species to identify genes and regulatory elements.</a></p>", "lastedit_user": 62}}, {"pk": 124, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 6, "views": 0, "author": 23, "creation_date": "2010-03-03 12:15:23", "content": "<p>Blogs:</p>\n\n<ul>\n<li><a href=\"http://www.programming4scientists.com/\" rel=\"nofollow\">programming4scientists.com</a> - tricks for scientists entering the world of programming</li>\n<li><a href=\"http://www.mailund.dk/\" rel=\"nofollow\">mailund on the Internet</a> - nice blog on programming, population genetics, simulations</li>\n<li><a href=\"http://news.open-bio.org/news/\" rel=\"nofollow\">Open-Bio news</a> - news from the project that hosts bioperl, biopython, etc..</li>\n<li><a href=\"http://www.geospiza.com/finchtalk/\" rel=\"nofollow\">FinchTalk</a> - this one is from a company, but it is interesting and technical worthy of reading it.</li>\n<li><a href=\"http://www.abhishek-tiwari.com/\" rel=\"nofollow\">Fisheye Perspective</a> - very interesting with news on synthetic biology and else - the author is very active in many bioinformatics communities. note: I suggest you to register to the <a href=\"http://feeds2.feedburner.com/AbhishekTiwarisBlog\" rel=\"nofollow\">feeds</a> directly</li>\n<li><a href=\"http://88proof.com/synthetic_biology/blog\" rel=\"nofollow\">88 Proof Synthetic Biology</a></li>\n<li><a href=\"http://learnr.wordpress.com/\" rel=\"nofollow\">Learning R</a> - tips to learn R</li>\n<li><a href=\"http://blog.mckuhn.de/\" rel=\"nofollow\">BioCS</a></li>\n<li><a href=\"http://www.mentalindigestion.net/\" rel=\"nofollow\">MentalIndigestion</a> </li>\n<li><a href=\"http://www.rcsb.org/pdb/motm.do\" rel=\"nofollow\">PDB - MOlecule of the Month</a></li>\n<li><a href=\"http://www.chm.bris.ac.uk/motm/motm.htm\" rel=\"nofollow\">The molecule of the Month</a>  - similar style to pdb's, but different authors</li>\n</ul>\n\n<p>Moreover, I also find useful to follow the blogs from many bioinformatics services or databases:</p>\n\n<ul>\n<li><a href=\"http://www.ncbi.nlm.nih.gov/feed/rss.cgi\" rel=\"nofollow\">NCBI</a>'s news</li>\n<li><a href=\"http://www.uniprot.org/news/?format=rss\" rel=\"nofollow\">Uniprot</a>'s news</li>\n<li><a href=\"http://feeds.plos.org/ploscompbiol/NewArticles\" rel=\"nofollow\">Plos Computational Biology</a></li>\n<li><a href=\"http://go.berkeleybop.org/news4go/rss.xml\" rel=\"nofollow\">Gene Ontology</a> news</li>\n<li><a href=\"http://www.ensembl.org/common/rss.xml\" rel=\"nofollow\">Ensembl</a> news</li>\n</ul>", "html": "<p>Blogs:</p>\n\n<ul>\n<li><a href=\"http://www.programming4scientists.com/\" rel=\"nofollow\">programming4scientists.com</a> - tricks for scientists entering the world of programming</li>\n<li><a href=\"http://www.mailund.dk/\" rel=\"nofollow\">mailund on the Internet</a> - nice blog on programming, population genetics, simulations</li>\n<li><a href=\"http://news.open-bio.org/news/\" rel=\"nofollow\">Open-Bio news</a> - news from the project that hosts bioperl, biopython, etc..</li>\n<li><a href=\"http://www.geospiza.com/finchtalk/\" rel=\"nofollow\">FinchTalk</a> - this one is from a company, but it is interesting and technical worthy of reading it.</li>\n<li><a href=\"http://www.abhishek-tiwari.com/\" rel=\"nofollow\">Fisheye Perspective</a> - very interesting with news on synthetic biology and else - the author is very active in many bioinformatics communities. note: I suggest you to register to the <a href=\"http://feeds2.feedburner.com/AbhishekTiwarisBlog\" rel=\"nofollow\">feeds</a> directly</li>\n<li><a href=\"http://88proof.com/synthetic_biology/blog\" rel=\"nofollow\">88 Proof Synthetic Biology</a></li>\n<li><a href=\"http://learnr.wordpress.com/\" rel=\"nofollow\">Learning R</a> - tips to learn R</li>\n<li><a href=\"http://blog.mckuhn.de/\" rel=\"nofollow\">BioCS</a></li>\n<li><a href=\"http://www.mentalindigestion.net/\" rel=\"nofollow\">MentalIndigestion</a> </li>\n<li><a href=\"http://www.rcsb.org/pdb/motm.do\" rel=\"nofollow\">PDB - MOlecule of the Month</a></li>\n<li><a href=\"http://www.chm.bris.ac.uk/motm/motm.htm\" rel=\"nofollow\">The molecule of the Month</a>  - similar style to pdb's, but different authors</li>\n</ul>\n\n<p>Moreover, I also find useful to follow the blogs from many bioinformatics services or databases:</p>\n\n<ul>\n<li><a href=\"http://www.ncbi.nlm.nih.gov/feed/rss.cgi\" rel=\"nofollow\">NCBI</a>'s news</li>\n<li><a href=\"http://www.uniprot.org/news/?format=rss\" rel=\"nofollow\">Uniprot</a>'s news</li>\n<li><a href=\"http://feeds.plos.org/ploscompbiol/NewArticles\" rel=\"nofollow\">Plos Computational Biology</a></li>\n<li><a href=\"http://go.berkeleybop.org/news4go/rss.xml\" rel=\"nofollow\">Gene Ontology</a> news</li>\n<li><a href=\"http://www.ensembl.org/common/rss.xml\" rel=\"nofollow\">Ensembl</a> news</li>\n</ul>", "lastedit_user": 23}}, {"pk": 125, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 3, "views": 0, "author": 55, "creation_date": "2010-03-03 12:35:31", "content": "<p>The first step when looking for conservation of single bases or motives is often a multiple sequence alignment that will align the sequences in a way such that conserved regions are best visible. This can be a first step before using explicit motif finders like MEME. A good way of visualizing multiple alignments is the <a href=\"http://en.wikipedia.org/wiki/Sequence_logo\" rel=\"nofollow\">sequence-logo</a> that will give a graphical representation of base conservation.</p>\n\n<p>Here is the <a href=\"http://en.wikipedia.org/wiki/List_of_sequence_alignment_software#Multiple_sequence_alignment\" rel=\"nofollow\">wikipedia list of mult.-sequence alignment</a> tools.</p>\n\n<p>I recommend to start with the <a href=\"http://www.ebi.ac.uk/Tools/clustalw2/index.html\" rel=\"nofollow\">EBI web-server of ClustalW</a> though, if that is not enough you can also try MAFFT or T-Coffee.</p>\n\n<p><a href=\"http://weblogo.threeplusone.com/\" rel=\"nofollow\">Weblogo</a> can generate sequence-logo graphics from the output and also from fasta input directly.</p>\n\n<p>Advantage of these tools is that you don't need to install them, so good for a first attempt irrespective of using a Mac.  </p>", "html": "<p>The first step when looking for conservation of single bases or motives is often a multiple sequence alignment that will align the sequences in a way such that conserved regions are best visible. This can be a first step before using explicit motif finders like MEME. A good way of visualizing multiple alignments is the <a href=\"http://en.wikipedia.org/wiki/Sequence_logo\" rel=\"nofollow\">sequence-logo</a> that will give a graphical representation of base conservation.</p>\n\n<p>Here is the <a href=\"http://en.wikipedia.org/wiki/List_of_sequence_alignment_software#Multiple_sequence_alignment\" rel=\"nofollow\">wikipedia list of mult.-sequence alignment</a> tools.</p>\n\n<p>I recommend to start with the <a href=\"http://www.ebi.ac.uk/Tools/clustalw2/index.html\" rel=\"nofollow\">EBI web-server of ClustalW</a> though, if that is not enough you can also try MAFFT or T-Coffee.</p>\n\n<p><a href=\"http://weblogo.threeplusone.com/\" rel=\"nofollow\">Weblogo</a> can generate sequence-logo graphics from the output and also from fasta input directly.</p>\n\n<p>Advantage of these tools is that you don't need to install them, so good for a first attempt irrespective of using a Mac.  </p>", "lastedit_user": 55}}, {"pk": 126, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 2, "views": 0, "author": 64, "creation_date": "2010-03-03 17:17:24", "content": "<p><a href=\"http://manuelcorpas.com/\" rel=\"nofollow\">http://manuelcorpas.com/</a></p>", "html": "<p><a href=\"http://manuelcorpas.com/\" rel=\"nofollow\">http://manuelcorpas.com/</a></p>", "lastedit_user": 64}}, {"pk": 127, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 5, "views": 0, "author": 65, "creation_date": "2010-03-03 21:18:32", "content": "<p>This might be useful for you. This code snippet read the Simulation data and manipulate in HDF5. </p>\n\n<pre>\n*Chnage first 5 includes from \"\" to open and close tags*\n#include \"stdlib.h\"\n#include \"stdio.h\"\n#include \"string.h\"\n#include \"hdf5.h\"\n#include \"hdf5_hl.h\"\n\n#include \"common.h\"\n#include \"hdf5_data.h\"\n#include \"metadata/simulation.h\"\n#include \"metadata/simulation_list.h\"\n\nenum FileIntent\n{\n  READING,\n  WRITING,\n  NEITHER\n};\n\nstruct HDF5Data\n{\n  hid_t file;\n  hid_t group;\n  int ptCreated;\n  hid_t pt;\n  enum FileIntent intent;\n};\n\n/* Iterator function for pulling out existing simulation data.\n * Currently assumes we are only dealing with our own files but could be\n * made smarter to find only groups that contain the required dataspace's.\n */\nstatic herr_t\nrootIterator(hid_t group,const char *name,void *_iter)\n{\n  struct SimulationList* list = (struct SimulationList*)_iter;\n  if (list)\n  {\n    struct Simulation* s = CreateSimulation();\n    simulationSetName(s,name);\n    simulationListAppend(list,s);\n    DestroySimulation(&s);\n    return(0);\n  }\n  return(-1);\n}\n\nstruct HDF5Data* CreateHDF5Data()\n{\n  struct HDF5Data* hdf5 = (struct HDF5Data*)malloc(sizeof(struct HDF5Data));\n  if (hdf5)\n  {\n    hdf5->file = (hid_t)NULL;\n    hdf5->group = (hid_t)NULL;\n    hdf5->pt = (hid_t)NULL;\n    hdf5->ptCreated = 0;\n    hdf5->intent = NEITHER;\n  }\n  return(hdf5);\n}\n\nint DestroyHDF5Data(struct HDF5Data** hdf5)\n{\n  int code = ERR;\n  struct HDF5Data* h5 = *hdf5;\n  if (h5)\n  {\n    if (h5->ptCreated) H5PTclose(h5->pt);\n    if (h5->group > 0) H5Gclose(h5->group);\n    if (h5->file > 0) H5Fclose(h5->file);\n    free(h5);\n    code = OK;\n  }\n  *hdf5 = (struct HDF5Data*)NULL;\n  return(code);\n}\n\nint hdf5DataOpenFileForWriting(struct HDF5Data* hdf5,const char* filename)\n{\n  /* Open the hdf5 file for writing. */\n  int code = ERR;\n  if (hdf5)\n  {\n    hdf5->file =\n      H5Fcreate(filename,H5F_ACC_TRUNC,H5P_DEFAULT,H5P_DEFAULT);\n    if (hdf5->file intent = WRITING;\n      code = OK;\n    }\n  }\n  return(code);\n}\n\nint hdf5DataOpenFileForReading(struct HDF5Data* hdf5,const char* filename)\n{\n  /* Open the hdf5 file for writing. */\n  int code = ERR;\n  if (hdf5)\n  {\n    hdf5->file = H5Fopen(filename,H5F_ACC_RDONLY,H5P_DEFAULT);\n    if (hdf5->file intent = READING;\n      code = OK;\n    }\n  }\n  return(code);\n}\n\nint hdf5DataSetGroup(struct HDF5Data* hdf5,const char* groupName)\n{\n  int code = ERR;\n  if (hdf5 && (hdf5->file > 0))\n  {\n    if (hdf5->group > 0) H5Gclose(hdf5->group);\n    if (hdf5->ptCreated) H5PTclose(hdf5->pt);\n    hdf5->ptCreated = 0;\n    if (groupName)\n    {\n      if (hdf5->intent == WRITING) hdf5->group =\n        H5Gcreate(hdf5->file,groupName,/*size_hint*/0);\n      else hdf5->group = H5Gopen(hdf5->file,groupName);\n    }\n    code = OK;\n  }\n  return(code);\n}\n\nint hdf5WriteSimulationModelURI(struct HDF5Data* hdf5,const char* uri)\n{\n  herr_t status;\n  hid_t datatype,dataspace,dataset;\n  hsize_t dim[1];\n\n  if ((hdf5 == NULL) || (hdf5->intent != WRITING))\n  {\n    fprintf(stderr,\"Attempting to write to a reading file.\\n\");\n    return(ERR);\n  }\n  if (hdf5->group  HDF5_STRING_LENGTH-1)\n  {\n    fprintf(stderr,\n      \"URI too long - fix the hdf5WriteSimulationModelURI code.\\n\");\n    return(ERR);\n  }\n  char* localURI = (char*)calloc(HDF5_STRING_LENGTH,1);\n  strcpy(localURI,uri);\n  /* Make a string data type */\n  datatype = H5Tcopy(H5T_C_S1);\n  /* set the fixed string length */\n  status = H5Tset_size(datatype,HDF5_STRING_LENGTH);\n  /* and we're gonna use C-like null-terminated string */\n  status = H5Tset_strpad(datatype,H5T_STR_NULLTERM);\n  /* Create a simple memory space of the correct size */\n  dim[0] = 1;\n  dataspace = H5Screate_simple(1,dim,NULL);\n  /* and create the dataset to write to */\n  dataset = H5Dcreate(hdf5->group,SIMULATION_MODEL_URI_NAME,datatype,\n    dataspace,H5P_DEFAULT);\n  /* Write the URI to the file */\n  status = H5Dwrite(dataset,datatype,H5S_ALL,H5S_ALL,H5P_DEFAULT,localURI);\n  /* clean up */\n  H5Dclose(dataset);\n  H5Sclose(dataspace);\n  H5Tclose(datatype);\n  /*H5Fflush(hdf5->file,H5F_SCOPE_GLOBAL);*/\n  free(localURI);\n  return(OK);\n}\n\nint hdf5WriteFieldHeader(struct HDF5Data* hdf5,int N,char* names)\n{\n  herr_t status;\n  hid_t datatype,dataspace,dataset;\n  hsize_t dim[1];\n\n  if ((hdf5 == NULL) || (hdf5->intent != WRITING))\n  {\n    fprintf(stderr,\"Attempting to write to a reading file.\\n\");\n    return(ERR);\n  }\n  if (hdf5->group group,FIELD_HEADER_DATA_NAME,datatype,\n    dataspace,H5P_DEFAULT);\n  /* Write the field names to the file */\n  status = H5Dwrite(dataset,datatype,H5S_ALL,H5S_ALL,H5P_DEFAULT,names);\n  /* clean up */\n  H5Dclose(dataset);\n  H5Sclose(dataspace);\n  H5Tclose(datatype);\n  /*H5Fflush(hdf5->file,H5F_SCOPE_GLOBAL);*/\n  return(OK);\n}\n\nint hdf5WriteData(struct HDF5Data* hdf5,int N,double* data)\n{\n  herr_t status = 0;\n\n  if ((hdf5 == NULL) || (hdf5->intent != WRITING))\n  {\n    fprintf(stderr,\"Attempting to write to a reading file.\\n\");\n    return(ERR);\n  }\n  if (hdf5->group ptCreated)\n  {\n    /* create a fixed length packet table in the file */\n    hdf5->pt = H5PTcreate_fl(hdf5->group,DATA_NAME,H5T_NATIVE_DOUBLE,\n      /*chunk size ??*/sizeof(double)*N);\n    hdf5->ptCreated = 1;\n  }\n  if (hdf5->ptCreated)\n  {\n    /* Write a packet to the packet table */\n    status = H5PTappend(hdf5->pt,N,(void*)data);\n  }\n  return(OK);\n}\n\nchar* hdf5ReadSimulationModelURI(struct HDF5Data* hdf5)\n{\n  herr_t status;\n  hid_t datatype,dataspace,dataset;\n  char *uri = (char*)NULL;\n\n  if ((hdf5 == NULL) || (hdf5->intent != READING))\n  {\n    fprintf(stderr,\"Attempting to read from a writing file.\\n\");\n    return((char*)NULL);\n  }\n  if (hdf5->group group,SIMULATION_MODEL_URI_NAME);\n  dataspace = H5Dget_space(dataset);\n  /* get the data type */\n  datatype = H5Dget_type(dataset);\n  /* allocate memory */\n  uri = (char*)malloc(HDF5_STRING_LENGTH);\n  /* read in the data */\n  status = H5Dread(dataset,datatype,H5S_ALL,H5S_ALL,H5P_DEFAULT,uri);\n  if (status intent != READING))\n  {\n    fprintf(stderr,\"Attempting to read from a writing file.\\n\");\n    return((char**)NULL);\n  }\n  if (hdf5->group group,FIELD_HEADER_DATA_NAME);\n  dataspace = H5Dget_space(dataset);\n  /* get the data type */\n  datatype = H5Dget_type(dataset);\n  /* get the size and allocate memory */\n  status = H5Sget_simple_extent_dims(dataspace,dim,NULL);\n  if (status intent != READING))\n  {\n    fprintf(stderr,\"Attempting to read from a writing file.\\n\");\n    return((double*)NULL);\n  }\n  if (hdf5->group ptCreated)\n  {\n    /* open the packet table */\n    hdf5->pt = H5PTopen(hdf5->group,DATA_NAME);\n    /* and make sure we're at the start of the table */\n    H5PTcreate_index(hdf5->pt);\n    hdf5->ptCreated = 1;\n  }\n  if (hdf5->ptCreated)\n  {\n    /* get N packets from the packet table */\n    status = H5PTget_next(hdf5->pt,N,(void*)data);\n    if (statusintent != READING))\n  {\n    fprintf(stderr,\"Attempting to read from a writing file.\\n\");\n    return(simulations);\n  }\n  /* look for any groups which are children of the root group */\n  hid_t rootGroup = H5Gopen(hdf5->file,\"/\");\n  if (rootGroup > 0)\n  {\n    simulations = CreateSimulationList();\n    if (H5Giterate(rootGroup,\"/\",NULL,rootIterator,(void*)simulations)\n      != 0) DestroySimulationList(&simulations);\n    H5Gclose(rootGroup);\n  }\n  return(simulations);\n}\n\n</pre>", "html": "<p>This might be useful for you. This code snippet read the Simulation data and manipulate in HDF5. </p>\n\n<pre>\n*Chnage first 5 includes from \"\" to open and close tags*\n#include \"stdlib.h\"\n#include \"stdio.h\"\n#include \"string.h\"\n#include \"hdf5.h\"\n#include \"hdf5_hl.h\"\n\n#include \"common.h\"\n#include \"hdf5_data.h\"\n#include \"metadata/simulation.h\"\n#include \"metadata/simulation_list.h\"\n\nenum FileIntent\n{\n  READING,\n  WRITING,\n  NEITHER\n};\n\nstruct HDF5Data\n{\n  hid_t file;\n  hid_t group;\n  int ptCreated;\n  hid_t pt;\n  enum FileIntent intent;\n};\n\n/* Iterator function for pulling out existing simulation data.\n * Currently assumes we are only dealing with our own files but could be\n * made smarter to find only groups that contain the required dataspace's.\n */\nstatic herr_t\nrootIterator(hid_t group,const char *name,void *_iter)\n{\n  struct SimulationList* list = (struct SimulationList*)_iter;\n  if (list)\n  {\n    struct Simulation* s = CreateSimulation();\n    simulationSetName(s,name);\n    simulationListAppend(list,s);\n    DestroySimulation(&s);\n    return(0);\n  }\n  return(-1);\n}\n\nstruct HDF5Data* CreateHDF5Data()\n{\n  struct HDF5Data* hdf5 = (struct HDF5Data*)malloc(sizeof(struct HDF5Data));\n  if (hdf5)\n  {\n    hdf5->file = (hid_t)NULL;\n    hdf5->group = (hid_t)NULL;\n    hdf5->pt = (hid_t)NULL;\n    hdf5->ptCreated = 0;\n    hdf5->intent = NEITHER;\n  }\n  return(hdf5);\n}\n\nint DestroyHDF5Data(struct HDF5Data** hdf5)\n{\n  int code = ERR;\n  struct HDF5Data* h5 = *hdf5;\n  if (h5)\n  {\n    if (h5->ptCreated) H5PTclose(h5->pt);\n    if (h5->group > 0) H5Gclose(h5->group);\n    if (h5->file > 0) H5Fclose(h5->file);\n    free(h5);\n    code = OK;\n  }\n  *hdf5 = (struct HDF5Data*)NULL;\n  return(code);\n}\n\nint hdf5DataOpenFileForWriting(struct HDF5Data* hdf5,const char* filename)\n{\n  /* Open the hdf5 file for writing. */\n  int code = ERR;\n  if (hdf5)\n  {\n    hdf5->file =\n      H5Fcreate(filename,H5F_ACC_TRUNC,H5P_DEFAULT,H5P_DEFAULT);\n    if (hdf5->file intent = WRITING;\n      code = OK;\n    }\n  }\n  return(code);\n}\n\nint hdf5DataOpenFileForReading(struct HDF5Data* hdf5,const char* filename)\n{\n  /* Open the hdf5 file for writing. */\n  int code = ERR;\n  if (hdf5)\n  {\n    hdf5->file = H5Fopen(filename,H5F_ACC_RDONLY,H5P_DEFAULT);\n    if (hdf5->file intent = READING;\n      code = OK;\n    }\n  }\n  return(code);\n}\n\nint hdf5DataSetGroup(struct HDF5Data* hdf5,const char* groupName)\n{\n  int code = ERR;\n  if (hdf5 && (hdf5->file > 0))\n  {\n    if (hdf5->group > 0) H5Gclose(hdf5->group);\n    if (hdf5->ptCreated) H5PTclose(hdf5->pt);\n    hdf5->ptCreated = 0;\n    if (groupName)\n    {\n      if (hdf5->intent == WRITING) hdf5->group =\n        H5Gcreate(hdf5->file,groupName,/*size_hint*/0);\n      else hdf5->group = H5Gopen(hdf5->file,groupName);\n    }\n    code = OK;\n  }\n  return(code);\n}\n\nint hdf5WriteSimulationModelURI(struct HDF5Data* hdf5,const char* uri)\n{\n  herr_t status;\n  hid_t datatype,dataspace,dataset;\n  hsize_t dim[1];\n\n  if ((hdf5 == NULL) || (hdf5->intent != WRITING))\n  {\n    fprintf(stderr,\"Attempting to write to a reading file.\\n\");\n    return(ERR);\n  }\n  if (hdf5->group  HDF5_STRING_LENGTH-1)\n  {\n    fprintf(stderr,\n      \"URI too long - fix the hdf5WriteSimulationModelURI code.\\n\");\n    return(ERR);\n  }\n  char* localURI = (char*)calloc(HDF5_STRING_LENGTH,1);\n  strcpy(localURI,uri);\n  /* Make a string data type */\n  datatype = H5Tcopy(H5T_C_S1);\n  /* set the fixed string length */\n  status = H5Tset_size(datatype,HDF5_STRING_LENGTH);\n  /* and we're gonna use C-like null-terminated string */\n  status = H5Tset_strpad(datatype,H5T_STR_NULLTERM);\n  /* Create a simple memory space of the correct size */\n  dim[0] = 1;\n  dataspace = H5Screate_simple(1,dim,NULL);\n  /* and create the dataset to write to */\n  dataset = H5Dcreate(hdf5->group,SIMULATION_MODEL_URI_NAME,datatype,\n    dataspace,H5P_DEFAULT);\n  /* Write the URI to the file */\n  status = H5Dwrite(dataset,datatype,H5S_ALL,H5S_ALL,H5P_DEFAULT,localURI);\n  /* clean up */\n  H5Dclose(dataset);\n  H5Sclose(dataspace);\n  H5Tclose(datatype);\n  /*H5Fflush(hdf5->file,H5F_SCOPE_GLOBAL);*/\n  free(localURI);\n  return(OK);\n}\n\nint hdf5WriteFieldHeader(struct HDF5Data* hdf5,int N,char* names)\n{\n  herr_t status;\n  hid_t datatype,dataspace,dataset;\n  hsize_t dim[1];\n\n  if ((hdf5 == NULL) || (hdf5->intent != WRITING))\n  {\n    fprintf(stderr,\"Attempting to write to a reading file.\\n\");\n    return(ERR);\n  }\n  if (hdf5->group group,FIELD_HEADER_DATA_NAME,datatype,\n    dataspace,H5P_DEFAULT);\n  /* Write the field names to the file */\n  status = H5Dwrite(dataset,datatype,H5S_ALL,H5S_ALL,H5P_DEFAULT,names);\n  /* clean up */\n  H5Dclose(dataset);\n  H5Sclose(dataspace);\n  H5Tclose(datatype);\n  /*H5Fflush(hdf5->file,H5F_SCOPE_GLOBAL);*/\n  return(OK);\n}\n\nint hdf5WriteData(struct HDF5Data* hdf5,int N,double* data)\n{\n  herr_t status = 0;\n\n  if ((hdf5 == NULL) || (hdf5->intent != WRITING))\n  {\n    fprintf(stderr,\"Attempting to write to a reading file.\\n\");\n    return(ERR);\n  }\n  if (hdf5->group ptCreated)\n  {\n    /* create a fixed length packet table in the file */\n    hdf5->pt = H5PTcreate_fl(hdf5->group,DATA_NAME,H5T_NATIVE_DOUBLE,\n      /*chunk size ??*/sizeof(double)*N);\n    hdf5->ptCreated = 1;\n  }\n  if (hdf5->ptCreated)\n  {\n    /* Write a packet to the packet table */\n    status = H5PTappend(hdf5->pt,N,(void*)data);\n  }\n  return(OK);\n}\n\nchar* hdf5ReadSimulationModelURI(struct HDF5Data* hdf5)\n{\n  herr_t status;\n  hid_t datatype,dataspace,dataset;\n  char *uri = (char*)NULL;\n\n  if ((hdf5 == NULL) || (hdf5->intent != READING))\n  {\n    fprintf(stderr,\"Attempting to read from a writing file.\\n\");\n    return((char*)NULL);\n  }\n  if (hdf5->group group,SIMULATION_MODEL_URI_NAME);\n  dataspace = H5Dget_space(dataset);\n  /* get the data type */\n  datatype = H5Dget_type(dataset);\n  /* allocate memory */\n  uri = (char*)malloc(HDF5_STRING_LENGTH);\n  /* read in the data */\n  status = H5Dread(dataset,datatype,H5S_ALL,H5S_ALL,H5P_DEFAULT,uri);\n  if (status intent != READING))\n  {\n    fprintf(stderr,\"Attempting to read from a writing file.\\n\");\n    return((char**)NULL);\n  }\n  if (hdf5->group group,FIELD_HEADER_DATA_NAME);\n  dataspace = H5Dget_space(dataset);\n  /* get the data type */\n  datatype = H5Dget_type(dataset);\n  /* get the size and allocate memory */\n  status = H5Sget_simple_extent_dims(dataspace,dim,NULL);\n  if (status intent != READING))\n  {\n    fprintf(stderr,\"Attempting to read from a writing file.\\n\");\n    return((double*)NULL);\n  }\n  if (hdf5->group ptCreated)\n  {\n    /* open the packet table */\n    hdf5->pt = H5PTopen(hdf5->group,DATA_NAME);\n    /* and make sure we're at the start of the table */\n    H5PTcreate_index(hdf5->pt);\n    hdf5->ptCreated = 1;\n  }\n  if (hdf5->ptCreated)\n  {\n    /* get N packets from the packet table */\n    status = H5PTget_next(hdf5->pt,N,(void*)data);\n    if (statusintent != READING))\n  {\n    fprintf(stderr,\"Attempting to read from a writing file.\\n\");\n    return(simulations);\n  }\n  /* look for any groups which are children of the root group */\n  hid_t rootGroup = H5Gopen(hdf5->file,\"/\");\n  if (rootGroup > 0)\n  {\n    simulations = CreateSimulationList();\n    if (H5Giterate(rootGroup,\"/\",NULL,rootIterator,(void*)simulations)\n      != 0) DestroySimulationList(&simulations);\n    H5Gclose(rootGroup);\n  }\n  return(simulations);\n}\n\n</pre>", "lastedit_user": 65}}, {"pk": 128, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 4, "views": 193, "author": 7, "creation_date": "2010-03-04 00:14:24", "content": "<p>I think in one of the <a href=\"http://biostar.stackexchange.com/questions/41/how-much-do-you-trust-geneontology\" rel=\"nofollow\">earlier thread</a>, Istvan has already asked about the reliability of GO annotation. I was wondering, if any of you have any experience with the functional annotation based upon the <a href=\"http://pfam.sanger.ac.uk/\" rel=\"nofollow\">Pfam database</a>. I am looking forward to functionally annotate a large set of peptide library and the easiest way I can think about is to do batch search of those peptides against the Pfam database.In case you guys know a better approach , kindly share it.</p>\n\n<p>cheers</p>", "html": "<p>I think in one of the <a href=\"http://biostar.stackexchange.com/questions/41/how-much-do-you-trust-geneontology\" rel=\"nofollow\">earlier thread</a>, Istvan has already asked about the reliability of GO annotation. I was wondering, if any of you have any experience with the functional annotation based upon the <a href=\"http://pfam.sanger.ac.uk/\" rel=\"nofollow\">Pfam database</a>. I am looking forward to functionally annotate a large set of peptide library and the easiest way I can think about is to do batch search of those peptides against the Pfam database.In case you guys know a better approach , kindly share it.</p>\n\n<p>cheers</p>", "lastedit_user": 7}}, {"pk": 129, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 4, "views": 0, "author": 26, "creation_date": "2010-03-04 08:49:51", "content": "<p>My experience with Pfam is limited, but I think relevant to your question.</p>\n\n<p>I work on a human pathogen which has been entirely sequenced and therefore we know quite a bit about what's in it. In particular, I'm interested one pfam group (PF02009) that groups similar proteins from this pathogen.</p>\n\n<p>The problem I have with the pfam group is that it groups several distinct groups of proteins. These proteins are related, I agree, however, <strong>at the level I'm comparing them (which is in detail)</strong>, I would not jump to the conclusion that these proteins share the same function.</p>\n\n<p>That brings me to the following comment on your question: looking for functional annotation is very vague. What detail of functional annotation are you looking for?</p>\n\n<ul>\n<li>Do you want to know if these peptides belong to groups called \"enzymes\" or \"receptors\" or some kind of basic \"building blocks\", without any more detail?</li>\n<li>Do you want to know if these peptides belong to a specific class of enzymes?</li>\n<li>Do you want to know if these peptides belong to a specific sub-class of enzymes, going all the way down to the substrate specificity?</li>\n</ul>\n\n<p>Another question I would have is regarding the length of your peptides. I recall one of my collaborators complaining about the fact that Pfam would not detect fragments that were too short. That was with Pfam2. I don't know how this is with Pfam3 though. So, you'll have to test this.</p>\n\n<p>Depending on the answer to these questions (and many more) you may or may not want to <strong><em>only</em></strong> use Pfam. But in any case, Pfam could be a good start, if your peptides are not too short.</p>\n\n<p>Another way that might be more relevant to short sequences would be to look at BLAST approaches (PSI- or PHI-BLAST in particular) to find what your peptides match to, and then look at the functional annotation of those hits (including whatever Pfam domains they may contain). I think this method would be more sensitive than the Pfam approach.</p>", "html": "<p>My experience with Pfam is limited, but I think relevant to your question.</p>\n\n<p>I work on a human pathogen which has been entirely sequenced and therefore we know quite a bit about what's in it. In particular, I'm interested one pfam group (PF02009) that groups similar proteins from this pathogen.</p>\n\n<p>The problem I have with the pfam group is that it groups several distinct groups of proteins. These proteins are related, I agree, however, <strong>at the level I'm comparing them (which is in detail)</strong>, I would not jump to the conclusion that these proteins share the same function.</p>\n\n<p>That brings me to the following comment on your question: looking for functional annotation is very vague. What detail of functional annotation are you looking for?</p>\n\n<ul>\n<li>Do you want to know if these peptides belong to groups called \"enzymes\" or \"receptors\" or some kind of basic \"building blocks\", without any more detail?</li>\n<li>Do you want to know if these peptides belong to a specific class of enzymes?</li>\n<li>Do you want to know if these peptides belong to a specific sub-class of enzymes, going all the way down to the substrate specificity?</li>\n</ul>\n\n<p>Another question I would have is regarding the length of your peptides. I recall one of my collaborators complaining about the fact that Pfam would not detect fragments that were too short. That was with Pfam2. I don't know how this is with Pfam3 though. So, you'll have to test this.</p>\n\n<p>Depending on the answer to these questions (and many more) you may or may not want to <strong><em>only</em></strong> use Pfam. But in any case, Pfam could be a good start, if your peptides are not too short.</p>\n\n<p>Another way that might be more relevant to short sequences would be to look at BLAST approaches (PSI- or PHI-BLAST in particular) to find what your peptides match to, and then look at the functional annotation of those hits (including whatever Pfam domains they may contain). I think this method would be more sensitive than the Pfam approach.</p>", "lastedit_user": 26}}, {"pk": 130, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 4, "views": 81, "author": 62, "creation_date": "2010-03-04 11:41:29", "content": "<p>In a plant genome project I got a draft assembly (> 500Mbp, >500k contigs). \nA number of contigs is no doubt bacterial in origin. </p>\n\n<p>There are at least 3 peaks when it comes to GC content (40% - my plant, 50% largest contig, 65-70% another group). </p>\n\n<p>Blastn takes ages, and there is no point of doing it every time we change assembler parameters even slightly. So while rather sooner than later I will have to split 454 sff files into my_plant vs not_my_plant, I will still need a faster method of classifying contigs to not_my_plant group. </p>\n\n<p>In metagenomics this is often being done by calculating k-mer frequencies, see i.e (not supported anymore) TETRA:  <a href=\"http://www.megx.net/tetra/\" rel=\"nofollow\">http://www.megx.net/tetra/</a> (see the manual for the algorithm)</p>\n\n<p>Do you use any program for fast clustering/classification of  sequences from say 150bp to 1Mbp using k-mer frequencies?</p>", "html": "<p>In a plant genome project I got a draft assembly (> 500Mbp, >500k contigs). \nA number of contigs is no doubt bacterial in origin. </p>\n\n<p>There are at least 3 peaks when it comes to GC content (40% - my plant, 50% largest contig, 65-70% another group). </p>\n\n<p>Blastn takes ages, and there is no point of doing it every time we change assembler parameters even slightly. So while rather sooner than later I will have to split 454 sff files into my_plant vs not_my_plant, I will still need a faster method of classifying contigs to not_my_plant group. </p>\n\n<p>In metagenomics this is often being done by calculating k-mer frequencies, see i.e (not supported anymore) TETRA:  <a href=\"http://www.megx.net/tetra/\" rel=\"nofollow\">http://www.megx.net/tetra/</a> (see the manual for the algorithm)</p>\n\n<p>Do you use any program for fast clustering/classification of  sequences from say 150bp to 1Mbp using k-mer frequencies?</p>", "lastedit_user": 62}}, {"pk": 131, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 3, "views": 0, "author": 68, "creation_date": "2010-03-04 13:51:46", "content": "<p>Shameless plug for the <a href=\"http://www.reddit.com/r/bioinformatics\" rel=\"nofollow\">bioinformatics subreddit</a> (of which I am a moderator).</p>", "html": "<p>Shameless plug for the <a href=\"http://www.reddit.com/r/bioinformatics\" rel=\"nofollow\">bioinformatics subreddit</a> (of which I am a moderator).</p>", "lastedit_user": 68}}, {"pk": 132, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 5, "views": 335, "author": 10, "creation_date": "2010-03-04 14:08:04", "content": "<p>In the past years cloud computing services such as the <a href=\"http://aws.amazon.com/ec2/\" rel=\"nofollow\">Amazon's Elastic Compute</a> cloud seem to have emerged a recommended alternative for providing high performance computing.</p>\n\n<p>What are your experiences when it comes to <em>bioinformatics in the cloud</em>?</p>", "html": "<p>In the past years cloud computing services such as the <a href=\"http://aws.amazon.com/ec2/\" rel=\"nofollow\">Amazon's Elastic Compute</a> cloud seem to have emerged a recommended alternative for providing high performance computing.</p>\n\n<p>What are your experiences when it comes to <em>bioinformatics in the cloud</em>?</p>", "lastedit_user": 10}}, {"pk": 133, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 9, "views": 0, "author": 2, "creation_date": "2010-03-04 14:24:46", "content": "<p>We have been somewhat <em>early adopters</em> of cloud computing, having evaluated it for our bioinformatics needs more than two years ago. We are also what you could call <em>early abandoners</em>;  after using it for a year we compared it against a the high computing facility' services at our university (<a href=\"http://gears.aset.psu.edu/hpc/\" rel=\"nofollow\">Penn State HPC</a>) and we found it substantially under-performing.</p>\n\n<p>This is not to say that Cloud Computing is not a fantastic idea, its just that just about all universities and science oriented organizations have far more powerful computing facilities to begin with.</p>\n\n<p>Could computing is probably ideal for satisfying the temporary needs of a small lab with minimal funds and resources as it allows them to perform computations that otherwise would be out of reach. Yet as soon as the lab has continuous computational needs the cloud based solutions become not only more expensive but also a lot less powerful than a comparable \"traditional\" computing services.</p>\n\n<p>I have come up with my own \"rule of thumb\" estimation: <em>If within an entire year one only needs to run their computers for less than 30% of time then cloud computing may be worth it.</em> </p>", "html": "<p>We have been somewhat <em>early adopters</em> of cloud computing, having evaluated it for our bioinformatics needs more than two years ago. We are also what you could call <em>early abandoners</em>;  after using it for a year we compared it against a the high computing facility' services at our university (<a href=\"http://gears.aset.psu.edu/hpc/\" rel=\"nofollow\">Penn State HPC</a>) and we found it substantially under-performing.</p>\n\n<p>This is not to say that Cloud Computing is not a fantastic idea, its just that just about all universities and science oriented organizations have far more powerful computing facilities to begin with.</p>\n\n<p>Could computing is probably ideal for satisfying the temporary needs of a small lab with minimal funds and resources as it allows them to perform computations that otherwise would be out of reach. Yet as soon as the lab has continuous computational needs the cloud based solutions become not only more expensive but also a lot less powerful than a comparable \"traditional\" computing services.</p>\n\n<p>I have come up with my own \"rule of thumb\" estimation: <em>If within an entire year one only needs to run their computers for less than 30% of time then cloud computing may be worth it.</em> </p>", "lastedit_user": 2}}, {"pk": 134, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 3, "views": 0, "author": 64, "creation_date": "2010-03-04 14:30:04", "content": "<p>This article may shed light onto how to organise bioinformatics projects.\nWilliam Stafford Noble. \"A quick guide to organizing computational biology experiments.\" PLoS Computational Biology. 5(7):e1000424, 2009</p>\n\n<p>link:\n<a href=\"http://noble.gs.washington.edu/papers/noble2009quick.html\" rel=\"nofollow\">http://noble.gs.washington.edu/papers/noble2009quick.html</a></p>\n\n<p>For me using git and the directory structure that Bill Noble mentiones in this articles has been a better approach than what I had before.</p>", "html": "<p>This article may shed light onto how to organise bioinformatics projects.\nWilliam Stafford Noble. \"A quick guide to organizing computational biology experiments.\" PLoS Computational Biology. 5(7):e1000424, 2009</p>\n\n<p>link:\n<a href=\"http://noble.gs.washington.edu/papers/noble2009quick.html\" rel=\"nofollow\">http://noble.gs.washington.edu/papers/noble2009quick.html</a></p>\n\n<p>For me using git and the directory structure that Bill Noble mentiones in this articles has been a better approach than what I had before.</p>", "lastedit_user": 64}}, {"pk": 135, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 6, "views": 0, "author": 64, "creation_date": "2010-03-04 14:33:33", "content": "<p>Cloud computing is becoming a technology mature enough for its use in genome research experiments. The use of large datasets, its highly demanding algorithms and the need for sudden computational resources, make large-scale sequencing experiments an attractive test-case for cloud computing. So far I have seen cloud computing demonstrated <a href=\"http://www.r-project.org/\" rel=\"nofollow\">using R</a>. However, it remains to be seen a rigorous comparison of its performance using a <a href=\"http://blast.ncbi.nlm.nih.gov/Blast.cgi\" rel=\"nofollow\">BLAST search</a> and its ability to cope with ever-increasing databases and open source frameworks such as <a href=\"http://www.bioperl.org/wiki/Main_Page\" rel=\"nofollow\">bioperl</a> or <a href=\"http://www.bioconductor.org/\" rel=\"nofollow\">bioconductor</a>.</p>\n\n<p>Cloud computing claims to be <a href=\"http://www.guardian.co.uk/technology/2008/sep/29/cloud.computing.richard.stallman\" rel=\"nofollow\">a resource where IT power is delivered over the Internet as you need it, rather than drawn from a desktop computer</a>, in a fashion seemingly <a href=\"http://www.infoworld.com/article/08/04/07/15FE-cloud-computing-reality_1.html\" rel=\"nofollow\">similar to having your own virtual servers available over the Internet</a>. Some of the most important aspects of cloud computing are:</p>\n\n<ul>\n<li>Software as a Service (SaaS): where you buy a software license for a determined period of time.</li>\n<li>Utility Computing: storage and virtual servers that IT can access on demand.</li>\n<li>Web Services.</li>\n</ul>\n\n<p>My first exposure to cloud computing came of an email from <a href=\"http://www.sanger.ac.uk/Users/mw4/\" rel=\"nofollow\">Matt Wood</a>, a newly established group leader at the <a href=\"http://www.sanger.ac.uk/\" rel=\"nofollow\">Sanger Institute</a>, announcing the <a href=\"http://cloudcamb.org/\" rel=\"nofollow\">Cloud Computing Group</a> in Cambridge, UK. At that point I had no idea of what it meant. When I attended the meeting at Cambridge University\u2019s <a href=\"http://www.cms.cam.ac.uk/site/\" rel=\"nofollow\">Centre for Mathematical Sciences</a>, to my surprise I found there a very select audience, ranging from the director of IT at Sanger, <a href=\"http://www.yourgenome.org/people/phil_butcher.shtml\" rel=\"nofollow\">Phil Butcher</a>, one of the <a href=\"http://www.ensembl.org/index.html\" rel=\"nofollow\">Ensembl</a> software coordinators, <a href=\"http://www.ebi.ac.uk/Information/Staff/person_maintx.php?s_person_id=299\" rel=\"nofollow\">Glenn Proctor</a>, and quite a few local start-up companies.</p>\n\n<p>Among the presenters, we had Simone Brunozzi, from <a href=\"http://aws.amazon.com/ec2/\" rel=\"nofollow\">Amazon\u2019s Cloud Computing</a>. I think he had an interesting story to tell: how Amazon, a well known company, is now involved in the business of cloud computing and selling it. Apparently, this technology they sell was developed for Amazon\u2019s own business. Among their main challenges was to be able to address the capricious shopping habits of customers, with orders peaking around Christmas and quite flat the rest of the year. These trends required rapid adaptability of computational resources. The idea of cloud computing fitted well with their business model of e-commerce: you don\u2019t need to care about where your computation is done, the only thing you care about is that you have the needed resources and do not have to pay for them when you don\u2019t need them. One of the things that stroke me about Amazon\u2019s presentation was that they would not tell us the number of processors they had at their disposal.</p>\n\n<p>When it comes to using cloud computing for genomics research, prices may be quite expensive when they add up. The bioinformatics field, greatly influenced by the open-source movement, is not likely to rush to join Amazon\u2019s cloud. Private efforts trying to make money out of human genome technology have remained rather unsuccessful to date: think of Celera Genomics or Lion Bioscience. I am skeptical of the bioinformatics community adopting cloud computing unless open source ideals are embraced: </p>\n\n<ul>\n<li>allowing people to develop and contribute to the technology if and when they want to, </li>\n<li>allowing total openness in terms of its achievements and pitfalls and </li>\n<li>making it free to use for everyone. </li>\n</ul>\n\n<p>I do not think that making it free does not mean there is no margin for profit. Think of the profitability of free-to-use technologies such as <a href=\"http://www.java.com/en/\" rel=\"nofollow\">java</a> or <a href=\"http://www.mysql.com/\" rel=\"nofollow\">MySQL</a>, both components of <a href=\"http://www.sun.com/\" rel=\"nofollow\">SUN Microsystems</a>\u2019 business.</p>\n\n<p>Despite the promise of potential benefits for the bioinformatics community, the way the cloud is being portrayed does not conform the ideals of free access and openness. Unless these ideals are implemented to some extent, I see it difficult for the cloud to take root in the bioinformatics field and become a new standard platform for genome research.</p>", "html": "<p>Cloud computing is becoming a technology mature enough for its use in genome research experiments. The use of large datasets, its highly demanding algorithms and the need for sudden computational resources, make large-scale sequencing experiments an attractive test-case for cloud computing. So far I have seen cloud computing demonstrated <a href=\"http://www.r-project.org/\" rel=\"nofollow\">using R</a>. However, it remains to be seen a rigorous comparison of its performance using a <a href=\"http://blast.ncbi.nlm.nih.gov/Blast.cgi\" rel=\"nofollow\">BLAST search</a> and its ability to cope with ever-increasing databases and open source frameworks such as <a href=\"http://www.bioperl.org/wiki/Main_Page\" rel=\"nofollow\">bioperl</a> or <a href=\"http://www.bioconductor.org/\" rel=\"nofollow\">bioconductor</a>.</p>\n\n<p>Cloud computing claims to be <a href=\"http://www.guardian.co.uk/technology/2008/sep/29/cloud.computing.richard.stallman\" rel=\"nofollow\">a resource where IT power is delivered over the Internet as you need it, rather than drawn from a desktop computer</a>, in a fashion seemingly <a href=\"http://www.infoworld.com/article/08/04/07/15FE-cloud-computing-reality_1.html\" rel=\"nofollow\">similar to having your own virtual servers available over the Internet</a>. Some of the most important aspects of cloud computing are:</p>\n\n<ul>\n<li>Software as a Service (SaaS): where you buy a software license for a determined period of time.</li>\n<li>Utility Computing: storage and virtual servers that IT can access on demand.</li>\n<li>Web Services.</li>\n</ul>\n\n<p>My first exposure to cloud computing came of an email from <a href=\"http://www.sanger.ac.uk/Users/mw4/\" rel=\"nofollow\">Matt Wood</a>, a newly established group leader at the <a href=\"http://www.sanger.ac.uk/\" rel=\"nofollow\">Sanger Institute</a>, announcing the <a href=\"http://cloudcamb.org/\" rel=\"nofollow\">Cloud Computing Group</a> in Cambridge, UK. At that point I had no idea of what it meant. When I attended the meeting at Cambridge University\u2019s <a href=\"http://www.cms.cam.ac.uk/site/\" rel=\"nofollow\">Centre for Mathematical Sciences</a>, to my surprise I found there a very select audience, ranging from the director of IT at Sanger, <a href=\"http://www.yourgenome.org/people/phil_butcher.shtml\" rel=\"nofollow\">Phil Butcher</a>, one of the <a href=\"http://www.ensembl.org/index.html\" rel=\"nofollow\">Ensembl</a> software coordinators, <a href=\"http://www.ebi.ac.uk/Information/Staff/person_maintx.php?s_person_id=299\" rel=\"nofollow\">Glenn Proctor</a>, and quite a few local start-up companies.</p>\n\n<p>Among the presenters, we had Simone Brunozzi, from <a href=\"http://aws.amazon.com/ec2/\" rel=\"nofollow\">Amazon\u2019s Cloud Computing</a>. I think he had an interesting story to tell: how Amazon, a well known company, is now involved in the business of cloud computing and selling it. Apparently, this technology they sell was developed for Amazon\u2019s own business. Among their main challenges was to be able to address the capricious shopping habits of customers, with orders peaking around Christmas and quite flat the rest of the year. These trends required rapid adaptability of computational resources. The idea of cloud computing fitted well with their business model of e-commerce: you don\u2019t need to care about where your computation is done, the only thing you care about is that you have the needed resources and do not have to pay for them when you don\u2019t need them. One of the things that stroke me about Amazon\u2019s presentation was that they would not tell us the number of processors they had at their disposal.</p>\n\n<p>When it comes to using cloud computing for genomics research, prices may be quite expensive when they add up. The bioinformatics field, greatly influenced by the open-source movement, is not likely to rush to join Amazon\u2019s cloud. Private efforts trying to make money out of human genome technology have remained rather unsuccessful to date: think of Celera Genomics or Lion Bioscience. I am skeptical of the bioinformatics community adopting cloud computing unless open source ideals are embraced: </p>\n\n<ul>\n<li>allowing people to develop and contribute to the technology if and when they want to, </li>\n<li>allowing total openness in terms of its achievements and pitfalls and </li>\n<li>making it free to use for everyone. </li>\n</ul>\n\n<p>I do not think that making it free does not mean there is no margin for profit. Think of the profitability of free-to-use technologies such as <a href=\"http://www.java.com/en/\" rel=\"nofollow\">java</a> or <a href=\"http://www.mysql.com/\" rel=\"nofollow\">MySQL</a>, both components of <a href=\"http://www.sun.com/\" rel=\"nofollow\">SUN Microsystems</a>\u2019 business.</p>\n\n<p>Despite the promise of potential benefits for the bioinformatics community, the way the cloud is being portrayed does not conform the ideals of free access and openness. Unless these ideals are implemented to some extent, I see it difficult for the cloud to take root in the bioinformatics field and become a new standard platform for genome research.</p>", "lastedit_user": 64}}, {"pk": 136, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 4, "views": 0, "author": 64, "creation_date": "2010-03-04 14:36:29", "content": "<p>Unix, Perl and MySQL are programming skills that you need to master (I can think of people who would also say Java, Javascript, CSS, etc.). The best way to master the art of programming is to spend as much time as possible reading and writing source code. Some people think Perl is doomed. This is not true in the bioinformatics world. In part due to legacy and in part to the flexibility it provides, Perl is still the language of choice for many biohackers. Perl is used to construct 1) the back end of web applications, 2) pipelines and workflows and 3) quick and dirty scripts for parsing and calling other programs.</p>\n\n<p>You will also need to be familiar with projects like R and Bioconductor, since a lot of the work will involve providing the computational infrastructure for analyzing data. In addition, you\u2019ll need to know about data formats (fasta, sbml, mmcif\u2026), software toolkits and libraries (Paup, Phylip, EMBOSS, BioPerl\u2026), databases (Ensembl, InterPro, PDB, KEGG\u2026), webservers and portals (Pubmed, ISCB).</p>\n\n<p>Finally keep in mind best practices (like refraining from reinventing the wheel), but above all, give yourself the time to enjoy the learning process. Getting to the top usually takes longer than staying at the top; so what\u2019s the point if you haven\u2019t enjoyed the trip?</p>", "html": "<p>Unix, Perl and MySQL are programming skills that you need to master (I can think of people who would also say Java, Javascript, CSS, etc.). The best way to master the art of programming is to spend as much time as possible reading and writing source code. Some people think Perl is doomed. This is not true in the bioinformatics world. In part due to legacy and in part to the flexibility it provides, Perl is still the language of choice for many biohackers. Perl is used to construct 1) the back end of web applications, 2) pipelines and workflows and 3) quick and dirty scripts for parsing and calling other programs.</p>\n\n<p>You will also need to be familiar with projects like R and Bioconductor, since a lot of the work will involve providing the computational infrastructure for analyzing data. In addition, you\u2019ll need to know about data formats (fasta, sbml, mmcif\u2026), software toolkits and libraries (Paup, Phylip, EMBOSS, BioPerl\u2026), databases (Ensembl, InterPro, PDB, KEGG\u2026), webservers and portals (Pubmed, ISCB).</p>\n\n<p>Finally keep in mind best practices (like refraining from reinventing the wheel), but above all, give yourself the time to enjoy the learning process. Getting to the top usually takes longer than staying at the top; so what\u2019s the point if you haven\u2019t enjoyed the trip?</p>", "lastedit_user": 64}}, {"pk": 137, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 4, "views": 214, "author": 10, "creation_date": "2010-03-04 14:40:30", "content": "<p>When it comes to short read mapping there seemingly is no shortage of methods or software to choose from. Yet in practice we found that some published methods did now work at all, others exhibited suboptimal behaviors. </p>\n\n<ul>\n<li>What short read mappers do you use? </li>\n<li>How many reads do you need align and what is the size of the genome that you align to? </li>\n<li>What are the typical computational resources: parallel processes/CPU/memory required for the completion of the task?</li>\n<li>What is your overall assessment of the procedure: easy, tedious, fun?</li>\n</ul>\n\n<p>Note: we're primarily looking to hear of your first hand, personal experiences with any given tool.</p>", "html": "<p>When it comes to short read mapping there seemingly is no shortage of methods or software to choose from. Yet in practice we found that some published methods did now work at all, others exhibited suboptimal behaviors. </p>\n\n<ul>\n<li>What short read mappers do you use? </li>\n<li>How many reads do you need align and what is the size of the genome that you align to? </li>\n<li>What are the typical computational resources: parallel processes/CPU/memory required for the completion of the task?</li>\n<li>What is your overall assessment of the procedure: easy, tedious, fun?</li>\n</ul>\n\n<p>Note: we're primarily looking to hear of your first hand, personal experiences with any given tool.</p>", "lastedit_user": 10}}, {"pk": 138, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 3, "views": 141, "author": 64, "creation_date": "2010-03-04 14:54:54", "content": "<p>I guess the best place would need to:</p>\n\n<ul>\n<li>Have a critical mass of scientists</li>\n<li>Be a world leading site for its reputation in science</li>\n<li>Have well known projects</li>\n<li>Good facilties</li>\n<li>Good pay/Well funded</li>\n<li>Leading Technology Provider</li>\n</ul>", "html": "<p>I guess the best place would need to:</p>\n\n<ul>\n<li>Have a critical mass of scientists</li>\n<li>Be a world leading site for its reputation in science</li>\n<li>Have well known projects</li>\n<li>Good facilties</li>\n<li>Good pay/Well funded</li>\n<li>Leading Technology Provider</li>\n</ul>", "lastedit_user": 64}}, {"pk": 139, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 0, "views": 107, "author": 7, "creation_date": "2010-03-04 14:57:03", "content": "<p>The other day on facebook, I posted this link and some of my friend started discussing about this article. </p>\n\n<p><a href=\"http://bit.ly/9YIW7k\" rel=\"nofollow\">It's \"Watson Meets Moore\" as Ion Torrent founder Jonatha Rothberg introduces post-light semiconductor sequencing.</a> </p>\n\n<p>few comments from my friends</p>\n\n<p>Krishna : \"I dont understand this rat race for next gen sequencing. While its true that a cheaper and faster sequencing technology would revolutionalize personal genomics, its more important to develop effective algorithms that could make sense of the zillions of data that would be generated. We do have hundreds of organisms sequenced, but still dont seem to understand a bit of the complexity of the genome!!\"</p>\n\n<p><a href=\"http://biostar.stackexchange.com/users/65/abhishek-tiwari\" rel=\"nofollow\">Abhishek Tiwari</a>\n@Krishna I could not agree more. People think by commoditizing the genome sequencing some day miracle will happen and we will be able to understand the complexity of Genome. I am afraid we are going to lost in data without any clue what we are looking for. See this in other way, diverting to much funding in these sequencing projects makes it very hard to sustain to bioinformatics research. </p>\n\n<p>We were unison in observation that computational genomics is not at par with it's experimental counter part at the moment. I was wondering what do you guys think about it and how can we make sure that we don't loose the \"interesting information\" coming out of the sequencing projects ?</p>", "html": "<p>The other day on facebook, I posted this link and some of my friend started discussing about this article. </p>\n\n<p><a href=\"http://bit.ly/9YIW7k\" rel=\"nofollow\">It's \"Watson Meets Moore\" as Ion Torrent founder Jonatha Rothberg introduces post-light semiconductor sequencing.</a> </p>\n\n<p>few comments from my friends</p>\n\n<p>Krishna : \"I dont understand this rat race for next gen sequencing. While its true that a cheaper and faster sequencing technology would revolutionalize personal genomics, its more important to develop effective algorithms that could make sense of the zillions of data that would be generated. We do have hundreds of organisms sequenced, but still dont seem to understand a bit of the complexity of the genome!!\"</p>\n\n<p><a href=\"http://biostar.stackexchange.com/users/65/abhishek-tiwari\" rel=\"nofollow\">Abhishek Tiwari</a>\n@Krishna I could not agree more. People think by commoditizing the genome sequencing some day miracle will happen and we will be able to understand the complexity of Genome. I am afraid we are going to lost in data without any clue what we are looking for. See this in other way, diverting to much funding in these sequencing projects makes it very hard to sustain to bioinformatics research. </p>\n\n<p>We were unison in observation that computational genomics is not at par with it's experimental counter part at the moment. I was wondering what do you guys think about it and how can we make sure that we don't loose the \"interesting information\" coming out of the sequencing projects ?</p>", "lastedit_user": 7}}, {"pk": 140, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 2, "views": 0, "author": 30, "creation_date": "2010-03-04 14:58:13", "content": "<p>I implemented my personnal suffix-array algorithm ( = <strong>perfect match</strong> ) because <strong>bowtie</strong> was too slow for <strong>my needs</strong>. I wrote about it here : <a href=\"http://plindenbaum.blogspot.com/2010/01/elementary-school-for-bioinformatics.html\" rel=\"nofollow\">http://plindenbaum.blogspot.com/2010/01/elementary-school-for-bioinformatics.html</a>.</p>\n\n<p>It aligned all the 60 mers for each side of each SNPs (17E6 * 2 sequences) from dbSNP in about ~12H00.</p>", "html": "<p>I implemented my personnal suffix-array algorithm ( = <strong>perfect match</strong> ) because <strong>bowtie</strong> was too slow for <strong>my needs</strong>. I wrote about it here : <a href=\"http://plindenbaum.blogspot.com/2010/01/elementary-school-for-bioinformatics.html\" rel=\"nofollow\">http://plindenbaum.blogspot.com/2010/01/elementary-school-for-bioinformatics.html</a>.</p>\n\n<p>It aligned all the 60 mers for each side of each SNPs (17E6 * 2 sequences) from dbSNP in about ~12H00.</p>", "lastedit_user": 30}}, {"pk": 141, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 1, "views": 0, "author": 23, "creation_date": "2010-03-04 14:59:37", "content": "<p>A group in my institute has developed a tool called <a href=\"http://sourceforge.net/apps/mediawiki/gemlibrary/index.php?title=The_GEM_library\" rel=\"nofollow\">GEM</a> for mapping short reads and in general working with next gen sequencing data, like mapping cDNAs, find splicing isoforms, etc... I never used it directly but I have attended some talks on this and it seems convincing. </p>\n\n<p>In particular, to map short reads you should use the tool <a href=\"http://sourceforge.net/apps/mediawiki/gemlibrary/index.php?title=Gem_mapper_man_page\" rel=\"nofollow\">gem_mapper</a>.</p>", "html": "<p>A group in my institute has developed a tool called <a href=\"http://sourceforge.net/apps/mediawiki/gemlibrary/index.php?title=The_GEM_library\" rel=\"nofollow\">GEM</a> for mapping short reads and in general working with next gen sequencing data, like mapping cDNAs, find splicing isoforms, etc... I never used it directly but I have attended some talks on this and it seems convincing. </p>\n\n<p>In particular, to map short reads you should use the tool <a href=\"http://sourceforge.net/apps/mediawiki/gemlibrary/index.php?title=Gem_mapper_man_page\" rel=\"nofollow\">gem_mapper</a>.</p>", "lastedit_user": 23}}, {"pk": 142, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 1, "views": 133, "author": 30, "creation_date": "2010-03-04 15:08:48", "content": "<p>Hi all,\ngiven a set of <strong>SNPs</strong>, what would be your favorite way to find theirs related <strong>pathways</strong>/ <strong>diseases</strong> ?</p>\n\n<p>Thanks</p>", "html": "<p>Hi all,\ngiven a set of <strong>SNPs</strong>, what would be your favorite way to find theirs related <strong>pathways</strong>/ <strong>diseases</strong> ?</p>\n\n<p>Thanks</p>", "lastedit_user": 30}}, {"pk": 143, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 2, "views": 0, "author": 2, "creation_date": "2010-03-04 15:13:53", "content": "<p>For mapping reads obtained from the <a href=\"http://www3.appliedbiosystems.com/AB_Home/applicationstechnologies/SOLiD-System-Sequencing-B/index.htm\" rel=\"nofollow\">SOLiD platform</a> we use <a href=\"http://compbio.cs.toronto.edu/shrimp/\" rel=\"nofollow\">SHRiMP</a>;</p>\n\n<ul>\n<li>47 million 50bp long reads in colorspace</li>\n<li>We are aligning against the human genome, ~ 3 billion bases</li>\n<li>A typical runtime is 12 hours for every 1 million reads. We split the 47 million reads into about 25 datasets and run them in parallel. SHRiMP's memory use depends on the size of the reads that needs to align: approx 1.6 GB per 1 million reads.</li>\n<li>Overall we process the entire dataset in about a day</li>\n<li>We like using the SHRiMP program. It is simple to use, has very clear documentation and no other dependencies. Importantly it easy to teach people how to use it. On the other hand it is probably a slower method than many others.</li>\n</ul>", "html": "<p>For mapping reads obtained from the <a href=\"http://www3.appliedbiosystems.com/AB_Home/applicationstechnologies/SOLiD-System-Sequencing-B/index.htm\" rel=\"nofollow\">SOLiD platform</a> we use <a href=\"http://compbio.cs.toronto.edu/shrimp/\" rel=\"nofollow\">SHRiMP</a>;</p>\n\n<ul>\n<li>47 million 50bp long reads in colorspace</li>\n<li>We are aligning against the human genome, ~ 3 billion bases</li>\n<li>A typical runtime is 12 hours for every 1 million reads. We split the 47 million reads into about 25 datasets and run them in parallel. SHRiMP's memory use depends on the size of the reads that needs to align: approx 1.6 GB per 1 million reads.</li>\n<li>Overall we process the entire dataset in about a day</li>\n<li>We like using the SHRiMP program. It is simple to use, has very clear documentation and no other dependencies. Importantly it easy to teach people how to use it. On the other hand it is probably a slower method than many others.</li>\n</ul>", "lastedit_user": 2}}, {"pk": 144, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 2, "views": 0, "author": 38, "creation_date": "2010-03-04 15:14:13", "content": "<p>We've had a couple of Amazon education grants to try out EC2 here, and the service is very impressive. However, it would be extremely expensive to use it as a long-term replacement for our local grid service (which does have its own limitations, but is at least effectively free at the point of delivery) or clusters (in which a considerable amount of capital has already been invested). I think for the amount of grunt work we do, and particularly for the amount of data that needs to be shunted around, cloud computing is not quite there yet.</p>", "html": "<p>We've had a couple of Amazon education grants to try out EC2 here, and the service is very impressive. However, it would be extremely expensive to use it as a long-term replacement for our local grid service (which does have its own limitations, but is at least effectively free at the point of delivery) or clusters (in which a considerable amount of capital has already been invested). I think for the amount of grunt work we do, and particularly for the amount of data that needs to be shunted around, cloud computing is not quite there yet.</p>", "lastedit_user": 38}}, {"pk": 145, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 2, "views": 0, "author": 38, "creation_date": "2010-03-04 15:19:58", "content": "<p>From a UK perspective, Cambridge has to be up there. I'm pretty sure it ticks all of your points, and you can't get much better for density of bioinformaticians than the <a href=\"http://www.wellcome.ac.uk/Achievements-and-Impact/Initiatives/UK-biomedical-science/Genome-Campus-and-Sanger-Institute/WTD003482.htm\" rel=\"nofollow\">Genome Campus</a> in Hinxton.</p>", "html": "<p>From a UK perspective, Cambridge has to be up there. I'm pretty sure it ticks all of your points, and you can't get much better for density of bioinformaticians than the <a href=\"http://www.wellcome.ac.uk/Achievements-and-Impact/Initiatives/UK-biomedical-science/Genome-Campus-and-Sanger-Institute/WTD003482.htm\" rel=\"nofollow\">Genome Campus</a> in Hinxton.</p>", "lastedit_user": 38}}, {"pk": 146, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 0, "author": 64, "creation_date": "2010-03-04 15:20:35", "content": "<p>I would use DAS -- Distributed Annotated System to retrieve all genes/phenotypes associated to a specific SNP.</p>\n\n<p>DAS is a webservice for decentralised annotation that provides an esy protocol to retrieve features providing an url.</p>\n\n<p>For example, retrieve me all OMIM genes in chromosome 18 between base pair 1 and 1000000</p>\n\n<p><a href=\"http://das.sanger.ac.uk/das/ens_36_omim_genes/features?segment=18:1,1000000\" rel=\"nofollow\">http://das.sanger.ac.uk/das/ens_36_omim_genes/features?segment=18:1,1000000</a></p>\n\n<p>More on DAS <a href=\"http://www.biodas.org/wiki/Main_Page\" rel=\"nofollow\">here</a></p>", "html": "<p>I would use DAS -- Distributed Annotated System to retrieve all genes/phenotypes associated to a specific SNP.</p>\n\n<p>DAS is a webservice for decentralised annotation that provides an esy protocol to retrieve features providing an url.</p>\n\n<p>For example, retrieve me all OMIM genes in chromosome 18 between base pair 1 and 1000000</p>\n\n<p><a href=\"http://das.sanger.ac.uk/das/ens_36_omim_genes/features?segment=18:1,1000000\" rel=\"nofollow\">http://das.sanger.ac.uk/das/ens_36_omim_genes/features?segment=18:1,1000000</a></p>\n\n<p>More on DAS <a href=\"http://www.biodas.org/wiki/Main_Page\" rel=\"nofollow\">here</a></p>", "lastedit_user": 64}}, {"pk": 147, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 2, "views": 0, "author": 71, "creation_date": "2010-03-04 15:22:42", "content": "<p>Pierre, I feel your pain; Maven is not quite my friend either... Taverna is a really modular, and comes with very many dependencies... these are recursively defined and resolved using Maven... I'd love to build a plugin without it too, but never dared setting up such a system myself :)</p>", "html": "<p>Pierre, I feel your pain; Maven is not quite my friend either... Taverna is a really modular, and comes with very many dependencies... these are recursively defined and resolved using Maven... I'd love to build a plugin without it too, but never dared setting up such a system myself :)</p>", "lastedit_user": 71}}, {"pk": 148, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:02", "score": 2, "views": 0, "author": 71, "creation_date": "2010-03-04 15:25:23", "content": "<p>I can very much recommend <a href=\"http://www.myexperiment.org/\" rel=\"nofollow\">MyExperiment.org</a>. You can set up a category for a certain class of scripts, as the system has no limitation to Taverna 'scripts' anymore. MyExperiment is a true social services, provides tagging, setting up groups, etc.</p>", "html": "<p>I can very much recommend <a href=\"http://www.myexperiment.org/\" rel=\"nofollow\">MyExperiment.org</a>. You can set up a category for a certain class of scripts, as the system has no limitation to Taverna 'scripts' anymore. MyExperiment is a true social services, provides tagging, setting up groups, etc.</p>", "lastedit_user": 71}}, {"pk": 149, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 2, "views": 186, "author": 71, "creation_date": "2010-03-04 15:34:11", "content": "<p>Being a metabolomics, and drug discovery dude, I consider myself a bioinformatician (well, I also consider myself a chemist, cheminformatician, statistician, and chemometrician, but that's not relevant to my question).</p>\n\n<p>However, some peers see bioinformatics restricted to stuff to do with DNA sequences, that is genomics. So, from a historical and literature perspective, <em>what is bioinformatics</em>? Please do back up your answer and argument with citations to primary literature.</p>", "html": "<p>Being a metabolomics, and drug discovery dude, I consider myself a bioinformatician (well, I also consider myself a chemist, cheminformatician, statistician, and chemometrician, but that's not relevant to my question).</p>\n\n<p>However, some peers see bioinformatics restricted to stuff to do with DNA sequences, that is genomics. So, from a historical and literature perspective, <em>what is bioinformatics</em>? Please do back up your answer and argument with citations to primary literature.</p>", "lastedit_user": 71}}, {"pk": 150, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 2, "views": 0, "author": 2, "creation_date": "2010-03-04 15:36:35", "content": "<p>I think every advance in technology creates new opportunities for those who know computation. </p>", "html": "<p>I think every advance in technology creates new opportunities for those who know computation. </p>", "lastedit_user": 2}}, {"pk": 151, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 3, "views": 0, "author": 74, "creation_date": "2010-03-04 15:54:25", "content": "<p>I have used tophat (which also calls bowtie). It seemed pretty straightforward, I'm not sure I would call it \"fun\", but I think tophat does a good job providing useful output formats. Other people around here use Eland.</p>\n\n<p>I was aligning 60-mer reads - 15-20 million per lane? </p>\n\n<p>This was to the mouse genome, so about 2.7 gigabases.</p>\n\n<p>I don't know what computational resources were required, but I was running it on a server with 96 gigs of RAM and 16 cpus. Much more than I needed.</p>\n\n<p>I'm actually not sure how long it took per lane, I just set it up and then left it while I worked on other stuff for awhile. </p>", "html": "<p>I have used tophat (which also calls bowtie). It seemed pretty straightforward, I'm not sure I would call it \"fun\", but I think tophat does a good job providing useful output formats. Other people around here use Eland.</p>\n\n<p>I was aligning 60-mer reads - 15-20 million per lane? </p>\n\n<p>This was to the mouse genome, so about 2.7 gigabases.</p>\n\n<p>I don't know what computational resources were required, but I was running it on a server with 96 gigs of RAM and 16 cpus. Much more than I needed.</p>\n\n<p>I'm actually not sure how long it took per lane, I just set it up and then left it while I worked on other stuff for awhile. </p>", "lastedit_user": 74}}, {"pk": 152, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 2, "views": 0, "author": 74, "creation_date": "2010-03-04 16:07:04", "content": "<p>I have found useful: Perl, MySQL, Unix commands and shell scripts, R, and knowing some web stuff (HTML/php). </p>\n\n<p>It's good to be familiar with a variety of tools, so you can choose the right one for the problem (and not force a tool to do something it's not really designed for, just because you don't know how to do it any other way).</p>\n\n<p>If I was starting out, I might consider something like ruby or python instead of perl, but maybe not. There's a lot of code out there already written in perl.</p>", "html": "<p>I have found useful: Perl, MySQL, Unix commands and shell scripts, R, and knowing some web stuff (HTML/php). </p>\n\n<p>It's good to be familiar with a variety of tools, so you can choose the right one for the problem (and not force a tool to do something it's not really designed for, just because you don't know how to do it any other way).</p>\n\n<p>If I was starting out, I might consider something like ruby or python instead of perl, but maybe not. There's a lot of code out there already written in perl.</p>", "lastedit_user": 74}}, {"pk": 153, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 2, "views": 0, "author": 74, "creation_date": "2010-03-04 16:10:28", "content": "<p>I generally use a simple shell script if I have multiple commands or scripts to run. I also try to make a notes.txt file to remind myself of what I did. Doesn't take long and comes in handy. </p>\n\n<p>Things that you didn't plan to re-use get re-used all the time, in my experience...</p>", "html": "<p>I generally use a simple shell script if I have multiple commands or scripts to run. I also try to make a notes.txt file to remind myself of what I did. Doesn't take long and comes in handy. </p>\n\n<p>Things that you didn't plan to re-use get re-used all the time, in my experience...</p>", "lastedit_user": 74}}, {"pk": 154, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 3, "views": 0, "author": 74, "creation_date": "2010-03-04 16:12:31", "content": "<p>Just click \"DNA\" at the top of the screen.</p>", "html": "<p>Just click \"DNA\" at the top of the screen.</p>", "lastedit_user": 74}}, {"pk": 155, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 2, "views": 0, "author": 74, "creation_date": "2010-03-04 16:38:10", "content": "<p>If you have just a few, I just saw someone use the R package <a href=\"http://cran.r-project.org/web/packages/BioIDMapper/\" rel=\"nofollow\">BioIDMapper</a> and it seemed kind of neat. But it's slow.</p>", "html": "<p>If you have just a few, I just saw someone use the R package <a href=\"http://cran.r-project.org/web/packages/BioIDMapper/\" rel=\"nofollow\">BioIDMapper</a> and it seemed kind of neat. But it's slow.</p>", "lastedit_user": 74}}, {"pk": 156, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 0, "author": 79, "creation_date": "2010-03-04 18:59:06", "content": "<p>Stop being silly and just learn Maven.</p>\n\n<p>It's not that hard and once you get to know it you'll never want to go back to finding and downloading jars, settings up the classpath, etc..</p>", "html": "<p>Stop being silly and just learn Maven.</p>\n\n<p>It's not that hard and once you get to know it you'll never want to go back to finding and downloading jars, settings up the classpath, etc..</p>", "lastedit_user": 79}}, {"pk": 157, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 3, "views": 0, "author": 82, "creation_date": "2010-03-04 19:59:41", "content": "<p>I find that a healthy knowledge of R &amp; Bioconductor tools has been the most helpful.  In my work I also write a large amount of Python code.  Beyond those, having a strong Unix background - complete with scripts and tools such as sed &amp; awk have been very valuable.  Knowledge of HTML (don't need to be a javascript wiz, just the ability to make basic tables &amp; such) and SQL are also plusses.</p>", "html": "<p>I find that a healthy knowledge of R &amp; Bioconductor tools has been the most helpful.  In my work I also write a large amount of Python code.  Beyond those, having a strong Unix background - complete with scripts and tools such as sed &amp; awk have been very valuable.  Knowledge of HTML (don't need to be a javascript wiz, just the ability to make basic tables &amp; such) and SQL are also plusses.</p>", "lastedit_user": 82}}, {"pk": 158, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 0, "author": 82, "creation_date": "2010-03-04 20:02:58", "content": "<p>In my group, all primary computational folks (currently, a new person will be bucking this trend and going with OSX) have linux desktops that they have root access to.  Most of us have a secondary machine which varies between windows &amp; Mac OSX for various side tasks.  Beyond that we have several linux based servers that people use as well (via SSH).  The very few people who do any sort of computational work w/o a linux desktop ssh into these servers to do all of their real work.</p>", "html": "<p>In my group, all primary computational folks (currently, a new person will be bucking this trend and going with OSX) have linux desktops that they have root access to.  Most of us have a secondary machine which varies between windows &amp; Mac OSX for various side tasks.  Beyond that we have several linux based servers that people use as well (via SSH).  The very few people who do any sort of computational work w/o a linux desktop ssh into these servers to do all of their real work.</p>", "lastedit_user": 82}}, {"pk": 159, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 0, "author": 82, "creation_date": "2010-03-04 20:04:45", "content": "<p>One thing you might look at is the Broad Institute's <a href=\"https://www.broad.harvard.edu/cancer/software/genepattern/\" rel=\"nofollow\">genepattern</a> software.  It can be clunky at times but it will do most common tasks in a fairly straightforward fashion.</p>", "html": "<p>One thing you might look at is the Broad Institute's <a href=\"https://www.broad.harvard.edu/cancer/software/genepattern/\" rel=\"nofollow\">genepattern</a> software.  It can be clunky at times but it will do most common tasks in a fairly straightforward fashion.</p>", "lastedit_user": 82}}, {"pk": 160, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 2, "views": 0, "author": 82, "creation_date": "2010-03-04 20:08:07", "content": "<p>I'm the only person in my group who uses software control, other people are averse to it.  What we've ended up with is a by-convention approach within our large NAS block (which everyone mounts).  Any code which is deemed to be generally useful is essentially \"checked in\" to a particular directory tree w/ a designated format for keeping track of versioning, builds (where appropriate), etc.  Code which is specific to a project, dataset, etc is stored in a designated manner within the appropriate directory trees for that project, dataset, etc.</p>", "html": "<p>I'm the only person in my group who uses software control, other people are averse to it.  What we've ended up with is a by-convention approach within our large NAS block (which everyone mounts).  Any code which is deemed to be generally useful is essentially \"checked in\" to a particular directory tree w/ a designated format for keeping track of versioning, builds (where appropriate), etc.  Code which is specific to a project, dataset, etc is stored in a designated manner within the appropriate directory trees for that project, dataset, etc.</p>", "lastedit_user": 82}}, {"pk": 161, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 4, "views": 163, "author": 84, "creation_date": "2010-03-04 20:37:52", "content": "<p>Hi,</p>\n\n<p>I am trying to implement protein pairwise sequence alignment using \"Global Alignment\" algorithm by 'Needleman -Wunsch'. I am using VB.NET. </p>\n\n<p>I am not clear about how to include 'Blosum62 Matrix' in my source code to do the scoring or to fill the two-dimensional matrix?</p>\n\n<p>I have googled and found that most people suggested to use flat file which contains the standard 'Blosum62 Matrix'. Does it mean that I need to read from this flat file and fill my coded \"Blosum62 Martrix' ?</p>\n\n<p>Also, the other approach could be is to use some mathematical formula and include it in your programming logic to construct 'Blosum62 Matrix'. But not very sure about this option.</p>\n\n<p>Any ideas or insights are appreciated.</p>\n\n<p>Also, is there any pesudo algorithm to do the protein pairwise alignment using Global available? I tired to find the basic steps of the alogrithm online but no luck so I am planning to do the same steps as I did for the global pairwise alignment of Nucleotides</p>\n\n<p>Thanks.</p>", "html": "<p>Hi,</p>\n\n<p>I am trying to implement protein pairwise sequence alignment using \"Global Alignment\" algorithm by 'Needleman -Wunsch'. I am using VB.NET. </p>\n\n<p>I am not clear about how to include 'Blosum62 Matrix' in my source code to do the scoring or to fill the two-dimensional matrix?</p>\n\n<p>I have googled and found that most people suggested to use flat file which contains the standard 'Blosum62 Matrix'. Does it mean that I need to read from this flat file and fill my coded \"Blosum62 Martrix' ?</p>\n\n<p>Also, the other approach could be is to use some mathematical formula and include it in your programming logic to construct 'Blosum62 Matrix'. But not very sure about this option.</p>\n\n<p>Any ideas or insights are appreciated.</p>\n\n<p>Also, is there any pesudo algorithm to do the protein pairwise alignment using Global available? I tired to find the basic steps of the alogrithm online but no luck so I am planning to do the same steps as I did for the global pairwise alignment of Nucleotides</p>\n\n<p>Thanks.</p>", "lastedit_user": 84}}, {"pk": 162, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 3, "views": 76, "author": 85, "creation_date": "2010-03-04 20:49:12", "content": "<p>I want to align over 50 sequences of a polymorphic stretch of promoter DNA. The sequences consist of repeats of selections from 174 incompletely homologous subunits (14-31 subunits per sequence), the subunits are 18-29 bases in length, with a four-part internal structure.  I wish the alignment to be guided by the subunits more than by unstructured primary DNA sequence. Is there any software out there that can do this?</p>\n\n<p>Thank you.</p>", "html": "<p>I want to align over 50 sequences of a polymorphic stretch of promoter DNA. The sequences consist of repeats of selections from 174 incompletely homologous subunits (14-31 subunits per sequence), the subunits are 18-29 bases in length, with a four-part internal structure.  I wish the alignment to be guided by the subunits more than by unstructured primary DNA sequence. Is there any software out there that can do this?</p>\n\n<p>Thank you.</p>", "lastedit_user": 85}}, {"pk": 163, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 4, "views": 0, "author": 2, "creation_date": "2010-03-04 21:28:09", "content": "<p>There are no mathematical formulas for this.</p>\n\n<p>What you need is a data structure that you can use to retrieve the score for substitutions that you observe. It could be as simple as as hash map. For example in Python you could initialize it like so:</p>\n\n<pre><code>blosum = dict()\nblosum['Ala'] = dict()\nblosum['Ala']['Ala'] = 4\nblosum['Ala']['Arg'] = -1\nblosum['Ala']['Asn'] = -2 \n... etc ...\n</code></pre>\n\n<p>Of course you would not need to initialize it by hand, the information should be read from a file, that way you can load different scoring matrices. Later during alignment when you observe an Ala -> Arg substitution you could retrieve the value as:</p>\n\n<pre><code>blosum['Ala']['Arg']\n</code></pre>\n\n<p>Use the corresponding data structure from your programming language to build the same construct.</p>", "html": "<p>There are no mathematical formulas for this.</p>\n\n<p>What you need is a data structure that you can use to retrieve the score for substitutions that you observe. It could be as simple as as hash map. For example in Python you could initialize it like so:</p>\n\n<pre><code>blosum = dict()\nblosum['Ala'] = dict()\nblosum['Ala']['Ala'] = 4\nblosum['Ala']['Arg'] = -1\nblosum['Ala']['Asn'] = -2 \n... etc ...\n</code></pre>\n\n<p>Of course you would not need to initialize it by hand, the information should be read from a file, that way you can load different scoring matrices. Later during alignment when you observe an Ala -> Arg substitution you could retrieve the value as:</p>\n\n<pre><code>blosum['Ala']['Arg']\n</code></pre>\n\n<p>Use the corresponding data structure from your programming language to build the same construct.</p>", "lastedit_user": 2}}, {"pk": 164, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 3, "views": 0, "author": 26, "creation_date": "2010-03-04 22:10:31", "content": "<p>I agree that there is a bit of lag between the advancement of sequencing technologies (physico-chemical point of view) and the computational requirements to actually take advantage of these advances... </p>\n\n<p>But is it really a problem?</p>\n\n<ul>\n<li>All these technologies have strengths and weaknesses, so it's good that there are different technologies.</li>\n<li>The processing of the data will eventually come around to a mature state.</li>\n<li>The deluge of data is certainly not delved into yet, but would we even imagine how to do so if the data were not already available?</li>\n<li>We are doing science, not selling cars: we need to be at the forefront of any and all advancements and not hold on to old vintage tech just because we \"know\" how to process it (or how to make money with it, e.g. old combustion vs. electrical engines).</li>\n</ul>\n\n<p>As for your last question, about how to make sure we don't loose the \"interesting information\" coming out of the sequencing projects, well I'd say we aren't loosing anything since the raw data is well preserved in databanks! And concerning future discoveries from that data, you can't loose what you haven't found yet ;)</p>\n\n<p>To sum up: advances are good, rat-race is good, lots of poorly understood data means we've got lots of work to do! And since I like what I do, I'm happy I won't have to go into another field of research ;)</p>\n\n<p>Forward the Foundation!</p>", "html": "<p>I agree that there is a bit of lag between the advancement of sequencing technologies (physico-chemical point of view) and the computational requirements to actually take advantage of these advances... </p>\n\n<p>But is it really a problem?</p>\n\n<ul>\n<li>All these technologies have strengths and weaknesses, so it's good that there are different technologies.</li>\n<li>The processing of the data will eventually come around to a mature state.</li>\n<li>The deluge of data is certainly not delved into yet, but would we even imagine how to do so if the data were not already available?</li>\n<li>We are doing science, not selling cars: we need to be at the forefront of any and all advancements and not hold on to old vintage tech just because we \"know\" how to process it (or how to make money with it, e.g. old combustion vs. electrical engines).</li>\n</ul>\n\n<p>As for your last question, about how to make sure we don't loose the \"interesting information\" coming out of the sequencing projects, well I'd say we aren't loosing anything since the raw data is well preserved in databanks! And concerning future discoveries from that data, you can't loose what you haven't found yet ;)</p>\n\n<p>To sum up: advances are good, rat-race is good, lots of poorly understood data means we've got lots of work to do! And since I like what I do, I'm happy I won't have to go into another field of research ;)</p>\n\n<p>Forward the Foundation!</p>", "lastedit_user": 26}}, {"pk": 165, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 0, "author": 23, "creation_date": "2010-03-04 22:58:49", "content": "<p>One annecdota: when I was looking for a place to start a phd, the first of my criterias to determine where I liked or not a place was the position of the monitors.</p>\n\n<p>I think that at least 90% of the bioinformaticians I have seen working simply sit down like monkeys in front of their monitor. I just don't understand this. I think that a place where somebody takes the time to correct behaviours like these is a good place to work; therefore, for me in the best place of the world to do bioinformatics, seats are comfortable and monitors are positioned at an ergonomic height.</p>\n\n<p>Other than this, I would like to work for the 1000genomes consortium. I don't know what the conditions and the quality of work are, but there is a lot of data there and it would be good to be the among the first persons to use it.</p>", "html": "<p>One annecdota: when I was looking for a place to start a phd, the first of my criterias to determine where I liked or not a place was the position of the monitors.</p>\n\n<p>I think that at least 90% of the bioinformaticians I have seen working simply sit down like monkeys in front of their monitor. I just don't understand this. I think that a place where somebody takes the time to correct behaviours like these is a good place to work; therefore, for me in the best place of the world to do bioinformatics, seats are comfortable and monitors are positioned at an ergonomic height.</p>\n\n<p>Other than this, I would like to work for the 1000genomes consortium. I don't know what the conditions and the quality of work are, but there is a lot of data there and it would be good to be the among the first persons to use it.</p>", "lastedit_user": 23}}, {"pk": 166, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 0, "author": 23, "creation_date": "2010-03-04 23:09:59", "content": "<p>Many people consider that bioinformatics began with the work of <a href=\"http://www.answers.com/main/ntquery?s=margaret+dayhoff&amp;gwp=13\" rel=\"nofollow\">Margaret Dayhoff</a> and the Pam matrixes. She compiled the first collection of protein sequences available at the time, publishing the Atlas of Protein Sequences and Structure, and she developed the first method to give a score to the similarity of two proteins, the PAM matrix.</p>\n\n<p>For me, bioinformatics is everything that derived from Margaret Dayhoff's work. Compiling data and organizing it, developing tools to compare and handle informations, share the data with other people: if you read her biography you will find everything already there.</p>\n\n<p>About the modern bioinformatics, I like to think of it as the science of doing experiments or part of them using computers at least for some steps. I like to think that there is no difference between the work in a wet lab and that in front of computer: when you are planning a bioinformatics project, you also have to think of an hypothesis, on how to verify it and on which tests and controls you will use. This is probably something that many people didn't understand yet, as they think that bioinformatics is just 'writing programs' and the don't even know what a test is and how much time it takes to write a program. </p>", "html": "<p>Many people consider that bioinformatics began with the work of <a href=\"http://www.answers.com/main/ntquery?s=margaret+dayhoff&amp;gwp=13\" rel=\"nofollow\">Margaret Dayhoff</a> and the Pam matrixes. She compiled the first collection of protein sequences available at the time, publishing the Atlas of Protein Sequences and Structure, and she developed the first method to give a score to the similarity of two proteins, the PAM matrix.</p>\n\n<p>For me, bioinformatics is everything that derived from Margaret Dayhoff's work. Compiling data and organizing it, developing tools to compare and handle informations, share the data with other people: if you read her biography you will find everything already there.</p>\n\n<p>About the modern bioinformatics, I like to think of it as the science of doing experiments or part of them using computers at least for some steps. I like to think that there is no difference between the work in a wet lab and that in front of computer: when you are planning a bioinformatics project, you also have to think of an hypothesis, on how to verify it and on which tests and controls you will use. This is probably something that many people didn't understand yet, as they think that bioinformatics is just 'writing programs' and the don't even know what a test is and how much time it takes to write a program. </p>", "lastedit_user": 23}}, {"pk": 167, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 0, "author": 86, "creation_date": "2010-03-04 23:27:54", "content": "<p>Biomart's Martview (http://www.biomart.org/biomart/martview/) will get you from SNP IDs to many gene/protein identifiers.  In a second step, Martview will also get you from gene IDs to GO Biological Process terms, but there are probably better tools that are specifically targeted toward pathways (KEGG, Reactome, WikiPathways, etc.)</p>", "html": "<p>Biomart's Martview (http://www.biomart.org/biomart/martview/) will get you from SNP IDs to many gene/protein identifiers.  In a second step, Martview will also get you from gene IDs to GO Biological Process terms, but there are probably better tools that are specifically targeted toward pathways (KEGG, Reactome, WikiPathways, etc.)</p>", "lastedit_user": 86}}, {"pk": 168, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 4, "views": 88, "author": 87, "creation_date": "2010-03-05 04:20:04", "content": "<p>I am looking for an experienced Linux vendors to order a pre-installed CentOS/Ubuntu based webserver to host bioinformatics apps. Any suggestions or recommendations ? </p>", "html": "<p>I am looking for an experienced Linux vendors to order a pre-installed CentOS/Ubuntu based webserver to host bioinformatics apps. Any suggestions or recommendations ? </p>", "lastedit_user": 87}}, {"pk": 169, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 3, "views": 0, "author": 72, "creation_date": "2010-03-05 04:40:36", "content": "<p>I don't understand why this is a problem either.  You need to take that next step in data production and there is a lot of innovation going on there, as well as in the computational aspects of primary analysis.  The downstream innovation will happen (and it is based on some work that I am aware of).</p>\n\n<p>The best innovation comes from rat races.  The market (in this case science, which fundamentally likes choice) will decide who gets to \"win\" and the algorithmic/analytics innovation will follow.</p>", "html": "<p>I don't understand why this is a problem either.  You need to take that next step in data production and there is a lot of innovation going on there, as well as in the computational aspects of primary analysis.  The downstream innovation will happen (and it is based on some work that I am aware of).</p>\n\n<p>The best innovation comes from rat races.  The market (in this case science, which fundamentally likes choice) will decide who gets to \"win\" and the algorithmic/analytics innovation will follow.</p>", "lastedit_user": 72}}, {"pk": 170, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 3, "views": 0, "author": 87, "creation_date": "2010-03-05 04:48:15", "content": "<p>I have used STRING in three projects and I am still using it for large scale <a href=\"http://en.wikipedia.org/wiki/Protein%E2%80%93protein_interaction\" rel=\"nofollow\">protein-protein interaction</a> data analysis. I have downloaded the data and worked on PPI data of 5 eukaryotic model organisms. I strongly recommend <a href=\"http://string.embl.de/\" rel=\"nofollow\">STRING</a> if you are looking for prokaryotic PPI data or if you working on a global scale of PPI network analysis in any given organism. An exceptional advantage about STRING is that they derive the PPI information from multiple approaches, still every single single interaction is scored using a scoring scheme. This gives a higher advantage to filter specific interactions that you are interested in (for example you can get PPI from human that have a score >0.7 from experimental approach) and thus you can reduce the false positive rate. Another interesting aspect of <a href=\"http://string.embl.de/\" rel=\"nofollow\">STRING</a> is the predicted interactions that are not reported in DIP or <a href=\"http://www.hprd.org/\" rel=\"nofollow\">HPRD</a> (If you are looking for literature curated, experimental annotations I strongly recommend HPRD ), this is something really exciting. You may get an interesting connections (not yet proven, though) that can lead you to new biological insights. The STRING team also maintain an interesting <a href=\"http://string-stitch.blogspot.com/\" rel=\"nofollow\">blog</a>, with the new releases, code-snippets, API detailes etc. </p>", "html": "<p>I have used STRING in three projects and I am still using it for large scale <a href=\"http://en.wikipedia.org/wiki/Protein%E2%80%93protein_interaction\" rel=\"nofollow\">protein-protein interaction</a> data analysis. I have downloaded the data and worked on PPI data of 5 eukaryotic model organisms. I strongly recommend <a href=\"http://string.embl.de/\" rel=\"nofollow\">STRING</a> if you are looking for prokaryotic PPI data or if you working on a global scale of PPI network analysis in any given organism. An exceptional advantage about STRING is that they derive the PPI information from multiple approaches, still every single single interaction is scored using a scoring scheme. This gives a higher advantage to filter specific interactions that you are interested in (for example you can get PPI from human that have a score >0.7 from experimental approach) and thus you can reduce the false positive rate. Another interesting aspect of <a href=\"http://string.embl.de/\" rel=\"nofollow\">STRING</a> is the predicted interactions that are not reported in DIP or <a href=\"http://www.hprd.org/\" rel=\"nofollow\">HPRD</a> (If you are looking for literature curated, experimental annotations I strongly recommend HPRD ), this is something really exciting. You may get an interesting connections (not yet proven, though) that can lead you to new biological insights. The STRING team also maintain an interesting <a href=\"http://string-stitch.blogspot.com/\" rel=\"nofollow\">blog</a>, with the new releases, code-snippets, API detailes etc. </p>", "lastedit_user": 87}}, {"pk": 171, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 1, "views": 0, "author": 87, "creation_date": "2010-03-05 04:54:16", "content": "<p>I am currently using <a href=\"http://bonsai.ims.u-tokyo.ac.jp/~mdehoon/software/cluster/software.htm\" rel=\"nofollow\">Cluster 3.0</a> for clustering and <a href=\"http://sourceforge.net/projects/jtreeview/\" rel=\"nofollow\">TreeView</a>. </p>", "html": "<p>I am currently using <a href=\"http://bonsai.ims.u-tokyo.ac.jp/~mdehoon/software/cluster/software.htm\" rel=\"nofollow\">Cluster 3.0</a> for clustering and <a href=\"http://sourceforge.net/projects/jtreeview/\" rel=\"nofollow\">TreeView</a>. </p>", "lastedit_user": 87}}, {"pk": 172, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 3, "views": 0, "author": 71, "creation_date": "2010-03-05 06:53:16", "content": "<p>Have you looked into the <a href=\"http://www.ubuntu.com/cloud\" rel=\"nofollow\">Ubuntu Amazon EC2 server</a> thing?</p>", "html": "<p>Have you looked into the <a href=\"http://www.ubuntu.com/cloud\" rel=\"nofollow\">Ubuntu Amazon EC2 server</a> thing?</p>", "lastedit_user": 71}}, {"pk": 173, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 55, "author": 7, "creation_date": "2010-03-05 09:56:57", "content": "<p>How can we characterize a residue in a protein as a buried, exposed or intermediate based on it's accessible surface area(ASA) ? </p>\n\n<p>I came across a paper in which they are taking the ratio between the residue's ASA at a particular position to the maximum ASA observed for that residue in the whole protein.Further they apply a cut off on these ratios to characterize a residue as buried , exposed or intermediate. I am not sure about the basis of these cut offs.</p>\n\n<p>can any one validate or provide a better approach for doing this ?  </p>", "html": "<p>How can we characterize a residue in a protein as a buried, exposed or intermediate based on it's accessible surface area(ASA) ? </p>\n\n<p>I came across a paper in which they are taking the ratio between the residue's ASA at a particular position to the maximum ASA observed for that residue in the whole protein.Further they apply a cut off on these ratios to characterize a residue as buried , exposed or intermediate. I am not sure about the basis of these cut offs.</p>\n\n<p>can any one validate or provide a better approach for doing this ?  </p>", "lastedit_user": 7}}, {"pk": 174, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 5, "views": 0, "author": 68, "creation_date": "2010-03-05 10:33:25", "content": "<p><a href=\"http://www.system76.com/\" rel=\"nofollow\">System 76</a> is a vendor that <em>only</em> sells \"laptops, desktops, and servers with Ubuntu pre-installed, and is committed to the ideals of open source software.\" You can <a href=\"http://www.system76.com/index.php?cPath=29\" rel=\"nofollow\">compare the servers they sell</a>. They are also a <a href=\"http://www.ubuntu.com/partners/solutionprovider\" rel=\"nofollow\">Ubuntu solution provider</a> so I am sure they can make you a system that fits your needs to a tee.</p>", "html": "<p><a href=\"http://www.system76.com/\" rel=\"nofollow\">System 76</a> is a vendor that <em>only</em> sells \"laptops, desktops, and servers with Ubuntu pre-installed, and is committed to the ideals of open source software.\" You can <a href=\"http://www.system76.com/index.php?cPath=29\" rel=\"nofollow\">compare the servers they sell</a>. They are also a <a href=\"http://www.ubuntu.com/partners/solutionprovider\" rel=\"nofollow\">Ubuntu solution provider</a> so I am sure they can make you a system that fits your needs to a tee.</p>", "lastedit_user": 68}}, {"pk": 175, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 7, "views": 0, "author": 68, "creation_date": "2010-03-05 12:31:43", "content": "<p>Bioinformatics is the field of science in which biology and computer science/information technology merge into a single discipline. The ultimate goal of the field is to enable the discovery of new biological insights as well as to create a global perspective from which unifying principles in biology can be discerned. </p>\n\n<p>Listed below are some of the major events in bioinformatics over the last several decades. Most of the events in the list occurred long before the term, \"bioinformatics\", was coined.</p>\n\n<p>I've tagged each entry with either:</p>\n\n<ul>\n<li><em><strong>(BIO)</em></strong> if it was an event which was predominantly important in the field of biology.</li>\n<li><em><strong>(IT)</em></strong> if it was an event which was predominantly important in the field of computer science/information technology</li>\n<li><em><strong>(BIOINFO)</em></strong> if it was an event where biology and computer science/information technology truly merged and we can really speak from bioinformatics.</li>\n</ul>\n\n<p>As you will notice, it becomes increasingly difficult/subjective to catalogue events with exclusively one tag, so the main point to take away is that in the course of bioinformatics history there has been a constant exchange of ideas between biology, computer science/information technology and bioinformatics.</p>\n\n<ul>\n<li><p><strong>1665</strong>  <strong><em>(BIO)</em></strong> Robert Hooke published Micrographia, described the cellular structure of cork. He also described microscopic examinations of fossilized plants and animals, comparing their microscopic structure to that of the living organisms they resembled. He argued for an organic origin of fossils, and suggested a plausible mechanism for their formation.</p></li>\n<li><p><strong>1683</strong> <em><strong>(BIO)</em></strong> Antoni van Leeuwenhoek discovered bacteria.</p></li>\n<li><p><strong>1686</strong> <em><strong>(BIO)</em></strong> John Ray, John Ray's in his book \"Historia Plantarum\" catalogued and described 18,600 kinds of plants. His book gave the first definition of species based upon common descent.</p></li>\n<li><p><strong>1843</strong> <em><strong>(BIO)</em></strong> Richard Owen elaborated the distinction of homology and analogy.</p></li>\n<li><p><strong>1864</strong> <em><strong>(BIO)</em></strong> Ernst Haeckel (H\u00e4ckel) outlined the essential elements of modern zoological classification.</p></li>\n<li><p><strong>1865</strong> <em><strong>(BIO)</em></strong> Gregory Mendel (1823-1884), Austria,  established the theory of genetic inheritance.</p></li>\n<li><p><strong>1902</strong> <em><strong>(BIO)</em></strong> The chromosome theory of heredity is proposed by Sutton and Boveri, working independently.</p></li>\n<li><p><strong>1905</strong> <em><strong>(BIO)</em></strong> The word \"genetics\" is coined by William Bateson.</p></li>\n<li><p><strong>1913</strong> <em><strong>(BIO)</em></strong> First ever linkage map created by Columbia undergraduate Alfred Sturtevant (working with T.H. Morgan).</p></li>\n<li><p><strong>1930</strong> <em><strong>(BIO)</em></strong> Tiselius, Uppsala University, Sweden, A new technique, electrophoresis, is introduced by Tiselius for separating proteins in solution. \"The moving-boundary method of studying the electrophoresis of proteins\" (published in Nova Acta Regiae Societatis Scientiarum Upsaliensis, Ser. IV, Vol. 7, No. 4)</p></li>\n<li><p><strong>1946</strong> <em><strong>(BIO)</em></strong> Genetic material can be transferred laterally between bacterial cells, as shown by Lederberg and Tatum.</p></li>\n<li><p><strong>1951</strong> <em><strong>(BIO)</em></strong> Pauling and Corey propose the structure for the alpha-helix and beta-sheet (Proc. Natl. Acad. Sci. USA, 27: 205-211, 1951; Proc. Natl. Acad. Sci. USA, 37: 729-740, 1951).</p></li>\n<li><p><strong>1952</strong> <em><strong>(BIO)</em></strong> Alfred Day Hershey and Martha Chase proved that the DNA alone carries genetic information. This was proved on the basis of their bacteriophage research.</p></li>\n<li><p><strong>1953</strong> <em><strong>(BIO)</em></strong> Watson and Crick propose the double helix model for DNA based on x-ray data obtained by Franklin and Wilkins (Nature, 171: 737-738, 1953).</p></li>\n<li><p><strong>1954</strong> <em><strong>(BIO)</em></strong> Perutz's group develop heavy atom methods to solve the phase problem in protein crystallography.</p></li>\n<li><p><strong>1955</strong> <em><strong>(BIO)</em></strong> The sequence of the first protein to be analyzed, bovine insulin, is announced by F. Sanger.</p></li>\n<li><p><strong>1958</strong> <em><strong>(IT)</em></strong> The Advanced Research Projects Agency (ARPA) is formed in the US</p></li>\n<li><p><strong>1958</strong> <em><strong>(IT)</em></strong> The first integrated circuit is constructed by Jack Kilby at Texas Instruments.</p></li>\n<li><p><strong>1961</strong> <em><strong>(BIO)</em></strong> Sidney Brenner, Fran\u00e7ois Jacob, Matthew Meselson, identify messenger RNA</p></li>\n<li><p><strong>1962</strong> <em><strong>(BIO)</em></strong> Pauling's theory of molecular evolution</p></li>\n<li><p><strong>1965</strong> <em><strong>(BIO)</em></strong> Margaret Dayhoff's Atlas of Protein Sequences</p></li>\n<li><p><strong>1968</strong> <em><strong>(IT)</em></strong> Packet-switching network protocols are presented to ARPA</p></li>\n<li><p><strong>1969</strong> <em><strong>(IT)</em></strong> The ARPANET is created by linking computers at Stanford, UCSB, The University of Utah and UCLA.</p></li>\n<li><p><strong>1970</strong> <em><strong>(BIOINFO)</em></strong> The details of the Needleman-Wunsch algorithm for sequence comparison are published.</p></li>\n<li><p><strong>1971</strong> <em><strong>(IT)</em></strong> Ray Tomlinson (BBN) invents the email program.</p></li>\n<li><p><strong>1972</strong> <em><strong>(BIO)</em></strong> The first recombinant DNA molecule is created by Paul Berg and his group.</p></li>\n<li><p><strong>1973</strong> <em><strong>(IT)</em></strong> Robert Metcalfe receives his Ph.D. from Harvard University. His thesis describes Ethernet.</p></li>\n<li><p><strong>1973</strong> <em><strong>(BIOINFO)</em></strong> The Brookhaven Protein Data Bank is announced (Acta. Cryst. B, 1973, 29: 1746).</p></li>\n<li><p><strong>1974</strong> <em><strong>(IT)</em></strong> Charles Goldfarb invents SGML (Standardized General Markup Language).</p></li>\n<li><p><strong>1974</strong> <em><strong>(IT)</em></strong> Vint Cerf and Robert Kahn develop the concept of connecting networks of computers into an \"internet\" and develop the Transmission Control Protocol (TCP).</p></li>\n<li><p><strong>1975</strong> <em><strong>(BIO)</em></strong> E. M. Southern published the experimental details for the Southern Blot technique of specific sequences of DNA (J. Mol. Biol., 98: 503-517, 1975).</p></li>\n<li><p><strong>1975</strong> <em><strong>(IT)</em></strong> Microsoft Corporation is founded by Bill Gates and Paul Allen.</p></li>\n<li><p><strong>1975</strong> <em><strong>(BIO)</em></strong> Two-dimensional electrophoresis, where separation of proteins on SDS polyacrylamide gel is combined with separation according to isoelectric points, is announced by P. H. O'Farrell (J. Biol. Chem., 250: 4007-4021, 1975).</p></li>\n<li><p><strong>1976</strong> <em><strong>(IT)</em></strong> The Unix-To-Unix Copy Protocol (UUCP) is developed at Bell Labs.</p></li>\n<li><p><strong>1977</strong> <em><strong>(BIOINFO)</em></strong> Allan Maxam and Walter Gilbert (Harvard) and Frederick Sanger (U.K. Medical Research Council), report methods for sequencing DNA.</p></li>\n<li><p><strong>1977</strong> <em><strong>(BIOINFO)</em></strong> DNA sequencing and software to analyze it (Staden)</p></li>\n<li><p><strong>1977</strong> <em><strong>(BIOINFO)</em></strong> The full description of the Brookhaven PDB (http://www.pdb.bnl.gov) is published (Bernstein, F.C.; Koetzle, T.F.; Williams, G.J.B.; Meyer, E.F.; Brice, M.D.; Rodgers, J.R.; Kennard, O.; Shimanouchi, T.; Tasumi, M.J.; J. Mol. Biol., 1977, 112:, 535).</p></li>\n<li><p><strong>1978</strong> <em><strong>(IT)</em></strong> The first Usenet connection is established between Duke and the University of North Carolina at Chapel Hill by Tom Truscott, Jim Ellis and Steve Bellovin.</p></li>\n<li><p><strong>1980</strong> <em><strong>(BIOINFO)</em></strong> IntelliGenetics, Inc. founded in California. Their primary product is the IntelliGenetics Suite of programs for DNA and protein sequence analysis.</p></li>\n<li><p><strong>1980</strong> <em><strong>(BIO)</em></strong> The first complete gene sequence for an organism (FX174) is published. The gene consists of 5,386 base pairs which code nine proteins.</p></li>\n<li><p><strong>1980</strong> <em><strong>(BIO)</em></strong> W\u00fcthrich et. al. publish paper detailing the use of multi-dimensional NMR for protein structure determination (Kumar, A.; Ernst, R.R.; W\u00fcthrich, K.; Biochem. Biophys. Res. Comm., 1980, 95:, 1).</p></li>\n<li><p><strong>1981</strong> <em><strong>(IT)</em></strong> IBM introduces its Personal Computer to the market.</p></li>\n<li><p><strong>1981</strong> <em><strong>(BIOINFO)</em></strong> The Smith-Waterman algorithm for sequence alignment is published.</p></li>\n<li><p><strong>1981</strong> <em><strong>(BIO)</em></strong> The concept of a sequence motif (Doolittle)</p></li>\n<li><p><strong>1982</strong> <em><strong>(BIOINFO)</em></strong> GenBank Release 3 made public</p></li>\n<li><p><strong>1982</strong> <em><strong>(BIO)</em></strong> Genetics Computer Group (GCG) created as a part of the University of Wisconsin of Wisconsin Biotechnology Center. The company's primary product is The Wisconsin Suite of molecular biology tools.</p></li>\n<li><p><strong>1982</strong> <em><strong>(BIO)</em></strong> Phage lambda genome sequenced</p></li>\n<li><p><strong>1983</strong> <em><strong>(IT)</em></strong> Name servers are developed at the University of Wisconsin.</p></li>\n<li><p><strong>1983</strong> <em><strong>(BIOINFO)</em></strong> Sequence database searching algorithm (Wilbur-Lipman)</p></li>\n<li><p><strong>1983</strong> <em><strong>(IT)</em></strong> The Compact Disk (CD) is launched.</p></li>\n<li><p><strong>1984</strong> <em><strong>(IT)</em></strong> Jon Postel's Domain Name System (DNS) is placed on-line.</p></li>\n<li><p><strong>1984</strong> <em><strong>(IT)</em></strong> The Macintosh is announced by Apple Computer.</p></li>\n<li><p><strong>1985</strong> <em><strong>(BIOINFO)</em></strong> FASTP/FASTN: fast sequence similarity searching algorithm is published.</p></li>\n<li><p><strong>1985</strong> <em><strong>(BIO)</em></strong> The PCR reaction is described by Kary Mullis and co-workers.</p></li>\n<li><p><strong>1986</strong> <em><strong>(IT)</em></strong> NSFnet debuts.</p></li>\n<li><p><strong>1986</strong> <em><strong>(BIOINFO)</em></strong> The SWISS-PROT database is created by the Department of Medical Biochemistry of the University of Geneva and the European Molecular Biology Laboratory (EMBL).</p></li>\n<li><p><strong>1986</strong> <em><strong>(BIO)</em></strong> The term \"Genomics\" appeared for the first time to describe the scientific discipline of mapping, sequencing, and analyzing genes. The term was coined by Thomas Roderick as a name for the new journal.</p></li>\n<li><p><strong>1987</strong> <em><strong>(BIO)</em></strong> The physical map of e. coli is published (Y. Kohara, et. al., Cell 51: 319-337).</p></li>\n<li><p><strong>1987</strong> <em><strong>(BIO)</em></strong> The use of yeast artifical chromosomes (YAC) is described (David T. Burke, et. al., Science, 236: 806-812).</p></li>\n<li><p><strong>1988</strong> <em><strong>(IT)</em></strong> A new program, an Internet computer virus designed by a student, infects 6,000 military computers in the US.</p></li>\n<li><p><strong>1988</strong> <em><strong>(BIOINFO)</em></strong> Des Higgins and Paul Sharpe announce the development of CLUSTAL (Higgins, D.G.; Sharp, P.M. Fast and sensitive multiple sequence alignments on a microcomputer. Comput. Appl. Biosci. 1989, 5, 151-153; Higgins, D.G.; Sharp, P.M. CLUSTAL: a package for performing multiple sequence alignment on a microcomputer. Gene 1988, 73, 237-244.)</p></li>\n<li><p><strong>1988</strong> <em><strong>(IT)</em></strong> EMBnet network for database distribution</p></li>\n<li><p><strong>1988</strong> <em><strong>(BIO)</em></strong> National Center for Biotechnology Information (NCBI) created at NIH/NLM</p></li>\n<li><p><strong>1988</strong> <em><strong>(IT)</em></strong> Perl (Practical Extraction Report Language) is released by Larry Wall.</p></li>\n<li><p><strong>1988</strong> <em><strong>(BIOINFO)</em></strong> The FASTA algorithm for sequence comparison is published by Pearson and Lupman.</p></li>\n<li><p><strong>1988</strong> <em><strong>(BIO)</em></strong> The Human Genome Initiative is started (Commission on Life Sciences, National Research Council. Mapping and Sequencing the Human Genome, National Academy Press: Washington, D.C.), 1988.</p></li>\n<li><p><strong>1988</strong> <em><strong>(BIO)</em></strong> The National Center for Biotechnology Information (NCBI) is established at the National Cancer Institute.</p></li>\n<li><p><strong>1990</strong> <em><strong>(BIOINFO)</em></strong> BLAST: fast sequence similarity searching (Altschul, et. al.) is implemented.</p></li>\n<li><p><strong>1990</strong> <em><strong>(IT)</em></strong> The HTTP 1.0 specification is published. Tim Berners-Lee publishes the first HTML document.</p></li>\n<li><p><strong>1991</strong> <em><strong>(BIO)</em></strong> EST: expressed sequence tag sequencing</p></li>\n<li><p><strong>1991</strong> <em><strong>(IT)</em></strong> Linus Torvalds announces a Unix-Like operating system which later becomes Linux.</p></li>\n<li><p><strong>1991</strong> <em><strong>(BIO)</em></strong> Myriad Genetics, Inc. is founded in Utah. The company's goal is to lead in the discovery of major common human disease genes and their related pathways. The Company has discovered and sequenced, with its academic collaborators, the following major genes: BRCA1, BRCA2, CHD1, MMAC1, MMSC1, MMSC2, CtIP, p16, p19, and MTS2.</p></li>\n<li><p><strong>1991</strong> <em><strong>(BIO)</em></strong> The creation and use of expressed sequence tags (ESTs) is described (J. Craig Venter, et. al., Science, 252: 1651-1656).</p></li>\n<li><p><strong>1991</strong> <em><strong>(IT)</em></strong> The research institute in Geneva (CERN) announces the creation of the protocols which make-up the World Wide Web.</p></li>\n<li><p><strong>1992</strong> <em><strong>(BIO)</em></strong> Mel Simon and coworkers announce the use of BACs for cloning.</p></li>\n<li><p><strong>1992</strong> <em><strong>(BIO)</em></strong> The Institute for Genomic Research (TIGR) is established by Craig Venter.</p></li>\n<li><p><strong>1993</strong> <em><strong>(BIO)</em></strong> Affymetrix begins independent operations in Santa Clara, California</p></li>\n<li><p><strong>1993</strong> <em><strong>(BIO)</em></strong> Sanger Centre, Hinxton, UK</p></li>\n<li><p><strong>1994</strong> <em><strong>(BIOINFO)</em></strong> EMBL European Bioinformatics Institute, Hinxton, UK</p></li>\n<li><p><strong>1994</strong> <em><strong>(IT)</em></strong> Netscape Comminications Corporation founded and releases Navigator, the commercial version of NCSA's Mozilla.</p></li>\n<li><p><strong>1994</strong> <em><strong>(BIOINFO)</em></strong> The PRINTS database of protein motifs is published by Attwood and Beck.</p></li>\n<li><p><strong>1995</strong> <em><strong>(BIO)</em></strong> First bacterial genomes completely sequenced</p></li>\n<li><p><strong>1995</strong> <em><strong>(IT)</em></strong> Microsoft releases version 1.0 of Internet Explorer.</p></li>\n<li><p><strong>1995</strong> <em><strong>(IT)</em></strong> Sun releases version 1.0 of Java. Sun and Netscape release version 1.0 of JavaScript</p></li>\n<li><p><strong>1995</strong> <em><strong>(BIO)</em></strong> The Haemophilus influenzea genome (1.8 Mb) is sequenced.</p></li>\n<li><p><strong>1995</strong> <em><strong>(BIO)</em></strong> The Mycoplasma genitalium genome is sequenced.</p></li>\n<li><p><strong>1995</strong> <em><strong>(IT)</em></strong> Version 1.0 of Apache is released.</p></li>\n<li><p><strong>1996</strong> <em><strong>(BIO)</em></strong> Affymetrix produces the first commercial DNA chips.</p></li>\n<li><p><strong>1996</strong> <em><strong>(BIO)</em></strong> Oxford Molecular Group acquires the MacVector product from Eastman Kodak.</p></li>\n<li><p><strong>1996</strong> <em><strong>(BIOINFO)</em></strong> Structural Bioinformatics, Inc. founded in San Diego, CA.</p></li>\n<li><p><strong>1996</strong> <em><strong>(BIO)</em></strong> The Prosite database is reported by Bairoch, et.al.</p></li>\n<li><p><strong>1996</strong> <em><strong>(BIO)</em></strong> The genome for Saccharomyces cerevisiae (baker's yeast, 12.1 Mb) is sequenced.</p></li>\n<li><p><strong>1996</strong> <em><strong>(IT)</em></strong> The working draft for XML is released by W3C.</p></li>\n<li><p><strong>1996</strong> <em><strong>(BIO)</em></strong> Yeast genome completely sequenced</p></li>\n<li><p><strong>1997</strong> <em><strong>(BIOINFO)</em></strong> LION bioscience AG founded as an integrated genomics company with strong focus on bioinformatics. The company is built from IP out of the European Molecular Biology Laboratory (EMBL), the European Bioinformatics Institute (EBI), the German Cancer Research Center (DKFZ), and the University of Heidelberg.</p></li>\n<li><p><strong>1997</strong> <em><strong>(BIOINFO)</em></strong> PSI-BLAST</p></li>\n<li><p><strong>1997</strong> <em><strong>(BIO)</em></strong> The genome for E. coli (4.7 Mbp) is published.</p></li>\n<li><p><strong>1998</strong> <em><strong>(BIO)</em></strong> Craig Venter forms Celera in Rockville, Maryland.</p></li>\n<li><p><strong>1998</strong> <em><strong>(BIOINFO)</em></strong> Inpharmatica, a new Genomics and Bioinformatics company, is established by University College London, the Wolfson Institute for Biomedical Research, five leading scientists from major British academic centers and Unibio Limited.</p></li>\n<li><p><strong>1998</strong> <em><strong>(BIOINFO)</em></strong> The Swiss Institute of Bioinformatics is established as a non-profit foundation.</p></li>\n<li><p><strong>1998</strong> <em><strong>(BIO)</em></strong> The genomes for Caenorhabditis elegans and baker's yeast are published.</p></li>\n<li><p><strong>1998</strong> <em><strong>(BIO)</em></strong> Worm (multicellular) genome completely sequenced</p></li>\n<li><p><strong>1998</strong> <em><strong>(BIO)</em></strong> deCode genetics publishes a paper that described the location of the FET1 gene, which is responsible for familial essential tremor, on chromosome 13 (Nature Genetics).</p></li>\n<li><p><strong>1999</strong> <em><strong>(BIO)</em></strong> Fly genome completely sequenced</p></li>\n<li><p><strong>1999</strong> <em><strong>(BIO)</em></strong> deCode genetics maps the gene linked to pre-eclampsia as a locus on chromosome 2p13.</p></li>\n<li><p><strong>2000</strong> <em><strong>(BIO)</em></strong> Jeong H, Tombor B, Albert R, Oltvai ZN, Barabasi AL. The large-scale organization of metabolic networks. Nature 2000 Oct 5;407(6804):651-4, PubMed</p></li>\n<li><p><strong>2000</strong> <em><strong>(BIO)</em></strong> The A. thaliana genome (100 Mb) is secquenced.</p></li>\n<li><p><strong>2000</strong> <em><strong>(BIO)</em></strong> The D. melanogaster genome (180Mb) is secquenced.</p></li>\n<li><p><strong>2000</strong> <em><strong>(BIO)</em></strong> The genome for Pseudomonas aeruginosa (6.3 Mbp) is published.</p></li>\n<li><p><strong>2001</strong> <em><strong>(BIO)</em></strong> The human genome (3,000 Mbp) is published.</p></li>\n<li><p><strong>2002</strong> <em><strong>(BIO)</em></strong> An international sequencing consortium published the full genome sequence of the common house mouse (2.5 Gb). Whitehead Institute researcher Kerstin Lindblad-Toh is the lead author on the paper; her institution lead the project and contributed about half of the sequence. Washington University School of Medicine delivered about 30 percent of the sequence, and created the mouse BAC-based physical map. The Wellcome Trust Sanger Institute in the UK was the third major partner. Other institutes in the International Mouse Genome Sequencing Consortium included the University of California at Santa Cruz, the Institute for Systems Biology, and the University of Geneva.</p></li>\n<li><p><strong>2004</strong> <em><strong>(BIO)</em></strong> The draft genome sequence of the brown Norway laboratory rat, Rattus norvegicus, was completed by the Rat Genome Sequencing project Consortium. The paper appears in the April 1 edition of Nature.</p></li>\n</ul>\n\n<p>Compiled from different sources, including: </p>\n\n<ul>\n<li>A <a href=\"http://www.netsci.org/Science/Bioinform/feature06.html\" rel=\"nofollow\">Short History of Bioinformatics</a>, by Allen B. Richon</li>\n<li><a href=\"http://www.roseindia.net/bioinformatics/history_of_bioinformatics.shtml\" rel=\"nofollow\">History of Bioinformatics</a></li>\n<li><a href=\"http://www.ncbi.nlm.nih.gov/Education/BLASTinfo/milestones.html\" rel=\"nofollow\">Bioinformatics Milestones</a></li>\n<li><a href=\"http://www.cbclickbank.com/bioinformatics/history.htm\" rel=\"nofollow\">History, Origin &amp; Bioinformatics Events</a> </li>\n</ul>", "html": "<p>Bioinformatics is the field of science in which biology and computer science/information technology merge into a single discipline. The ultimate goal of the field is to enable the discovery of new biological insights as well as to create a global perspective from which unifying principles in biology can be discerned. </p>\n\n<p>Listed below are some of the major events in bioinformatics over the last several decades. Most of the events in the list occurred long before the term, \"bioinformatics\", was coined.</p>\n\n<p>I've tagged each entry with either:</p>\n\n<ul>\n<li><em><strong>(BIO)</em></strong> if it was an event which was predominantly important in the field of biology.</li>\n<li><em><strong>(IT)</em></strong> if it was an event which was predominantly important in the field of computer science/information technology</li>\n<li><em><strong>(BIOINFO)</em></strong> if it was an event where biology and computer science/information technology truly merged and we can really speak from bioinformatics.</li>\n</ul>\n\n<p>As you will notice, it becomes increasingly difficult/subjective to catalogue events with exclusively one tag, so the main point to take away is that in the course of bioinformatics history there has been a constant exchange of ideas between biology, computer science/information technology and bioinformatics.</p>\n\n<ul>\n<li><p><strong>1665</strong>  <strong><em>(BIO)</em></strong> Robert Hooke published Micrographia, described the cellular structure of cork. He also described microscopic examinations of fossilized plants and animals, comparing their microscopic structure to that of the living organisms they resembled. He argued for an organic origin of fossils, and suggested a plausible mechanism for their formation.</p></li>\n<li><p><strong>1683</strong> <em><strong>(BIO)</em></strong> Antoni van Leeuwenhoek discovered bacteria.</p></li>\n<li><p><strong>1686</strong> <em><strong>(BIO)</em></strong> John Ray, John Ray's in his book \"Historia Plantarum\" catalogued and described 18,600 kinds of plants. His book gave the first definition of species based upon common descent.</p></li>\n<li><p><strong>1843</strong> <em><strong>(BIO)</em></strong> Richard Owen elaborated the distinction of homology and analogy.</p></li>\n<li><p><strong>1864</strong> <em><strong>(BIO)</em></strong> Ernst Haeckel (H\u00e4ckel) outlined the essential elements of modern zoological classification.</p></li>\n<li><p><strong>1865</strong> <em><strong>(BIO)</em></strong> Gregory Mendel (1823-1884), Austria,  established the theory of genetic inheritance.</p></li>\n<li><p><strong>1902</strong> <em><strong>(BIO)</em></strong> The chromosome theory of heredity is proposed by Sutton and Boveri, working independently.</p></li>\n<li><p><strong>1905</strong> <em><strong>(BIO)</em></strong> The word \"genetics\" is coined by William Bateson.</p></li>\n<li><p><strong>1913</strong> <em><strong>(BIO)</em></strong> First ever linkage map created by Columbia undergraduate Alfred Sturtevant (working with T.H. Morgan).</p></li>\n<li><p><strong>1930</strong> <em><strong>(BIO)</em></strong> Tiselius, Uppsala University, Sweden, A new technique, electrophoresis, is introduced by Tiselius for separating proteins in solution. \"The moving-boundary method of studying the electrophoresis of proteins\" (published in Nova Acta Regiae Societatis Scientiarum Upsaliensis, Ser. IV, Vol. 7, No. 4)</p></li>\n<li><p><strong>1946</strong> <em><strong>(BIO)</em></strong> Genetic material can be transferred laterally between bacterial cells, as shown by Lederberg and Tatum.</p></li>\n<li><p><strong>1951</strong> <em><strong>(BIO)</em></strong> Pauling and Corey propose the structure for the alpha-helix and beta-sheet (Proc. Natl. Acad. Sci. USA, 27: 205-211, 1951; Proc. Natl. Acad. Sci. USA, 37: 729-740, 1951).</p></li>\n<li><p><strong>1952</strong> <em><strong>(BIO)</em></strong> Alfred Day Hershey and Martha Chase proved that the DNA alone carries genetic information. This was proved on the basis of their bacteriophage research.</p></li>\n<li><p><strong>1953</strong> <em><strong>(BIO)</em></strong> Watson and Crick propose the double helix model for DNA based on x-ray data obtained by Franklin and Wilkins (Nature, 171: 737-738, 1953).</p></li>\n<li><p><strong>1954</strong> <em><strong>(BIO)</em></strong> Perutz's group develop heavy atom methods to solve the phase problem in protein crystallography.</p></li>\n<li><p><strong>1955</strong> <em><strong>(BIO)</em></strong> The sequence of the first protein to be analyzed, bovine insulin, is announced by F. Sanger.</p></li>\n<li><p><strong>1958</strong> <em><strong>(IT)</em></strong> The Advanced Research Projects Agency (ARPA) is formed in the US</p></li>\n<li><p><strong>1958</strong> <em><strong>(IT)</em></strong> The first integrated circuit is constructed by Jack Kilby at Texas Instruments.</p></li>\n<li><p><strong>1961</strong> <em><strong>(BIO)</em></strong> Sidney Brenner, Fran\u00e7ois Jacob, Matthew Meselson, identify messenger RNA</p></li>\n<li><p><strong>1962</strong> <em><strong>(BIO)</em></strong> Pauling's theory of molecular evolution</p></li>\n<li><p><strong>1965</strong> <em><strong>(BIO)</em></strong> Margaret Dayhoff's Atlas of Protein Sequences</p></li>\n<li><p><strong>1968</strong> <em><strong>(IT)</em></strong> Packet-switching network protocols are presented to ARPA</p></li>\n<li><p><strong>1969</strong> <em><strong>(IT)</em></strong> The ARPANET is created by linking computers at Stanford, UCSB, The University of Utah and UCLA.</p></li>\n<li><p><strong>1970</strong> <em><strong>(BIOINFO)</em></strong> The details of the Needleman-Wunsch algorithm for sequence comparison are published.</p></li>\n<li><p><strong>1971</strong> <em><strong>(IT)</em></strong> Ray Tomlinson (BBN) invents the email program.</p></li>\n<li><p><strong>1972</strong> <em><strong>(BIO)</em></strong> The first recombinant DNA molecule is created by Paul Berg and his group.</p></li>\n<li><p><strong>1973</strong> <em><strong>(IT)</em></strong> Robert Metcalfe receives his Ph.D. from Harvard University. His thesis describes Ethernet.</p></li>\n<li><p><strong>1973</strong> <em><strong>(BIOINFO)</em></strong> The Brookhaven Protein Data Bank is announced (Acta. Cryst. B, 1973, 29: 1746).</p></li>\n<li><p><strong>1974</strong> <em><strong>(IT)</em></strong> Charles Goldfarb invents SGML (Standardized General Markup Language).</p></li>\n<li><p><strong>1974</strong> <em><strong>(IT)</em></strong> Vint Cerf and Robert Kahn develop the concept of connecting networks of computers into an \"internet\" and develop the Transmission Control Protocol (TCP).</p></li>\n<li><p><strong>1975</strong> <em><strong>(BIO)</em></strong> E. M. Southern published the experimental details for the Southern Blot technique of specific sequences of DNA (J. Mol. Biol., 98: 503-517, 1975).</p></li>\n<li><p><strong>1975</strong> <em><strong>(IT)</em></strong> Microsoft Corporation is founded by Bill Gates and Paul Allen.</p></li>\n<li><p><strong>1975</strong> <em><strong>(BIO)</em></strong> Two-dimensional electrophoresis, where separation of proteins on SDS polyacrylamide gel is combined with separation according to isoelectric points, is announced by P. H. O'Farrell (J. Biol. Chem., 250: 4007-4021, 1975).</p></li>\n<li><p><strong>1976</strong> <em><strong>(IT)</em></strong> The Unix-To-Unix Copy Protocol (UUCP) is developed at Bell Labs.</p></li>\n<li><p><strong>1977</strong> <em><strong>(BIOINFO)</em></strong> Allan Maxam and Walter Gilbert (Harvard) and Frederick Sanger (U.K. Medical Research Council), report methods for sequencing DNA.</p></li>\n<li><p><strong>1977</strong> <em><strong>(BIOINFO)</em></strong> DNA sequencing and software to analyze it (Staden)</p></li>\n<li><p><strong>1977</strong> <em><strong>(BIOINFO)</em></strong> The full description of the Brookhaven PDB (http://www.pdb.bnl.gov) is published (Bernstein, F.C.; Koetzle, T.F.; Williams, G.J.B.; Meyer, E.F.; Brice, M.D.; Rodgers, J.R.; Kennard, O.; Shimanouchi, T.; Tasumi, M.J.; J. Mol. Biol., 1977, 112:, 535).</p></li>\n<li><p><strong>1978</strong> <em><strong>(IT)</em></strong> The first Usenet connection is established between Duke and the University of North Carolina at Chapel Hill by Tom Truscott, Jim Ellis and Steve Bellovin.</p></li>\n<li><p><strong>1980</strong> <em><strong>(BIOINFO)</em></strong> IntelliGenetics, Inc. founded in California. Their primary product is the IntelliGenetics Suite of programs for DNA and protein sequence analysis.</p></li>\n<li><p><strong>1980</strong> <em><strong>(BIO)</em></strong> The first complete gene sequence for an organism (FX174) is published. The gene consists of 5,386 base pairs which code nine proteins.</p></li>\n<li><p><strong>1980</strong> <em><strong>(BIO)</em></strong> W\u00fcthrich et. al. publish paper detailing the use of multi-dimensional NMR for protein structure determination (Kumar, A.; Ernst, R.R.; W\u00fcthrich, K.; Biochem. Biophys. Res. Comm., 1980, 95:, 1).</p></li>\n<li><p><strong>1981</strong> <em><strong>(IT)</em></strong> IBM introduces its Personal Computer to the market.</p></li>\n<li><p><strong>1981</strong> <em><strong>(BIOINFO)</em></strong> The Smith-Waterman algorithm for sequence alignment is published.</p></li>\n<li><p><strong>1981</strong> <em><strong>(BIO)</em></strong> The concept of a sequence motif (Doolittle)</p></li>\n<li><p><strong>1982</strong> <em><strong>(BIOINFO)</em></strong> GenBank Release 3 made public</p></li>\n<li><p><strong>1982</strong> <em><strong>(BIO)</em></strong> Genetics Computer Group (GCG) created as a part of the University of Wisconsin of Wisconsin Biotechnology Center. The company's primary product is The Wisconsin Suite of molecular biology tools.</p></li>\n<li><p><strong>1982</strong> <em><strong>(BIO)</em></strong> Phage lambda genome sequenced</p></li>\n<li><p><strong>1983</strong> <em><strong>(IT)</em></strong> Name servers are developed at the University of Wisconsin.</p></li>\n<li><p><strong>1983</strong> <em><strong>(BIOINFO)</em></strong> Sequence database searching algorithm (Wilbur-Lipman)</p></li>\n<li><p><strong>1983</strong> <em><strong>(IT)</em></strong> The Compact Disk (CD) is launched.</p></li>\n<li><p><strong>1984</strong> <em><strong>(IT)</em></strong> Jon Postel's Domain Name System (DNS) is placed on-line.</p></li>\n<li><p><strong>1984</strong> <em><strong>(IT)</em></strong> The Macintosh is announced by Apple Computer.</p></li>\n<li><p><strong>1985</strong> <em><strong>(BIOINFO)</em></strong> FASTP/FASTN: fast sequence similarity searching algorithm is published.</p></li>\n<li><p><strong>1985</strong> <em><strong>(BIO)</em></strong> The PCR reaction is described by Kary Mullis and co-workers.</p></li>\n<li><p><strong>1986</strong> <em><strong>(IT)</em></strong> NSFnet debuts.</p></li>\n<li><p><strong>1986</strong> <em><strong>(BIOINFO)</em></strong> The SWISS-PROT database is created by the Department of Medical Biochemistry of the University of Geneva and the European Molecular Biology Laboratory (EMBL).</p></li>\n<li><p><strong>1986</strong> <em><strong>(BIO)</em></strong> The term \"Genomics\" appeared for the first time to describe the scientific discipline of mapping, sequencing, and analyzing genes. The term was coined by Thomas Roderick as a name for the new journal.</p></li>\n<li><p><strong>1987</strong> <em><strong>(BIO)</em></strong> The physical map of e. coli is published (Y. Kohara, et. al., Cell 51: 319-337).</p></li>\n<li><p><strong>1987</strong> <em><strong>(BIO)</em></strong> The use of yeast artifical chromosomes (YAC) is described (David T. Burke, et. al., Science, 236: 806-812).</p></li>\n<li><p><strong>1988</strong> <em><strong>(IT)</em></strong> A new program, an Internet computer virus designed by a student, infects 6,000 military computers in the US.</p></li>\n<li><p><strong>1988</strong> <em><strong>(BIOINFO)</em></strong> Des Higgins and Paul Sharpe announce the development of CLUSTAL (Higgins, D.G.; Sharp, P.M. Fast and sensitive multiple sequence alignments on a microcomputer. Comput. Appl. Biosci. 1989, 5, 151-153; Higgins, D.G.; Sharp, P.M. CLUSTAL: a package for performing multiple sequence alignment on a microcomputer. Gene 1988, 73, 237-244.)</p></li>\n<li><p><strong>1988</strong> <em><strong>(IT)</em></strong> EMBnet network for database distribution</p></li>\n<li><p><strong>1988</strong> <em><strong>(BIO)</em></strong> National Center for Biotechnology Information (NCBI) created at NIH/NLM</p></li>\n<li><p><strong>1988</strong> <em><strong>(IT)</em></strong> Perl (Practical Extraction Report Language) is released by Larry Wall.</p></li>\n<li><p><strong>1988</strong> <em><strong>(BIOINFO)</em></strong> The FASTA algorithm for sequence comparison is published by Pearson and Lupman.</p></li>\n<li><p><strong>1988</strong> <em><strong>(BIO)</em></strong> The Human Genome Initiative is started (Commission on Life Sciences, National Research Council. Mapping and Sequencing the Human Genome, National Academy Press: Washington, D.C.), 1988.</p></li>\n<li><p><strong>1988</strong> <em><strong>(BIO)</em></strong> The National Center for Biotechnology Information (NCBI) is established at the National Cancer Institute.</p></li>\n<li><p><strong>1990</strong> <em><strong>(BIOINFO)</em></strong> BLAST: fast sequence similarity searching (Altschul, et. al.) is implemented.</p></li>\n<li><p><strong>1990</strong> <em><strong>(IT)</em></strong> The HTTP 1.0 specification is published. Tim Berners-Lee publishes the first HTML document.</p></li>\n<li><p><strong>1991</strong> <em><strong>(BIO)</em></strong> EST: expressed sequence tag sequencing</p></li>\n<li><p><strong>1991</strong> <em><strong>(IT)</em></strong> Linus Torvalds announces a Unix-Like operating system which later becomes Linux.</p></li>\n<li><p><strong>1991</strong> <em><strong>(BIO)</em></strong> Myriad Genetics, Inc. is founded in Utah. The company's goal is to lead in the discovery of major common human disease genes and their related pathways. The Company has discovered and sequenced, with its academic collaborators, the following major genes: BRCA1, BRCA2, CHD1, MMAC1, MMSC1, MMSC2, CtIP, p16, p19, and MTS2.</p></li>\n<li><p><strong>1991</strong> <em><strong>(BIO)</em></strong> The creation and use of expressed sequence tags (ESTs) is described (J. Craig Venter, et. al., Science, 252: 1651-1656).</p></li>\n<li><p><strong>1991</strong> <em><strong>(IT)</em></strong> The research institute in Geneva (CERN) announces the creation of the protocols which make-up the World Wide Web.</p></li>\n<li><p><strong>1992</strong> <em><strong>(BIO)</em></strong> Mel Simon and coworkers announce the use of BACs for cloning.</p></li>\n<li><p><strong>1992</strong> <em><strong>(BIO)</em></strong> The Institute for Genomic Research (TIGR) is established by Craig Venter.</p></li>\n<li><p><strong>1993</strong> <em><strong>(BIO)</em></strong> Affymetrix begins independent operations in Santa Clara, California</p></li>\n<li><p><strong>1993</strong> <em><strong>(BIO)</em></strong> Sanger Centre, Hinxton, UK</p></li>\n<li><p><strong>1994</strong> <em><strong>(BIOINFO)</em></strong> EMBL European Bioinformatics Institute, Hinxton, UK</p></li>\n<li><p><strong>1994</strong> <em><strong>(IT)</em></strong> Netscape Comminications Corporation founded and releases Navigator, the commercial version of NCSA's Mozilla.</p></li>\n<li><p><strong>1994</strong> <em><strong>(BIOINFO)</em></strong> The PRINTS database of protein motifs is published by Attwood and Beck.</p></li>\n<li><p><strong>1995</strong> <em><strong>(BIO)</em></strong> First bacterial genomes completely sequenced</p></li>\n<li><p><strong>1995</strong> <em><strong>(IT)</em></strong> Microsoft releases version 1.0 of Internet Explorer.</p></li>\n<li><p><strong>1995</strong> <em><strong>(IT)</em></strong> Sun releases version 1.0 of Java. Sun and Netscape release version 1.0 of JavaScript</p></li>\n<li><p><strong>1995</strong> <em><strong>(BIO)</em></strong> The Haemophilus influenzea genome (1.8 Mb) is sequenced.</p></li>\n<li><p><strong>1995</strong> <em><strong>(BIO)</em></strong> The Mycoplasma genitalium genome is sequenced.</p></li>\n<li><p><strong>1995</strong> <em><strong>(IT)</em></strong> Version 1.0 of Apache is released.</p></li>\n<li><p><strong>1996</strong> <em><strong>(BIO)</em></strong> Affymetrix produces the first commercial DNA chips.</p></li>\n<li><p><strong>1996</strong> <em><strong>(BIO)</em></strong> Oxford Molecular Group acquires the MacVector product from Eastman Kodak.</p></li>\n<li><p><strong>1996</strong> <em><strong>(BIOINFO)</em></strong> Structural Bioinformatics, Inc. founded in San Diego, CA.</p></li>\n<li><p><strong>1996</strong> <em><strong>(BIO)</em></strong> The Prosite database is reported by Bairoch, et.al.</p></li>\n<li><p><strong>1996</strong> <em><strong>(BIO)</em></strong> The genome for Saccharomyces cerevisiae (baker's yeast, 12.1 Mb) is sequenced.</p></li>\n<li><p><strong>1996</strong> <em><strong>(IT)</em></strong> The working draft for XML is released by W3C.</p></li>\n<li><p><strong>1996</strong> <em><strong>(BIO)</em></strong> Yeast genome completely sequenced</p></li>\n<li><p><strong>1997</strong> <em><strong>(BIOINFO)</em></strong> LION bioscience AG founded as an integrated genomics company with strong focus on bioinformatics. The company is built from IP out of the European Molecular Biology Laboratory (EMBL), the European Bioinformatics Institute (EBI), the German Cancer Research Center (DKFZ), and the University of Heidelberg.</p></li>\n<li><p><strong>1997</strong> <em><strong>(BIOINFO)</em></strong> PSI-BLAST</p></li>\n<li><p><strong>1997</strong> <em><strong>(BIO)</em></strong> The genome for E. coli (4.7 Mbp) is published.</p></li>\n<li><p><strong>1998</strong> <em><strong>(BIO)</em></strong> Craig Venter forms Celera in Rockville, Maryland.</p></li>\n<li><p><strong>1998</strong> <em><strong>(BIOINFO)</em></strong> Inpharmatica, a new Genomics and Bioinformatics company, is established by University College London, the Wolfson Institute for Biomedical Research, five leading scientists from major British academic centers and Unibio Limited.</p></li>\n<li><p><strong>1998</strong> <em><strong>(BIOINFO)</em></strong> The Swiss Institute of Bioinformatics is established as a non-profit foundation.</p></li>\n<li><p><strong>1998</strong> <em><strong>(BIO)</em></strong> The genomes for Caenorhabditis elegans and baker's yeast are published.</p></li>\n<li><p><strong>1998</strong> <em><strong>(BIO)</em></strong> Worm (multicellular) genome completely sequenced</p></li>\n<li><p><strong>1998</strong> <em><strong>(BIO)</em></strong> deCode genetics publishes a paper that described the location of the FET1 gene, which is responsible for familial essential tremor, on chromosome 13 (Nature Genetics).</p></li>\n<li><p><strong>1999</strong> <em><strong>(BIO)</em></strong> Fly genome completely sequenced</p></li>\n<li><p><strong>1999</strong> <em><strong>(BIO)</em></strong> deCode genetics maps the gene linked to pre-eclampsia as a locus on chromosome 2p13.</p></li>\n<li><p><strong>2000</strong> <em><strong>(BIO)</em></strong> Jeong H, Tombor B, Albert R, Oltvai ZN, Barabasi AL. The large-scale organization of metabolic networks. Nature 2000 Oct 5;407(6804):651-4, PubMed</p></li>\n<li><p><strong>2000</strong> <em><strong>(BIO)</em></strong> The A. thaliana genome (100 Mb) is secquenced.</p></li>\n<li><p><strong>2000</strong> <em><strong>(BIO)</em></strong> The D. melanogaster genome (180Mb) is secquenced.</p></li>\n<li><p><strong>2000</strong> <em><strong>(BIO)</em></strong> The genome for Pseudomonas aeruginosa (6.3 Mbp) is published.</p></li>\n<li><p><strong>2001</strong> <em><strong>(BIO)</em></strong> The human genome (3,000 Mbp) is published.</p></li>\n<li><p><strong>2002</strong> <em><strong>(BIO)</em></strong> An international sequencing consortium published the full genome sequence of the common house mouse (2.5 Gb). Whitehead Institute researcher Kerstin Lindblad-Toh is the lead author on the paper; her institution lead the project and contributed about half of the sequence. Washington University School of Medicine delivered about 30 percent of the sequence, and created the mouse BAC-based physical map. The Wellcome Trust Sanger Institute in the UK was the third major partner. Other institutes in the International Mouse Genome Sequencing Consortium included the University of California at Santa Cruz, the Institute for Systems Biology, and the University of Geneva.</p></li>\n<li><p><strong>2004</strong> <em><strong>(BIO)</em></strong> The draft genome sequence of the brown Norway laboratory rat, Rattus norvegicus, was completed by the Rat Genome Sequencing project Consortium. The paper appears in the April 1 edition of Nature.</p></li>\n</ul>\n\n<p>Compiled from different sources, including: </p>\n\n<ul>\n<li>A <a href=\"http://www.netsci.org/Science/Bioinform/feature06.html\" rel=\"nofollow\">Short History of Bioinformatics</a>, by Allen B. Richon</li>\n<li><a href=\"http://www.roseindia.net/bioinformatics/history_of_bioinformatics.shtml\" rel=\"nofollow\">History of Bioinformatics</a></li>\n<li><a href=\"http://www.ncbi.nlm.nih.gov/Education/BLASTinfo/milestones.html\" rel=\"nofollow\">Bioinformatics Milestones</a></li>\n<li><a href=\"http://www.cbclickbank.com/bioinformatics/history.htm\" rel=\"nofollow\">History, Origin &amp; Bioinformatics Events</a> </li>\n</ul>", "lastedit_user": 68}}, {"pk": 176, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 1, "views": 0, "author": 62, "creation_date": "2010-03-05 12:47:09", "content": "<p>No idea how to do it exactly but I can think about two routes to investigate:</p>\n\n<ul>\n<li>LASTZ has something called \"quantum DNA\":</li>\n</ul>\n\n<p><a href=\"http://www.bx.psu.edu/miller_lab/dist/README.lastz-1.02.00/README.lastz-1.02.00.html#fmt_qdna\" rel=\"nofollow\">http://www.bx.psu.edu/miller_lab/dist/README.lastz-1.02.00/README.lastz-1.02.00.html#fmt_qdna</a></p>\n\n<ul>\n<li><p>instead of using \"linear\" aligner go for graph based ones:</p>\n\n<p>POA     <a href=\"http://bioinfo.mbi.ucla.edu/poa/\" rel=\"nofollow\">http://bioinfo.mbi.ucla.edu/poa/</a></p>\n\n<p>AliWABA <a href=\"http://www.ncbi.nlm.nih.gov/pmc/articles/PMC1538870/\" rel=\"nofollow\">http://www.ncbi.nlm.nih.gov/pmc/articles/PMC1538870/</a></p></li>\n</ul>", "html": "<p>No idea how to do it exactly but I can think about two routes to investigate:</p>\n\n<ul>\n<li>LASTZ has something called \"quantum DNA\":</li>\n</ul>\n\n<p><a href=\"http://www.bx.psu.edu/miller_lab/dist/README.lastz-1.02.00/README.lastz-1.02.00.html#fmt_qdna\" rel=\"nofollow\">http://www.bx.psu.edu/miller_lab/dist/README.lastz-1.02.00/README.lastz-1.02.00.html#fmt_qdna</a></p>\n\n<ul>\n<li><p>instead of using \"linear\" aligner go for graph based ones:</p>\n\n<p>POA     <a href=\"http://bioinfo.mbi.ucla.edu/poa/\" rel=\"nofollow\">http://bioinfo.mbi.ucla.edu/poa/</a></p>\n\n<p>AliWABA <a href=\"http://www.ncbi.nlm.nih.gov/pmc/articles/PMC1538870/\" rel=\"nofollow\">http://www.ncbi.nlm.nih.gov/pmc/articles/PMC1538870/</a></p></li>\n</ul>", "lastedit_user": 62}}, {"pk": 177, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 3, "views": 0, "author": 68, "creation_date": "2010-03-05 12:56:39", "content": "<p>I have no experience with them, but there are several Linux distributions out there that come preloaded with bioinformatics software.</p>\n\n<p>For example:</p>\n\n<ul>\n<li><p><strong><a href=\"http://bicmku.in:8082/bioubuntu/\" rel=\"nofollow\">biobuntu</a></strong> which comes preloaded with amapalign, biococoa, biomode, bioperl, biopython, biosquid, blast2, boxshade, chemtool, clustalw, clustalx, dialign, easychem, fastdnaml, fastlink, garlic, gchempaint, gcubin, gff2aplot, gff2ps, EMBOSS, gmt, gromacs, hmmer, ifeffit, ifrit, imview, kalign, leksbot, libbioruby, meltinggui, mipe, molphy, mozillabiofox, mpqc/support, mummer, muscle, mustang, ncbiepcr, ncbitoolsbin, ncbitoolsx11, njplot, openbabel, perlprimer, phylip, poa, polyxmass, primer3, probcons, proda, pybliographerA, rasmol, readseq, seaview, sibsim4, sigmaalignSimple, sim4, SixpackDisplay, tcoffeeMultiple, tigrglimmerGene, treepuzzleReconstruction, treetool, treeviewxDisplays, viewmol, wise, xbs, xdrawchem and xmakemol</p></li>\n<li><p><strong><a href=\"http://nebc.nox.ac.uk/tools/bio-linux/bio-linux-5.0\" rel=\"nofollow\">Bio-Linux</a></strong>  a fully featured, powerful, configurable and easy to maintain bioinformatics workstation. Bio-Linux provides more than 500 bioinformatics programs on an Ubuntu Linux base. There is a graphical menu for bioinformatics programs, as well as easy access to the Bio-Linux bioinformatics documentation system and sample data useful for testing programs. You can also install Bio-Linux packages to handle new generation sequence data types.</p></li>\n<li><p>The vision for <strong><a href=\"http://www.cloudbiolinux.com/\" rel=\"nofollow\">Cloud BioLinux</a></strong> is to offer a base image of genome analysis resources for cloud computing platforms, such as Amazon EC2.  This Science as a Service model (ScaaS) will allow us to incorporate, develop and optimize life science software as well as supporting data sets on compute clouds.  This project is driven by the observation that commonly-used bioinformatics tools are hard to build and maintain, require high amounts of resources, or just too numerous to choose from.</p></li>\n<li><p><strong><a href=\"http://biobrew.bioinformatics.org/\" rel=\"nofollow\">BioBrew</a></strong> is a collection of open-source applications for life scientists and an in-house project at Bioinformatics.Org. The BioBrew Roll for Rocks can be used to create Rocks/BioBrew Linux, a distribution customized for both cluster and bioinformatics computing: it automates cluster installation, includes all the HPC software a cluster enthusiast needs, and contains popular bioinformatics applications.</p></li>\n<li><p><strong><a href=\"http://www.debian.org/devel/debian-med/\" rel=\"nofollow\">Debian Med</a></strong> is a \"Debian Pure Blend\" with the aim to develop Debian into an operating system that is particularly well fit for the requirements for medical practice and research. The goal of Debian Med is a complete system for all tasks in medical care which is built completely on free software.</p></li>\n</ul>", "html": "<p>I have no experience with them, but there are several Linux distributions out there that come preloaded with bioinformatics software.</p>\n\n<p>For example:</p>\n\n<ul>\n<li><p><strong><a href=\"http://bicmku.in:8082/bioubuntu/\" rel=\"nofollow\">biobuntu</a></strong> which comes preloaded with amapalign, biococoa, biomode, bioperl, biopython, biosquid, blast2, boxshade, chemtool, clustalw, clustalx, dialign, easychem, fastdnaml, fastlink, garlic, gchempaint, gcubin, gff2aplot, gff2ps, EMBOSS, gmt, gromacs, hmmer, ifeffit, ifrit, imview, kalign, leksbot, libbioruby, meltinggui, mipe, molphy, mozillabiofox, mpqc/support, mummer, muscle, mustang, ncbiepcr, ncbitoolsbin, ncbitoolsx11, njplot, openbabel, perlprimer, phylip, poa, polyxmass, primer3, probcons, proda, pybliographerA, rasmol, readseq, seaview, sibsim4, sigmaalignSimple, sim4, SixpackDisplay, tcoffeeMultiple, tigrglimmerGene, treepuzzleReconstruction, treetool, treeviewxDisplays, viewmol, wise, xbs, xdrawchem and xmakemol</p></li>\n<li><p><strong><a href=\"http://nebc.nox.ac.uk/tools/bio-linux/bio-linux-5.0\" rel=\"nofollow\">Bio-Linux</a></strong>  a fully featured, powerful, configurable and easy to maintain bioinformatics workstation. Bio-Linux provides more than 500 bioinformatics programs on an Ubuntu Linux base. There is a graphical menu for bioinformatics programs, as well as easy access to the Bio-Linux bioinformatics documentation system and sample data useful for testing programs. You can also install Bio-Linux packages to handle new generation sequence data types.</p></li>\n<li><p>The vision for <strong><a href=\"http://www.cloudbiolinux.com/\" rel=\"nofollow\">Cloud BioLinux</a></strong> is to offer a base image of genome analysis resources for cloud computing platforms, such as Amazon EC2.  This Science as a Service model (ScaaS) will allow us to incorporate, develop and optimize life science software as well as supporting data sets on compute clouds.  This project is driven by the observation that commonly-used bioinformatics tools are hard to build and maintain, require high amounts of resources, or just too numerous to choose from.</p></li>\n<li><p><strong><a href=\"http://biobrew.bioinformatics.org/\" rel=\"nofollow\">BioBrew</a></strong> is a collection of open-source applications for life scientists and an in-house project at Bioinformatics.Org. The BioBrew Roll for Rocks can be used to create Rocks/BioBrew Linux, a distribution customized for both cluster and bioinformatics computing: it automates cluster installation, includes all the HPC software a cluster enthusiast needs, and contains popular bioinformatics applications.</p></li>\n<li><p><strong><a href=\"http://www.debian.org/devel/debian-med/\" rel=\"nofollow\">Debian Med</a></strong> is a \"Debian Pure Blend\" with the aim to develop Debian into an operating system that is particularly well fit for the requirements for medical practice and research. The goal of Debian Med is a complete system for all tasks in medical care which is built completely on free software.</p></li>\n</ul>", "lastedit_user": 68}}, {"pk": 178, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 83, "author": 23, "creation_date": "2010-03-05 13:06:24", "content": "<p>I am studying a set of genes involved in the same pathway, but this week, after looking at the new release of ensembl, I discovered that the gene was removed. What should I do now? There are references to this gene in several articles and the fact that it disappeared intrigues me - to which sequence these articles were referring to? Is it possible that the ensembl's curators have made an error?</p>\n\n<p>cheers</p>", "html": "<p>I am studying a set of genes involved in the same pathway, but this week, after looking at the new release of ensembl, I discovered that the gene was removed. What should I do now? There are references to this gene in several articles and the fact that it disappeared intrigues me - to which sequence these articles were referring to? Is it possible that the ensembl's curators have made an error?</p>\n\n<p>cheers</p>", "lastedit_user": 23}}, {"pk": 179, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 0, "author": 2, "creation_date": "2010-03-05 13:15:48", "content": "<p>The best course of action would be to contact the people (curators) who made the decision of removing that gene. Keep us posted on what they say, it might be an interesting tidbit about data evolution inside databases ;-0</p>", "html": "<p>The best course of action would be to contact the people (curators) who made the decision of removing that gene. Keep us posted on what they say, it might be an interesting tidbit about data evolution inside databases ;-0</p>", "lastedit_user": 2}}, {"pk": 180, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 2, "views": 0, "author": 62, "creation_date": "2010-03-05 13:21:15", "content": "<ol>\n<li>keep on using Ensembl Archive: <a href=\"http://www.ensembl.org/info/website/archives/index.html\" rel=\"nofollow\">http://www.ensembl.org/info/website/archives/index.html</a></li>\n<li>there is no general answer to question \"is gene X real one or it is an artifact removed from Ensembl\". </li>\n<li>you may check i.e. ESTs if they assemble into sensible transcript /compare few species on the genomic level watching for pseudogenes. </li>\n</ol>", "html": "<ol>\n<li>keep on using Ensembl Archive: <a href=\"http://www.ensembl.org/info/website/archives/index.html\" rel=\"nofollow\">http://www.ensembl.org/info/website/archives/index.html</a></li>\n<li>there is no general answer to question \"is gene X real one or it is an artifact removed from Ensembl\". </li>\n<li>you may check i.e. ESTs if they assemble into sensible transcript /compare few species on the genomic level watching for pseudogenes. </li>\n</ol>", "lastedit_user": 62}}, {"pk": 181, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 6, "views": 387, "author": 2, "creation_date": "2010-03-05 13:30:44", "content": "<p>I am looking for personal experiences and short opinions regarding bioinformatics books. </p>\n\n<p>So far I have noticed the following trend: many books titled <em>Bioinformatics with Perl/Python/Java/R</em> etc end up being introductions into the programming language in question, often  only minor code examples are related to bioinformatics.</p>\n\n<p><strong>Help us find some good books!</strong></p>\n\n<p><em>PS. If you are willing to write a standalone book review is even better. Please do so by creating a new question titled: \"Book review for X\" then answer it with your own review.</em></p>", "html": "<p>I am looking for personal experiences and short opinions regarding bioinformatics books. </p>\n\n<p>So far I have noticed the following trend: many books titled <em>Bioinformatics with Perl/Python/Java/R</em> etc end up being introductions into the programming language in question, often  only minor code examples are related to bioinformatics.</p>\n\n<p><strong>Help us find some good books!</strong></p>\n\n<p><em>PS. If you are willing to write a standalone book review is even better. Please do so by creating a new question titled: \"Book review for X\" then answer it with your own review.</em></p>", "lastedit_user": 2}}, {"pk": 182, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 6, "views": 0, "author": 59, "creation_date": "2010-03-05 13:39:58", "content": "<p>Ok well I think I will just stick to R for now.  I do some work with BioConductor and have the following texts on my desk:</p>\n\n<p>Bioinformatics and Computational Biology Solutions Using R and Bioconductor (<a href=\"http://www.bioconductor.org/docs/mogr/\" rel=\"nofollow\">http://www.bioconductor.org/docs/mogr/</a>) is a good text to get to grips with common data processing tasks for microarray and proteomics analysis which covers QC, normalisation, one and two colour array data, and downstream data analysis.  It needs an update, some of the example code does not work with more modern BioConductor releases but it is still a useful resource.</p>\n\n<p>Bioconductor Case Studies (<a href=\"http://www.bioconductor.org/pub/biocases/\" rel=\"nofollow\">http://www.bioconductor.org/pub/biocases/</a>) focuses less on the specifics of the packages and more on the workflows of common bioinformatics analyses, including GSEA, machine learning, pulling data from remote resources, statistical modelling and visualisation.   It also benefits from being a more recent release than it's counterpart above.</p>\n\n<p>Neither of these books will teach you R however.  My general R programming reference is:</p>\n\n<p>R Programming for Bioinformatics (http://www.bioconductor.org/pub/RBioinf/) which tells you more about R than you probably ever want to (or care) to know.  Whilst it is aimed at a bioinformatics audience it does not skip it's role as a text primarily to teach you how to program in R.</p>\n\n<p>If youre looking for a tome that brings your statistics up to speed instead within the R framework then I have long had a copy of Introductory Statistics With R (<a href=\"http://rads.stackoverflow.com/amzn/click/0387790535\" rel=\"nofollow\">http://www.amazon.co.uk/dp/0387790535/?tag=sollc-gb-20</a>) it's not a long book by any means but will get you used to handling data and applying statistical tests in R.</p>", "html": "<p>Ok well I think I will just stick to R for now.  I do some work with BioConductor and have the following texts on my desk:</p>\n\n<p>Bioinformatics and Computational Biology Solutions Using R and Bioconductor (<a href=\"http://www.bioconductor.org/docs/mogr/\" rel=\"nofollow\">http://www.bioconductor.org/docs/mogr/</a>) is a good text to get to grips with common data processing tasks for microarray and proteomics analysis which covers QC, normalisation, one and two colour array data, and downstream data analysis.  It needs an update, some of the example code does not work with more modern BioConductor releases but it is still a useful resource.</p>\n\n<p>Bioconductor Case Studies (<a href=\"http://www.bioconductor.org/pub/biocases/\" rel=\"nofollow\">http://www.bioconductor.org/pub/biocases/</a>) focuses less on the specifics of the packages and more on the workflows of common bioinformatics analyses, including GSEA, machine learning, pulling data from remote resources, statistical modelling and visualisation.   It also benefits from being a more recent release than it's counterpart above.</p>\n\n<p>Neither of these books will teach you R however.  My general R programming reference is:</p>\n\n<p>R Programming for Bioinformatics (http://www.bioconductor.org/pub/RBioinf/) which tells you more about R than you probably ever want to (or care) to know.  Whilst it is aimed at a bioinformatics audience it does not skip it's role as a text primarily to teach you how to program in R.</p>\n\n<p>If youre looking for a tome that brings your statistics up to speed instead within the R framework then I have long had a copy of Introductory Statistics With R (<a href=\"http://rads.stackoverflow.com/amzn/click/0387790535\" rel=\"nofollow\">http://www.amazon.co.uk/dp/0387790535/?tag=sollc-gb-20</a>) it's not a long book by any means but will get you used to handling data and applying statistical tests in R.</p>", "lastedit_user": 59}}, {"pk": 183, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 5, "views": 65, "author": 79, "creation_date": "2010-03-05 14:37:21", "content": "<p>For reference, please read this excerpt from<br>\n<strong>Human non-synonymous SNPs: server and survey</strong><br>\nVasily Ramensky, Peer Bork, and Shamil Sunyaev</p>\n\n<blockquote>\n  <p><em>Profile analysis of homologous\n  sequences</em>. The amino acid replacement\n  may be incompatible with the spectrum\n  of substitutions observed at that\n  position in a family of homologous\n  proteins. PolyPhen identifies\n  homologues of the input sequences via\n  a BLAST (23) search of the NRDB\n  database. The set of aligned sequences\n  with sequence identity to the input\n  sequence in the range 30\u00b194%\n  (inclusive) is used by the new version\n  of the PSIC (position-specific\n  independent counts) software (24) to\n  calculate the so-called profile matrix\n  (http://strand.imb.ac.ru/PSIC/).\n  Elements of the matrix (pro- file\n  scores) are logarithmic ratios of the\n  likelihood of a given amino acid\n  occurring at a particular site to the\n  likelihood of this amino acid\n  occurring at any site (background\n  frequency). PolyPhen computes the\n  absolute value of the difference\n  between profile scores of both allelic\n  variants in the polymorphic position.\n  PolyPhen also shows the number of\n  aligned sequences at the query\n  position; this may be used to assess\n  the reliability of profile score\n  calculations.</p>\n</blockquote>\n\n<p>I'd like to calculate something similar (score variants based on frequency that AA in aligned sequences) to what's mentioned here <strong>programmatically</strong>, but I can't find any implementation of the above described system.</p>\n\n<p>Does anyone know of a working implementation of this or something similar, that's available either in code or as a web service?</p>\n\n<p>Or should it is easy enough to implement something like this ourselves?</p>", "html": "<p>For reference, please read this excerpt from<br>\n<strong>Human non-synonymous SNPs: server and survey</strong><br>\nVasily Ramensky, Peer Bork, and Shamil Sunyaev</p>\n\n<blockquote>\n  <p><em>Profile analysis of homologous\n  sequences</em>. The amino acid replacement\n  may be incompatible with the spectrum\n  of substitutions observed at that\n  position in a family of homologous\n  proteins. PolyPhen identifies\n  homologues of the input sequences via\n  a BLAST (23) search of the NRDB\n  database. The set of aligned sequences\n  with sequence identity to the input\n  sequence in the range 30\u00b194%\n  (inclusive) is used by the new version\n  of the PSIC (position-specific\n  independent counts) software (24) to\n  calculate the so-called profile matrix\n  (http://strand.imb.ac.ru/PSIC/).\n  Elements of the matrix (pro- file\n  scores) are logarithmic ratios of the\n  likelihood of a given amino acid\n  occurring at a particular site to the\n  likelihood of this amino acid\n  occurring at any site (background\n  frequency). PolyPhen computes the\n  absolute value of the difference\n  between profile scores of both allelic\n  variants in the polymorphic position.\n  PolyPhen also shows the number of\n  aligned sequences at the query\n  position; this may be used to assess\n  the reliability of profile score\n  calculations.</p>\n</blockquote>\n\n<p>I'd like to calculate something similar (score variants based on frequency that AA in aligned sequences) to what's mentioned here <strong>programmatically</strong>, but I can't find any implementation of the above described system.</p>\n\n<p>Does anyone know of a working implementation of this or something similar, that's available either in code or as a web service?</p>\n\n<p>Or should it is easy enough to implement something like this ourselves?</p>", "lastedit_user": 79}}, {"pk": 184, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 2, "views": 0, "author": 68, "creation_date": "2010-03-05 15:06:55", "content": "<p>I'll tell an acedote about the book that introduced me to bioinformatics. </p>\n\n<p>Let me preface that I have three big interests in my life: biology, computer science and sailing. The year was around 2000, and I had found the book <a href=\"http://www.nytimes.com/books/99/10/31/reviews/991031.31anderst.html?_r=1\" rel=\"nofollow\">The New New Thing : A Silicon Valley Story</a> by <a href=\"http://en.wikipedia.org/wiki/Michael_Lewis_%28author%29\" rel=\"nofollow\">Michael M. Lewis</a>. It was about two of my interests: computer science and sailing.</p>\n\n<p>It is the biography of <a href=\"http://en.wikipedia.org/wiki/James_H._Clark\" rel=\"nofollow\">Jim Clark</a>, a technology entrepreneur who is about to create his third, separate, billion-dollar company: first Silicon Graphics, then Netscape--and now Healtheon, a startup which he hopes will turn the $1 trillion healthcare industry on its head. But after coming up with the basic idea for Healtheon, securing the initial seed money, and hiring the people to make it happen, Clark concentrated on the building of <a href=\"http://www.charterworld.com/?sub=yacht-charter&amp;charter=sailing-yacht-hyperion-1095\" rel=\"nofollow\">Hyperion</a>, a sailboat with a 197-foot mast (at the time of her launch, she was the largest sloop ever build and the tallest mast ever built), whose functions are controlled by 25 SGI workstations. As the title implies, Jim Clark is a restless man who was always looking for the <em>new new thing</em>, the next big breaktrough. Near the end of the book Michael Lewis tells about one of the new things of Jim Clarks radar, a new emerging field called bioinformatics. </p>\n\n<p>I remember sitting there in my chair, staring at that sentence and thinking \"What! I can combine both biology and computer science!\" From that moment on I was hooked.</p>\n\n<p><em>(The book with the ultimate triumvirate, where the three of my interest -biology, computer science and sailing- were combined, came later with the autobiography of  Craig Venter, <a href=\"http://www.nytimes.com/2007/11/11/books/review/Dizikes-t.html\" rel=\"nofollow\">A life decoded</a>, where he writes about the <a href=\"http://www.jcvi.org/cms/research/projects/gos/overview/\" rel=\"nofollow\">Global Ocean Sampling Expedition</a> he undertook with his personal 95-foot sailboat named the Sorcerer II. The expedition sampled water from Halifax, Nova Scotia to the Eastern Tropical Pacific while undertaking a two year circumnavigation. The micro-organisms in the water were sequenced and the results were <a href=\"http://www.ploscollections.org/article/browseIssue.action?issue=info%3adoi/10.1371/issue.pcol.v06.i02\" rel=\"nofollow\">published</a>, more then doubling the amount of genetic sequences available up to that point.)</em></p>", "html": "<p>I'll tell an acedote about the book that introduced me to bioinformatics. </p>\n\n<p>Let me preface that I have three big interests in my life: biology, computer science and sailing. The year was around 2000, and I had found the book <a href=\"http://www.nytimes.com/books/99/10/31/reviews/991031.31anderst.html?_r=1\" rel=\"nofollow\">The New New Thing : A Silicon Valley Story</a> by <a href=\"http://en.wikipedia.org/wiki/Michael_Lewis_%28author%29\" rel=\"nofollow\">Michael M. Lewis</a>. It was about two of my interests: computer science and sailing.</p>\n\n<p>It is the biography of <a href=\"http://en.wikipedia.org/wiki/James_H._Clark\" rel=\"nofollow\">Jim Clark</a>, a technology entrepreneur who is about to create his third, separate, billion-dollar company: first Silicon Graphics, then Netscape--and now Healtheon, a startup which he hopes will turn the $1 trillion healthcare industry on its head. But after coming up with the basic idea for Healtheon, securing the initial seed money, and hiring the people to make it happen, Clark concentrated on the building of <a href=\"http://www.charterworld.com/?sub=yacht-charter&amp;charter=sailing-yacht-hyperion-1095\" rel=\"nofollow\">Hyperion</a>, a sailboat with a 197-foot mast (at the time of her launch, she was the largest sloop ever build and the tallest mast ever built), whose functions are controlled by 25 SGI workstations. As the title implies, Jim Clark is a restless man who was always looking for the <em>new new thing</em>, the next big breaktrough. Near the end of the book Michael Lewis tells about one of the new things of Jim Clarks radar, a new emerging field called bioinformatics. </p>\n\n<p>I remember sitting there in my chair, staring at that sentence and thinking \"What! I can combine both biology and computer science!\" From that moment on I was hooked.</p>\n\n<p><em>(The book with the ultimate triumvirate, where the three of my interest -biology, computer science and sailing- were combined, came later with the autobiography of  Craig Venter, <a href=\"http://www.nytimes.com/2007/11/11/books/review/Dizikes-t.html\" rel=\"nofollow\">A life decoded</a>, where he writes about the <a href=\"http://www.jcvi.org/cms/research/projects/gos/overview/\" rel=\"nofollow\">Global Ocean Sampling Expedition</a> he undertook with his personal 95-foot sailboat named the Sorcerer II. The expedition sampled water from Halifax, Nova Scotia to the Eastern Tropical Pacific while undertaking a two year circumnavigation. The micro-organisms in the water were sequenced and the results were <a href=\"http://www.ploscollections.org/article/browseIssue.action?issue=info%3adoi/10.1371/issue.pcol.v06.i02\" rel=\"nofollow\">published</a>, more then doubling the amount of genetic sequences available up to that point.)</em></p>", "lastedit_user": 68}}, {"pk": 185, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 2, "views": 62, "author": 68, "creation_date": "2010-03-05 15:18:17", "content": "<p><strong>Bioinformatics Programming Using Python</strong></p>\n\n<p>Practical Programming for Biological Data</p>\n\n<p>By <a href=\"http://www.oreillynet.com/pub/au/3752\" rel=\"nofollow\">Mitchell L Model</a></p>\n\n<p><img src=\"http://covers.oreilly.com/images/9780596154516/cat.gif\" alt=\"alt text\"></p>\n\n<p>Publisher:<a href=\"http://oreilly.com/catalog/9780596154516\" rel=\"nofollow\">O'Reilly Media</a></p>\n\n<p>Released: December 2009 </p>\n\n<p>Pages: 528</p>\n\n<p><em>As <a href=\"http://biostar.stackexchange.com/questions/181/recommend-your-favorite-bioinformatics-books\" rel=\"nofollow\">asked</a> by moderator <a href=\"http://biostar.stackexchange.com/users/2/istvan-albert\" rel=\"nofollow\">Istvan Albert</a> I made a separate question for this book review, so that the best review can come to the top.</em></p>", "html": "<p><strong>Bioinformatics Programming Using Python</strong></p>\n\n<p>Practical Programming for Biological Data</p>\n\n<p>By <a href=\"http://www.oreillynet.com/pub/au/3752\" rel=\"nofollow\">Mitchell L Model</a></p>\n\n<p><img src=\"http://covers.oreilly.com/images/9780596154516/cat.gif\" alt=\"alt text\"></p>\n\n<p>Publisher:<a href=\"http://oreilly.com/catalog/9780596154516\" rel=\"nofollow\">O'Reilly Media</a></p>\n\n<p>Released: December 2009 </p>\n\n<p>Pages: 528</p>\n\n<p><em>As <a href=\"http://biostar.stackexchange.com/questions/181/recommend-your-favorite-bioinformatics-books\" rel=\"nofollow\">asked</a> by moderator <a href=\"http://biostar.stackexchange.com/users/2/istvan-albert\" rel=\"nofollow\">Istvan Albert</a> I made a separate question for this book review, so that the best review can come to the top.</em></p>", "lastedit_user": 68}}, {"pk": 186, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 22, "author": 62, "creation_date": "2010-03-05 15:51:48", "content": "<p>I blastx-ed 1Mbp bacterial genome fragment against NCBI nr database. I have split it into 2000bp fragments with 500bp overlap into a one multiple fasta file (splitter from EMBOSS) </p>\n\n<pre><code>splitter -sequence my_contig.fa  -size 2000 -overlap 500 \n</code></pre>\n\n<p>As on output I picked tabulated blast (-m 9). </p>\n\n<p>Next step was to convert blastx output into gff3. Got that one, with absolute positions (positions in intact contig). </p>\n\n<p>Seems that often one ORF / predicted gene is covered by 2-3 blast hits to the same protein. Hits may or may not overlap. Hence my questions:</p>\n\n<ol>\n<li>what are the fragment sizes / overlaps typically used for blastx in such situation?</li>\n<li>are there any advantages of improving blast hits, by say merging overlapping segments (e-scores will be invalid), or by using blast2 (blastx mode) and comparing DNA sequence from region of overlapping/almost-touching hits against already detected protein? </li>\n</ol>", "html": "<p>I blastx-ed 1Mbp bacterial genome fragment against NCBI nr database. I have split it into 2000bp fragments with 500bp overlap into a one multiple fasta file (splitter from EMBOSS) </p>\n\n<pre><code>splitter -sequence my_contig.fa  -size 2000 -overlap 500 \n</code></pre>\n\n<p>As on output I picked tabulated blast (-m 9). </p>\n\n<p>Next step was to convert blastx output into gff3. Got that one, with absolute positions (positions in intact contig). </p>\n\n<p>Seems that often one ORF / predicted gene is covered by 2-3 blast hits to the same protein. Hits may or may not overlap. Hence my questions:</p>\n\n<ol>\n<li>what are the fragment sizes / overlaps typically used for blastx in such situation?</li>\n<li>are there any advantages of improving blast hits, by say merging overlapping segments (e-scores will be invalid), or by using blast2 (blastx mode) and comparing DNA sequence from region of overlapping/almost-touching hits against already detected protein? </li>\n</ol>", "lastedit_user": 62}}, {"pk": 187, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 82, "author": 88, "creation_date": "2010-03-05 15:59:48", "content": "<p>Dear all,</p>\n\n<p>I would like to get the position in cM for a set of SNPs (SNPs from 1000Genomes Project).\nWhat I have is:\n- list of SNPs with their physical position\n- Genotype (or infered genotype) for each SNP for around 50 individuals</p>\n\n<p>Some of these snps (around 25%) are among the HapMap II SNPs used to compute the genetic map available on HapMap webpage (http://ftp.hapmap.org/recombination/2008-03_rel22_B36/rates).\nBut it is way too little information to think about calculing the cM position for 1000genomes SNPs from HapMap II genetic map, isn't it?</p>\n\n<p>What do you suggest?</p>\n\n<p>Thanks for your help.</p>\n\n<p>Yours truly\nPierre</p>", "html": "<p>Dear all,</p>\n\n<p>I would like to get the position in cM for a set of SNPs (SNPs from 1000Genomes Project).\nWhat I have is:\n- list of SNPs with their physical position\n- Genotype (or infered genotype) for each SNP for around 50 individuals</p>\n\n<p>Some of these snps (around 25%) are among the HapMap II SNPs used to compute the genetic map available on HapMap webpage (http://ftp.hapmap.org/recombination/2008-03_rel22_B36/rates).\nBut it is way too little information to think about calculing the cM position for 1000genomes SNPs from HapMap II genetic map, isn't it?</p>\n\n<p>What do you suggest?</p>\n\n<p>Thanks for your help.</p>\n\n<p>Yours truly\nPierre</p>", "lastedit_user": 88}}, {"pk": 188, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 0, "author": 2, "creation_date": "2010-03-05 16:06:14", "content": "<p>Isn't the size of the protein that causes multiple hits? No matter what fragment size or overlap you choose, if two or more fragments cover different sections of the same protein, you'll get mulitple hits.</p>\n\n<p>If your fragment sizes are too large you'll miss regions, if they are too small you'll get multiple hits. This latter problem does not seem to preclude any downstream analysis, so it may not be worth trying to optimize it away.</p>", "html": "<p>Isn't the size of the protein that causes multiple hits? No matter what fragment size or overlap you choose, if two or more fragments cover different sections of the same protein, you'll get mulitple hits.</p>\n\n<p>If your fragment sizes are too large you'll miss regions, if they are too small you'll get multiple hits. This latter problem does not seem to preclude any downstream analysis, so it may not be worth trying to optimize it away.</p>", "lastedit_user": 2}}, {"pk": 189, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 3, "views": 0, "author": 82, "creation_date": "2010-03-05 16:53:24", "content": "<p>We've been buying our servers from HP via pcconnection.com (don't be fooled by the name), with good success.  All of our desktops have been coming from Penguin Computing.</p>", "html": "<p>We've been buying our servers from HP via pcconnection.com (don't be fooled by the name), with good success.  All of our desktops have been coming from Penguin Computing.</p>", "lastedit_user": 82}}, {"pk": 190, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 0, "author": 68, "creation_date": "2010-03-05 16:57:17", "content": "<p>The book assumes no prior programming experience, uses real-world examples with biological data, and uses Python 3 (the programming language's first non-backwards-compatible release).</p>\n\n<p>The first chapters are about primitive datatypes. At the end of each chapter there is a Tips, Traps and Trackbacks section where you can learn things that make your programming life easier, things that you have to watch out for and the meaning of some representative error messages that you might encounter.</p>\n\n<p>The next chapter covers control statements and has several extended examples that are useful in the day-to-day work of a bioinformatician, like parsing Genbank files, translating RNA sequences, or constructing a table from a text file. Especially handy are the several templates that explain the general control flow . Suppose for example that you have a text file and that you need to collect all the lines that that meet both a preliminary test and a primary test. Then you just look up the template for <strong>filtered collect of roup of lines</strong> in the book:</p>\n\n<pre><code>lines = []\nwith open(inputfilename) as file:\n    for line in file:\n        if preliminary-test:\n            flag = preliminary-test(file)\n            lines.append(line)\nreturn lines\n</code></pre>\n\n<p>Subsequent chapters explore object-oriented programming using Classes, pattern matching using regular expressions, fetching pages from the web and displaying webpages, processing HTML and XML and working with relational databases. </p>\n\n<p>The last chapter introduces displaying data using graphical toolkits and as Scalable Vector Graphics. I have been enthusiastic about the last possibility ever since I read the great article <a href=\"http://flowingdata.com/2009/11/12/how-to-make-a-us-county-thematic-map-using-free-tools/\" rel=\"nofollow\">How to Make a US County Thematic Map Using Free Tools</a> on <a href=\"http://flowingdata.com/\" rel=\"nofollow\">FlowingData</a>. It hadn't occurred to me to use this technique in the context of bioinformatics. </p>\n\n<p>I do miss a section on the use of matplotlib or other graphical packages that are often used. Another glaring omission is any reference to BioPython. The auther <a href=\"http://www.mail-archive.com/python-list@python.org/msg273660.html\" rel=\"nofollow\">states in a mailing list message</a> that this is because there is no Python 3 version of BioPython. </p>\n\n<p>This book comes a decade after \"<a href=\"http://oreilly.com/catalog/9780596000806\" rel=\"nofollow\">Beginning Perl for Bioinformatics</a>\". Now that we have a good introductory level bioinformatics books in Python, I hope to see (Bio)Python gain strength in the bioinformatics community (a more in-depth description about the tension between Perl and Python can be read in the blog post <a href=\"http://igotgenes.blogspot.com/2008/08/not-biopythonista-i-thought-id-be.html\" rel=\"nofollow\">Not the Biopythonista I thought I'd be</a>)</p>", "html": "<p>The book assumes no prior programming experience, uses real-world examples with biological data, and uses Python 3 (the programming language's first non-backwards-compatible release).</p>\n\n<p>The first chapters are about primitive datatypes. At the end of each chapter there is a Tips, Traps and Trackbacks section where you can learn things that make your programming life easier, things that you have to watch out for and the meaning of some representative error messages that you might encounter.</p>\n\n<p>The next chapter covers control statements and has several extended examples that are useful in the day-to-day work of a bioinformatician, like parsing Genbank files, translating RNA sequences, or constructing a table from a text file. Especially handy are the several templates that explain the general control flow . Suppose for example that you have a text file and that you need to collect all the lines that that meet both a preliminary test and a primary test. Then you just look up the template for <strong>filtered collect of roup of lines</strong> in the book:</p>\n\n<pre><code>lines = []\nwith open(inputfilename) as file:\n    for line in file:\n        if preliminary-test:\n            flag = preliminary-test(file)\n            lines.append(line)\nreturn lines\n</code></pre>\n\n<p>Subsequent chapters explore object-oriented programming using Classes, pattern matching using regular expressions, fetching pages from the web and displaying webpages, processing HTML and XML and working with relational databases. </p>\n\n<p>The last chapter introduces displaying data using graphical toolkits and as Scalable Vector Graphics. I have been enthusiastic about the last possibility ever since I read the great article <a href=\"http://flowingdata.com/2009/11/12/how-to-make-a-us-county-thematic-map-using-free-tools/\" rel=\"nofollow\">How to Make a US County Thematic Map Using Free Tools</a> on <a href=\"http://flowingdata.com/\" rel=\"nofollow\">FlowingData</a>. It hadn't occurred to me to use this technique in the context of bioinformatics. </p>\n\n<p>I do miss a section on the use of matplotlib or other graphical packages that are often used. Another glaring omission is any reference to BioPython. The auther <a href=\"http://www.mail-archive.com/python-list@python.org/msg273660.html\" rel=\"nofollow\">states in a mailing list message</a> that this is because there is no Python 3 version of BioPython. </p>\n\n<p>This book comes a decade after \"<a href=\"http://oreilly.com/catalog/9780596000806\" rel=\"nofollow\">Beginning Perl for Bioinformatics</a>\". Now that we have a good introductory level bioinformatics books in Python, I hope to see (Bio)Python gain strength in the bioinformatics community (a more in-depth description about the tension between Perl and Python can be read in the blog post <a href=\"http://igotgenes.blogspot.com/2008/08/not-biopythonista-i-thought-id-be.html\" rel=\"nofollow\">Not the Biopythonista I thought I'd be</a>)</p>", "lastedit_user": 68}}, {"pk": 191, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 1, "views": 0, "author": 2, "creation_date": "2010-03-05 18:47:14", "content": "<p>I have partially read through this book. It is more software engineering oriented than bioinformatics. I have noticed many typos in the examples.</p>\n\n<p>I think that covering the new Python (3.0) language was a premature undertaking that hurts the value of this book. One must realize that Python 3 is less usable for a bioinformatician as currently few if any of the scientific libraries have been ported to it. Sadly that is not a shortcoming that we can hope to see resolved any time soon.</p>\n\n<p>It will probably be a decade (if ever!) that we can leave the Python 2 versions behind. </p>", "html": "<p>I have partially read through this book. It is more software engineering oriented than bioinformatics. I have noticed many typos in the examples.</p>\n\n<p>I think that covering the new Python (3.0) language was a premature undertaking that hurts the value of this book. One must realize that Python 3 is less usable for a bioinformatician as currently few if any of the scientific libraries have been ported to it. Sadly that is not a shortcoming that we can hope to see resolved any time soon.</p>\n\n<p>It will probably be a decade (if ever!) that we can leave the Python 2 versions behind. </p>", "lastedit_user": 2}}, {"pk": 192, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 3, "views": 0, "author": 73, "creation_date": "2010-03-05 19:24:00", "content": "<p>I think you are spot on with your observation. For some reason most of the recent bioinformatics books, particularly the expensive hardcover ones from CRC and Springer, are written by non-practitioners. By non-practitioners I mean professors who teach statistics, biological science or computer science, as opposed to software developers working in the field of bioinformatics. The result has read like a cross-section of stodgy textbooks and research articles, with little in the way of practical code or analysis strategy. Others, as you mention, are \"mildly bio-flavored\" introductions to a programming language. I love technical books but with a couple exceptions (Beginning Perl for Bioinformatics) I have never felt bioinformatics books were worth the money.</p>\n\n<p>I am looking forward to reading Bioinformatics Programming Using Python. I think it will be a good one.</p>\n\n<p>My reviews:</p>\n\n<ul>\n<li><a href=\"http://www.amazon.com/review/R391IS6TF2K3WW/ref=cm_cr_rdp_perm\" rel=\"nofollow\">Statistical Bioinformatics: with R</a></li>\n<li><a href=\"http://www.amazon.com/review/R19MANDXOUZY5R/ref=cm_cr_rdp_perm\" rel=\"nofollow\">A Primer of Genome Science, Third Edition</a>, </li>\n<li><a href=\"http://www.amazon.com/review/R19FZ31NTXE89O/ref=cm_cr_rdp_perm\" rel=\"nofollow\">R Programming for Bioinformatics</a></li>\n</ul>", "html": "<p>I think you are spot on with your observation. For some reason most of the recent bioinformatics books, particularly the expensive hardcover ones from CRC and Springer, are written by non-practitioners. By non-practitioners I mean professors who teach statistics, biological science or computer science, as opposed to software developers working in the field of bioinformatics. The result has read like a cross-section of stodgy textbooks and research articles, with little in the way of practical code or analysis strategy. Others, as you mention, are \"mildly bio-flavored\" introductions to a programming language. I love technical books but with a couple exceptions (Beginning Perl for Bioinformatics) I have never felt bioinformatics books were worth the money.</p>\n\n<p>I am looking forward to reading Bioinformatics Programming Using Python. I think it will be a good one.</p>\n\n<p>My reviews:</p>\n\n<ul>\n<li><a href=\"http://www.amazon.com/review/R391IS6TF2K3WW/ref=cm_cr_rdp_perm\" rel=\"nofollow\">Statistical Bioinformatics: with R</a></li>\n<li><a href=\"http://www.amazon.com/review/R19MANDXOUZY5R/ref=cm_cr_rdp_perm\" rel=\"nofollow\">A Primer of Genome Science, Third Edition</a>, </li>\n<li><a href=\"http://www.amazon.com/review/R19FZ31NTXE89O/ref=cm_cr_rdp_perm\" rel=\"nofollow\">R Programming for Bioinformatics</a></li>\n</ul>", "lastedit_user": 73}}, {"pk": 193, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 0, "author": 87, "creation_date": "2010-03-05 21:58:06", "content": "<p>In my Master's in Bioinformatics I used <a href=\"http://en.wikipedia.org/wiki/Red_Hat_Linux\" rel=\"nofollow\">RedHat</a> 7-8 and  first edition of <a href=\"http://en.wikipedia.org/wiki/Fedora_%28operating_system%29\" rel=\"nofollow\">Fedora</a>, then for the first two years of my PhD I continued with Fedora, then moved to <a href=\"http://en.wikipedia.org/wiki/Ubuntu_%28operating_system%29\" rel=\"nofollow\">Ubuntu</a> and For servers to host I used RHEL earlier and now CentOS and Ubuntu server edition. I strongly vote for Ubuntu distro for it's ease of use and strong community presence. </p>", "html": "<p>In my Master's in Bioinformatics I used <a href=\"http://en.wikipedia.org/wiki/Red_Hat_Linux\" rel=\"nofollow\">RedHat</a> 7-8 and  first edition of <a href=\"http://en.wikipedia.org/wiki/Fedora_%28operating_system%29\" rel=\"nofollow\">Fedora</a>, then for the first two years of my PhD I continued with Fedora, then moved to <a href=\"http://en.wikipedia.org/wiki/Ubuntu_%28operating_system%29\" rel=\"nofollow\">Ubuntu</a> and For servers to host I used RHEL earlier and now CentOS and Ubuntu server edition. I strongly vote for Ubuntu distro for it's ease of use and strong community presence. </p>", "lastedit_user": 87}}, {"pk": 194, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 3, "views": 0, "author": 55, "creation_date": "2010-03-05 22:02:46", "content": "<p>There are actually two questions in </p>\n\n<blockquote>\n  <p>related pathways/ diseases ?</p>\n</blockquote>\n\n<p>The first first part can be solved by database queries such as biomart and KEGG, but the second part is about complex studies. Actually, IMHO, a large part of the already known SNPs \nare not connected to disease, they might not even have a phenotype (I would bet >99%) . As far as I understand, the known SNPs are sampled from \"healthy\" individuals and represent a large mix. So it seems likely to assume that they are not easily connected to diseases.</p>\n\n<p>In short, the answer might be exome sequencing of affected individuals. I found this recent article which I think is really great to answer this question: </p>\n\n<p>Ng SB, et al.,\n<a href=\"http://www.ncbi.nlm.nih.gov/pubmed/19915526\" rel=\"nofollow\">Exome sequencing identifies the cause of a mendelian disorder.</a>\nNat Genet. 2010 Jan;42(1):30-5. Epub 2009 Nov 13.</p>\n\n<p>In short they discovered point mutations common in few affected individuals and subtracted synonymously coding SNPs and already known SNPs until they retained only one gene. </p>", "html": "<p>There are actually two questions in </p>\n\n<blockquote>\n  <p>related pathways/ diseases ?</p>\n</blockquote>\n\n<p>The first first part can be solved by database queries such as biomart and KEGG, but the second part is about complex studies. Actually, IMHO, a large part of the already known SNPs \nare not connected to disease, they might not even have a phenotype (I would bet >99%) . As far as I understand, the known SNPs are sampled from \"healthy\" individuals and represent a large mix. So it seems likely to assume that they are not easily connected to diseases.</p>\n\n<p>In short, the answer might be exome sequencing of affected individuals. I found this recent article which I think is really great to answer this question: </p>\n\n<p>Ng SB, et al.,\n<a href=\"http://www.ncbi.nlm.nih.gov/pubmed/19915526\" rel=\"nofollow\">Exome sequencing identifies the cause of a mendelian disorder.</a>\nNat Genet. 2010 Jan;42(1):30-5. Epub 2009 Nov 13.</p>\n\n<p>In short they discovered point mutations common in few affected individuals and subtracted synonymously coding SNPs and already known SNPs until they retained only one gene. </p>", "lastedit_user": 55}}, {"pk": 195, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 3, "views": 0, "author": 87, "creation_date": "2010-03-05 22:19:27", "content": "<p>I would like to recommend the following books to any one who is interested in Bioinformatics (Not in order): </p>\n\n<ol>\n<li><a href=\"http://rads.stackoverflow.com/amzn/click/1859960545\" rel=\"nofollow\">Genes, Proteins and Computers</a> : A concise introduction to the subject, mainly from a biological view point, yet provide a solid understanding of fundamental concepts in biology, computing, algorithm and statistics related to bioinformatics. Must read. </li>\n<li><a href=\"http://rads.stackoverflow.com/amzn/click/0879696087\" rel=\"nofollow\">Bioinformatics by David Mount</a> : A very detailed account of bioinformatics concepts. I think its high time to revise this book. I am looking forward for the next edition. You should have a copy of this if you are Masters' or PhD in Bioinformatics. </li>\n<li><a href=\"http://www.springer.com/life+sciences/bioinformatics/book/978-3-540-21142-6\" rel=\"nofollow\">Bioinformatics : Unix/Linux, Data Processing and Programming</a> : This is a cute little book that gives you an edge over Unix, linux, basic data processing and little bit of Perl programming. I appreciate this book for its handy examples. Highly recommend to those who are from biology and interest to get their hands on programming. </li>\n<li><a href=\"http://books.google.com/books?id=pxSM7R1sdeQC&amp;dq=Pierre+baldi+%2B+bioinformatics&amp;printsec=frontcover&amp;source=bn&amp;hl=en&amp;ei=IoGRS6uCIJT-NYLA8Z0N&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=4&amp;ved=0CBUQ6AEwAw#v=onepage&amp;q=&amp;f=false\" rel=\"nofollow\">Bioinformatics : Machine learning approaches</a> Machine learning is now an integral part of bioinformatics and bioinformatics is an emerging area for the application of machine learning techniques. For computer science students : here is the real dose of bioinformatics algorithms. One of the first authentic books on bioinformatics algorithms. </li>\n<li><a href=\"http://mitpress.mit.edu/catalog/item/default.asp?tid=10337&amp;ttype=2\" rel=\"nofollow\">An Introduction to Bioinformatics Algorithms</a> This one is my favorite, especially the pseudocode section and classification of algorithms and its concise description. Book features extensive content on the algorithms used in bioinforamtics categorized into different groups with interesting cartoons. A unique concept introduced in the book is profile of the authors. If you are really in to bioinformatics algorithms, this should be on your desk. </li>\n</ol>\n\n<p>PS. I have couple of more like <a href=\"http://rads.stackoverflow.com/amzn/click/0387987851\" rel=\"nofollow\">Computational Genome Analysis</a>, <a href=\"http://oreilly.com/catalog/9780596529321\" rel=\"nofollow\">Programming Collective Intelligence</a> etc. But they are more of specialized in to different sub-domains of bioinformatics. </p>", "html": "<p>I would like to recommend the following books to any one who is interested in Bioinformatics (Not in order): </p>\n\n<ol>\n<li><a href=\"http://rads.stackoverflow.com/amzn/click/1859960545\" rel=\"nofollow\">Genes, Proteins and Computers</a> : A concise introduction to the subject, mainly from a biological view point, yet provide a solid understanding of fundamental concepts in biology, computing, algorithm and statistics related to bioinformatics. Must read. </li>\n<li><a href=\"http://rads.stackoverflow.com/amzn/click/0879696087\" rel=\"nofollow\">Bioinformatics by David Mount</a> : A very detailed account of bioinformatics concepts. I think its high time to revise this book. I am looking forward for the next edition. You should have a copy of this if you are Masters' or PhD in Bioinformatics. </li>\n<li><a href=\"http://www.springer.com/life+sciences/bioinformatics/book/978-3-540-21142-6\" rel=\"nofollow\">Bioinformatics : Unix/Linux, Data Processing and Programming</a> : This is a cute little book that gives you an edge over Unix, linux, basic data processing and little bit of Perl programming. I appreciate this book for its handy examples. Highly recommend to those who are from biology and interest to get their hands on programming. </li>\n<li><a href=\"http://books.google.com/books?id=pxSM7R1sdeQC&amp;dq=Pierre+baldi+%2B+bioinformatics&amp;printsec=frontcover&amp;source=bn&amp;hl=en&amp;ei=IoGRS6uCIJT-NYLA8Z0N&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=4&amp;ved=0CBUQ6AEwAw#v=onepage&amp;q=&amp;f=false\" rel=\"nofollow\">Bioinformatics : Machine learning approaches</a> Machine learning is now an integral part of bioinformatics and bioinformatics is an emerging area for the application of machine learning techniques. For computer science students : here is the real dose of bioinformatics algorithms. One of the first authentic books on bioinformatics algorithms. </li>\n<li><a href=\"http://mitpress.mit.edu/catalog/item/default.asp?tid=10337&amp;ttype=2\" rel=\"nofollow\">An Introduction to Bioinformatics Algorithms</a> This one is my favorite, especially the pseudocode section and classification of algorithms and its concise description. Book features extensive content on the algorithms used in bioinforamtics categorized into different groups with interesting cartoons. A unique concept introduced in the book is profile of the authors. If you are really in to bioinformatics algorithms, this should be on your desk. </li>\n</ol>\n\n<p>PS. I have couple of more like <a href=\"http://rads.stackoverflow.com/amzn/click/0387987851\" rel=\"nofollow\">Computational Genome Analysis</a>, <a href=\"http://oreilly.com/catalog/9780596529321\" rel=\"nofollow\">Programming Collective Intelligence</a> etc. But they are more of specialized in to different sub-domains of bioinformatics. </p>", "lastedit_user": 87}}, {"pk": 196, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 0, "author": 87, "creation_date": "2010-03-05 22:29:25", "content": "<p>This depends on the program you use, I have calculated surface accessibility using <a href=\"http://bioinformatics.oxfordjournals.org/cgi/content/short/14/7/617\" rel=\"nofollow\">PSA from JOY package</a>. Another programs which I have seen frequently in literature is <a href=\"http://www.bioinf.manchester.ac.uk/naccess/\" rel=\"nofollow\">NACCESS</a>. </p>", "html": "<p>This depends on the program you use, I have calculated surface accessibility using <a href=\"http://bioinformatics.oxfordjournals.org/cgi/content/short/14/7/617\" rel=\"nofollow\">PSA from JOY package</a>. Another programs which I have seen frequently in literature is <a href=\"http://www.bioinf.manchester.ac.uk/naccess/\" rel=\"nofollow\">NACCESS</a>. </p>", "lastedit_user": 87}}, {"pk": 197, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 4, "views": 0, "author": 55, "creation_date": "2010-03-05 23:13:37", "content": "<p>I would recommend R/Bioconductor to do these kinds of analysis even though I personally doubt that this method is precise enough to separate the reads correctly. You can find the function\n<code>oligonucleotideFrequency</code> in the <code>Biostrings</code> package. The code for the first step would look somewhat like this: </p>\n\n<blockquote>\n  <p>library(Biostrings)</p>\n  \n  <p>reads = read.DNAStringSet(\"yourReads.fas\", format=\"fasta\")</p>\n  \n  <p>nf = oligonucleotideFrequency(reads[1:100], width=4)</p>\n  \n  <p>hclust(dist(nf)) # do hierarchical clustering of your tetra freq.</p>\n</blockquote>\n\n<p>That would be a very simple form of clustering. Then you have all the powerful<br>\nclassification algorithms built in R available, for example a support vector machine classifier. Create a training and test set of reads from 2 or more sequenced genomes and mix them. Then you will see if it is possible.</p>\n\n<p>But if you look at your frequencies it might look like this:</p>\n\n<pre><code>       TACG TACT TAGA TAGC TAGG TAGT TATA TATC TATG TATT TCAA TCAC TCAG TCAT TCCA TCCC TCCG TCCT\n  [1,]    0    0    0    0    0    0    0    0    1    0    0    1    2    0    0    4    0    0\n  [2,]    0    0    0    0    0    0    0    0    0    0    0    0    1    0    0    0    0    0\n  [3,]    0    0    0    1    1    1    0    0    0    1    0    0    0    0    0    1    0    0\n  [4,]    0    0    1    1    0    1    0    2    0    0    1    0    2    1    0    0    1    1\n  [5,]    0    1    0    \n</code></pre>\n\n<p>So, lots of 0 or 1. Maybe not enough to classify correctly. That's from some 454 reads as an example and it seems that one should try di- and tri- nucleotides as well.</p>\n\n<p>Alternative: blastx on the individual reads and discard only those with good best hit to a bacterium. A few wrong reads should do no big harm, so it is maybe good not to risk to filter out too many beforehand.</p>", "html": "<p>I would recommend R/Bioconductor to do these kinds of analysis even though I personally doubt that this method is precise enough to separate the reads correctly. You can find the function\n<code>oligonucleotideFrequency</code> in the <code>Biostrings</code> package. The code for the first step would look somewhat like this: </p>\n\n<blockquote>\n  <p>library(Biostrings)</p>\n\n  <p>reads = read.DNAStringSet(\"yourReads.fas\", format=\"fasta\")</p>\n\n  <p>nf = oligonucleotideFrequency(reads[1:100], width=4)</p>\n\n  <p>hclust(dist(nf)) # do hierarchical clustering of your tetra freq.</p>\n</blockquote>\n\n<p>That would be a very simple form of clustering. Then you have all the powerful<br>\nclassification algorithms built in R available, for example a support vector machine classifier. Create a training and test set of reads from 2 or more sequenced genomes and mix them. Then you will see if it is possible.</p>\n\n<p>But if you look at your frequencies it might look like this:</p>\n\n<pre><code>       TACG TACT TAGA TAGC TAGG TAGT TATA TATC TATG TATT TCAA TCAC TCAG TCAT TCCA TCCC TCCG TCCT\n  [1,]    0    0    0    0    0    0    0    0    1    0    0    1    2    0    0    4    0    0\n  [2,]    0    0    0    0    0    0    0    0    0    0    0    0    1    0    0    0    0    0\n  [3,]    0    0    0    1    1    1    0    0    0    1    0    0    0    0    0    1    0    0\n  [4,]    0    0    1    1    0    1    0    2    0    0    1    0    2    1    0    0    1    1\n  [5,]    0    1    0    \n</code></pre>\n\n<p>So, lots of 0 or 1. Maybe not enough to classify correctly. That's from some 454 reads as an example and it seems that one should try di- and tri- nucleotides as well.</p>\n\n<p>Alternative: blastx on the individual reads and discard only those with good best hit to a bacterium. A few wrong reads should do no big harm, so it is maybe good not to risk to filter out too many beforehand.</p>", "lastedit_user": 55}}, {"pk": 198, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 1, "views": 0, "author": 87, "creation_date": "2010-03-05 23:31:04", "content": "<p>If it is only one sequence you may try <a href=\"http://bioinf4.cs.ucl.ac.uk:3000/psipred/\" rel=\"nofollow\">PSIPRED</a> server. If you need to work on a large sequence dataset, better to install PSIPRED locally. <a href=\"http://www.ncbi.nlm.nih.gov/pubmed/10869041\" rel=\"nofollow\">PSIPRED</a> runs are typically computational intensive. </p>", "html": "<p>If it is only one sequence you may try <a href=\"http://bioinf4.cs.ucl.ac.uk:3000/psipred/\" rel=\"nofollow\">PSIPRED</a> server. If you need to work on a large sequence dataset, better to install PSIPRED locally. <a href=\"http://www.ncbi.nlm.nih.gov/pubmed/10869041\" rel=\"nofollow\">PSIPRED</a> runs are typically computational intensive. </p>", "lastedit_user": 87}}, {"pk": 199, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 0, "author": 47, "creation_date": "2010-03-05 23:38:05", "content": "<p>I'm not sure if I understand you correctly. If you are looking for a webservice that returns the PSIC scoring matrix, why don't you just follow the URL mentioned in the paper's abstract, i.e. <a href=\"http://strand.imb.ac.ru/PSIC/\" rel=\"nofollow\">http://strand.imb.ac.ru/PSIC/</a> which leads you to a html form where you can paste your mutliple alignment and returns the PSIC matrix.\nOr did I misunderstand you?</p>", "html": "<p>I'm not sure if I understand you correctly. If you are looking for a webservice that returns the PSIC scoring matrix, why don't you just follow the URL mentioned in the paper's abstract, i.e. <a href=\"http://strand.imb.ac.ru/PSIC/\" rel=\"nofollow\">http://strand.imb.ac.ru/PSIC/</a> which leads you to a html form where you can paste your mutliple alignment and returns the PSIC matrix.\nOr did I misunderstand you?</p>", "lastedit_user": 47}}, {"pk": 200, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 0, "author": 47, "creation_date": "2010-03-05 23:44:55", "content": "<p>You might also consider to blast against Swissprot and transfer residue annotations.</p>", "html": "<p>You might also consider to blast against Swissprot and transfer residue annotations.</p>", "lastedit_user": 47}}, {"pk": 201, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 109, "author": 90, "creation_date": "2010-03-06 07:43:23", "content": "<p>ENCODE soon provides DNase I hypersensitivity data for the whole genome in a multitude of different tissues. DNase I hypersensitivity marks genomic positions that are exposed and can hence be used to pinpoint active promoters or enhancers in the studied tissue. DNase I resistant regions, in contrast, mark genomic areas that are protected, e.g. because a transcription factor (TF) is bound. Since the data provides a base-pair resolution, it is possible to \"zoom\" in on the protected areas (== transcription factor binding sites) of the otherwise exposed regions (== enhancers). One can hence identify the shadow-prints on the genome left by the regulatory TFs in a given tissue. To identify which TFs are casting the shadows one could use ChIP-seq (rough binding regions) or Protein Binding Arrays (binding motif).</p>\n\n<p>The question is: has the <em>in-silico</em> prediction of enhancers, binding sites or partners still merit or will we be soon able to look-up the binding events of TFs in the different tissues? </p>", "html": "<p>ENCODE soon provides DNase I hypersensitivity data for the whole genome in a multitude of different tissues. DNase I hypersensitivity marks genomic positions that are exposed and can hence be used to pinpoint active promoters or enhancers in the studied tissue. DNase I resistant regions, in contrast, mark genomic areas that are protected, e.g. because a transcription factor (TF) is bound. Since the data provides a base-pair resolution, it is possible to \"zoom\" in on the protected areas (== transcription factor binding sites) of the otherwise exposed regions (== enhancers). One can hence identify the shadow-prints on the genome left by the regulatory TFs in a given tissue. To identify which TFs are casting the shadows one could use ChIP-seq (rough binding regions) or Protein Binding Arrays (binding motif).</p>\n\n<p>The question is: has the <em>in-silico</em> prediction of enhancers, binding sites or partners still merit or will we be soon able to look-up the binding events of TFs in the different tissues? </p>", "lastedit_user": 90}}, {"pk": 202, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 4, "views": 0, "author": 26, "creation_date": "2010-03-06 09:11:59", "content": "<p>As much as I agree with the impressive list from BioGeek, I have to say that it is a non-exhaustive, genomics centric list.</p>\n\n<p>If we look at the first statement he mentions: \"Bioinformatics is the field of science in which biology and computer science/information technology merge into a single discipline.\"</p>\n\n<p>From that statement I understand that anything \"biological\" studied using a \"computer\" should have its place in what we call \"Bioinformatics\".</p>\n\n<p>One perfect example would be all those people working on proteins and not DNA/RNA. I wouldn't say that those are the same field in Bioinformatics, however you may argue that they fit together... As an example of a \"Bioinformatics Center\" that focuses on proteins I would give: <a href=\"http://www.sbc.su.se/research/\" rel=\"nofollow\">Stockholm Bioinformatics Center</a></p>\n\n<p>Another example would be those people trying to understand how molecules diffuse within the cell cytoplasm. That is a lot of computer work that's directly looking at understanding a phenomenon in a biological context. This type of project is bordering on many disciplines and not just biology and informatics, but also physics. Nevertheless, shouldn't that be a \"bioinformatics\" discipline too? In this category I would give the <a href=\"http://www.biomatter.ethz.ch/Biomatter/Welcome.html\" rel=\"nofollow\">Biomatter @ MOSAIC ETH Zurich</a></p>\n\n<p>What about Systems Biology (even if they don't want to be called bioinformaticians), shouldn't they be called bioinformaticians too?</p>\n\n<p>And finally (although far from exhaustive) I'll give one last example of something I consider bioinformatics: the <a href=\"http://www.e-cell.org/ecell/\" rel=\"nofollow\">E-Cell Project</a> </p>\n\n<p>I hope this answers your question! In my opinion, bioinformatics is NOT only \"genome stuff\" and I would extend it to yourself too ;)</p>", "html": "<p>As much as I agree with the impressive list from BioGeek, I have to say that it is a non-exhaustive, genomics centric list.</p>\n\n<p>If we look at the first statement he mentions: \"Bioinformatics is the field of science in which biology and computer science/information technology merge into a single discipline.\"</p>\n\n<p>From that statement I understand that anything \"biological\" studied using a \"computer\" should have its place in what we call \"Bioinformatics\".</p>\n\n<p>One perfect example would be all those people working on proteins and not DNA/RNA. I wouldn't say that those are the same field in Bioinformatics, however you may argue that they fit together... As an example of a \"Bioinformatics Center\" that focuses on proteins I would give: <a href=\"http://www.sbc.su.se/research/\" rel=\"nofollow\">Stockholm Bioinformatics Center</a></p>\n\n<p>Another example would be those people trying to understand how molecules diffuse within the cell cytoplasm. That is a lot of computer work that's directly looking at understanding a phenomenon in a biological context. This type of project is bordering on many disciplines and not just biology and informatics, but also physics. Nevertheless, shouldn't that be a \"bioinformatics\" discipline too? In this category I would give the <a href=\"http://www.biomatter.ethz.ch/Biomatter/Welcome.html\" rel=\"nofollow\">Biomatter @ MOSAIC ETH Zurich</a></p>\n\n<p>What about Systems Biology (even if they don't want to be called bioinformaticians), shouldn't they be called bioinformaticians too?</p>\n\n<p>And finally (although far from exhaustive) I'll give one last example of something I consider bioinformatics: the <a href=\"http://www.e-cell.org/ecell/\" rel=\"nofollow\">E-Cell Project</a> </p>\n\n<p>I hope this answers your question! In my opinion, bioinformatics is NOT only \"genome stuff\" and I would extend it to yourself too ;)</p>", "lastedit_user": 26}}, {"pk": 203, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 2, "views": 0, "author": 68, "creation_date": "2010-03-06 11:04:51", "content": "<p>The J. Craig Venter Institute has released the <a href=\"http://www.jcvi.org/cms/research/projects/jcvi-cloud-biolinux/overview/\" rel=\"nofollow\">JCVI Cloud BioLinux image</a>, which <em>\"enables scientists to quickly provision computation infrastructures supporting bioinformatics using cloud computing platforms such as Amazon EC2 and Eucalyptus.   Upon deployment users will have instant access to a host of software including BLAST, glimmer, hmmer, phylip, rasmol, genespring, clustalw, the Celera Assembler, and the EMBOSS collection of utilities.  JCVI Cloud BioLinux is built on a 64-bit instance of Ubuntu virtual server customized with bioinformatics packages from the BioLinux repository, and will be updated periodically.\"</em></p>\n\n<p>They give as their motivation for releasing this image <em>\"cloud computing can provide researchers with the ability to perform computations using a practically unlimited pool of virtual machines, without facing the burden of owning or maintaining any hardware infrastructure. (...) This Science as a Service model (ScaaS) will allow JCVI to incorporate, develop and optimize life science software as well as supporting data sets on compute clouds.  This project is driven by the observation that commonly-used bioinformatics tools are hard to build and maintain, require high amounts of resources, or just too numerous to choose from.\"</em></p>", "html": "<p>The J. Craig Venter Institute has released the <a href=\"http://www.jcvi.org/cms/research/projects/jcvi-cloud-biolinux/overview/\" rel=\"nofollow\">JCVI Cloud BioLinux image</a>, which <em>\"enables scientists to quickly provision computation infrastructures supporting bioinformatics using cloud computing platforms such as Amazon EC2 and Eucalyptus.   Upon deployment users will have instant access to a host of software including BLAST, glimmer, hmmer, phylip, rasmol, genespring, clustalw, the Celera Assembler, and the EMBOSS collection of utilities.  JCVI Cloud BioLinux is built on a 64-bit instance of Ubuntu virtual server customized with bioinformatics packages from the BioLinux repository, and will be updated periodically.\"</em></p>\n\n<p>They give as their motivation for releasing this image <em>\"cloud computing can provide researchers with the ability to perform computations using a practically unlimited pool of virtual machines, without facing the burden of owning or maintaining any hardware infrastructure. (...) This Science as a Service model (ScaaS) will allow JCVI to incorporate, develop and optimize life science software as well as supporting data sets on compute clouds.  This project is driven by the observation that commonly-used bioinformatics tools are hard to build and maintain, require high amounts of resources, or just too numerous to choose from.\"</em></p>", "lastedit_user": 68}}, {"pk": 204, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 3, "views": 0, "author": 2, "creation_date": "2010-03-06 12:48:41", "content": "<p>I wouldn't venture to hypothesize on what will happen; <em>making predictions is difficult, especially about the future</em>.</p>\n\n<p>What seems prudent to assume however is that there may be several reasons of why genomic regions are accessible or protected. For example: is it a transcription factor that protects the region or is there some other reason of why the TF will bind to that location to begin with. For example chromatin structure and nucleosome positioning may favor or disfavor certain events.</p>\n\n<p>Any <em>in-silico</em> modeling will need to take into account the various mechanisms that may take place.</p>", "html": "<p>I wouldn't venture to hypothesize on what will happen; <em>making predictions is difficult, especially about the future</em>.</p>\n\n<p>What seems prudent to assume however is that there may be several reasons of why genomic regions are accessible or protected. For example: is it a transcription factor that protects the region or is there some other reason of why the TF will bind to that location to begin with. For example chromatin structure and nucleosome positioning may favor or disfavor certain events.</p>\n\n<p>Any <em>in-silico</em> modeling will need to take into account the various mechanisms that may take place.</p>", "lastedit_user": 2}}, {"pk": 205, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 63, "author": 2, "creation_date": "2010-03-06 13:46:31", "content": "<p>What options do I have for contacting the individuals responsible for the proper functioning of this site? </p>\n\n<p>How do I suggest improvements, recommend features or report a problem using this site?</p>", "html": "<p>What options do I have for contacting the individuals responsible for the proper functioning of this site? </p>\n\n<p>How do I suggest improvements, recommend features or report a problem using this site?</p>", "lastedit_user": 2}}, {"pk": 206, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 1, "views": 0, "author": 2, "creation_date": "2010-03-06 13:54:52", "content": "<p>The <strong>BioStar</strong> site will be primarily moderated and regulated by the users who have high reputation. </p>\n\n<p>We have also created a Google group called <a href=\"http://groups.google.com/group/biostar-central/\" rel=\"nofollow\"><strong>Biostar-Central</strong></a> that is intended to be used for administrative purposes. Use this group to suggest improvements, provide feedback or report problems that otherwise would not be appropriate to ask on the main site.</p>\n\n<p>Occasional <strong>BioStar</strong> related announcements will be made public via this group.</p>\n\n<p>Thank you,</p>\n\n<p><a href=\"http://www.personal.psu.edu/iua1/\" rel=\"nofollow\">Istvan Albert</a></p>\n\n<p>PS. First posts by new users to this group will be held for moderation. </p>", "html": "<p>The <strong>BioStar</strong> site will be primarily moderated and regulated by the users who have high reputation. </p>\n\n<p>We have also created a Google group called <a href=\"http://groups.google.com/group/biostar-central/\" rel=\"nofollow\"><strong>Biostar-Central</strong></a> that is intended to be used for administrative purposes. Use this group to suggest improvements, provide feedback or report problems that otherwise would not be appropriate to ask on the main site.</p>\n\n<p>Occasional <strong>BioStar</strong> related announcements will be made public via this group.</p>\n\n<p>Thank you,</p>\n\n<p><a href=\"http://www.personal.psu.edu/iua1/\" rel=\"nofollow\">Istvan Albert</a></p>\n\n<p>PS. First posts by new users to this group will be held for moderation. </p>", "lastedit_user": 2}}, {"pk": 207, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 2, "views": 0, "author": 91, "creation_date": "2010-03-06 14:58:53", "content": "<p>I know of two quality filtering methods for SOLiD reads, besides the already suggested SAET:</p>\n\n<ul>\n<li><p><a href=\"http://hts.rutgers.edu/filter/\" rel=\"nofollow\">A set of tools</a> from <a href=\"http://bioinformatics.oxfordjournals.org/cgi/content/short/26/6/849?rss=1\" rel=\"nofollow\">a recent publication</a></p></li>\n<li><p>The csfasta_quality_filter.pl script from ABI's <a href=\"http://solidsoftwaretools.com/gf/project/denovo/frs/\" rel=\"nofollow\">de novo accessory tools package</a></p></li>\n</ul>\n\n<p>Haven't actually tried any of them yet, but will do so pretty soon.</p>", "html": "<p>I know of two quality filtering methods for SOLiD reads, besides the already suggested SAET:</p>\n\n<ul>\n<li><p><a href=\"http://hts.rutgers.edu/filter/\" rel=\"nofollow\">A set of tools</a> from <a href=\"http://bioinformatics.oxfordjournals.org/cgi/content/short/26/6/849?rss=1\" rel=\"nofollow\">a recent publication</a></p></li>\n<li><p>The csfasta_quality_filter.pl script from ABI's <a href=\"http://solidsoftwaretools.com/gf/project/denovo/frs/\" rel=\"nofollow\">de novo accessory tools package</a></p></li>\n</ul>\n\n<p>Haven't actually tried any of them yet, but will do so pretty soon.</p>", "lastedit_user": 91}}, {"pk": 208, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 4, "views": 0, "author": 91, "creation_date": "2010-03-06 15:18:14", "content": "<p>First of all, you should not convert to base sequence first and then map - you should do the mapping directly on the color-space reads. The short-read mapper will (typically) report the genome matches for you in base sequence format. There are several short read mappers / aligners that handle color space alignment: Bowtie, BFAST, BWA, SHRiMP, PerM and many others including ABI's own mapreads and Bioscope. You can get the mapping output in SAM format, a handy format which contains a lot of information about the alignments and which you can manipulate in Galaxy (via the NGS: SAM tools menu) to get the \"pileup\" of reads in certain regions and so on.  </p>\n\n<p>Edit: I just noticed that Galaxy now features Bowtie mapping for color space.</p>", "html": "<p>First of all, you should not convert to base sequence first and then map - you should do the mapping directly on the color-space reads. The short-read mapper will (typically) report the genome matches for you in base sequence format. There are several short read mappers / aligners that handle color space alignment: Bowtie, BFAST, BWA, SHRiMP, PerM and many others including ABI's own mapreads and Bioscope. You can get the mapping output in SAM format, a handy format which contains a lot of information about the alignments and which you can manipulate in Galaxy (via the NGS: SAM tools menu) to get the \"pileup\" of reads in certain regions and so on.  </p>\n\n<p>Edit: I just noticed that Galaxy now features Bowtie mapping for color space.</p>", "lastedit_user": 91}}, {"pk": 209, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 0, "author": 30, "creation_date": "2010-03-06 15:42:42", "content": "<p>I hope I understand your question: The UCSC genome database contains the position in both <strong>base index</strong> and <strong>cM</strong> for the STS. e.g.:</p>\n\n<pre><code>~&gt; mysql --user=genome --host=genome-mysql.cse.ucsc.edu -A -D hg18 -e 'select name,chrom,chromStart,chromEnd,genethonPos from stsMap where genethonPos!=0 limit 2\\G'\n*************************** 1. row ***************************\n       name: AFM280WE5\n      chrom: chr1\n chromStart: 3574721\n   chromEnd: 3575045\ngenethonPos: 6.2\n*************************** 2. row ***************************\n       name: AFM344WE9\n      chrom: chr1\n chromStart: 4358261\n   chromEnd: 4358654\ngenethonPos: 11.1\n</code></pre>\n\n<p>So you can use this STS map as a 'reference' to map your collection of SNP from <strong>bp</strong> to <strong>cM</strong>.</p>", "html": "<p>I hope I understand your question: The UCSC genome database contains the position in both <strong>base index</strong> and <strong>cM</strong> for the STS. e.g.:</p>\n\n<pre><code>~&gt; mysql --user=genome --host=genome-mysql.cse.ucsc.edu -A -D hg18 -e 'select name,chrom,chromStart,chromEnd,genethonPos from stsMap where genethonPos!=0 limit 2\\G'\n*************************** 1. row ***************************\n       name: AFM280WE5\n      chrom: chr1\n chromStart: 3574721\n   chromEnd: 3575045\ngenethonPos: 6.2\n*************************** 2. row ***************************\n       name: AFM344WE9\n      chrom: chr1\n chromStart: 4358261\n   chromEnd: 4358654\ngenethonPos: 11.1\n</code></pre>\n\n<p>So you can use this STS map as a 'reference' to map your collection of SNP from <strong>bp</strong> to <strong>cM</strong>.</p>", "lastedit_user": 30}}, {"pk": 210, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 3, "views": 0, "author": 92, "creation_date": "2010-03-06 16:42:34", "content": "<p><a href=\"http://www.biomedcentral.com/1471-2105/11/5\" rel=\"nofollow\">BridgeDB</a> provides a nice API and REST interface, so you can put ID mapping queries in your scripts.</p>", "html": "<p><a href=\"http://www.biomedcentral.com/1471-2105/11/5\" rel=\"nofollow\">BridgeDB</a> provides a nice API and REST interface, so you can put ID mapping queries in your scripts.</p>", "lastedit_user": 92}}, {"pk": 211, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 2, "views": 0, "author": 94, "creation_date": "2010-03-06 17:26:09", "content": "<p>If you do have the protein structure (PDB file) <a href=\"http://webclu.bio.wzw.tum.de/cgi-bin/stride/stridecgi.py\" rel=\"nofollow\" title=\"Stride\">link text</a> is also a good option for assigning the secondary structure.</p>", "html": "<p>If you do have the protein structure (PDB file) <a href=\"http://webclu.bio.wzw.tum.de/cgi-bin/stride/stridecgi.py\" rel=\"nofollow\" title=\"Stride\">link text</a> is also a good option for assigning the secondary structure.</p>", "lastedit_user": 94}}, {"pk": 212, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 0, "author": 94, "creation_date": "2010-03-06 17:36:39", "content": "<p><a href=\"http://www.netasa.org/asaview/\" rel=\"nofollow\" title=\"ASA-view\">ASA-view</a> is a server that can help you visualize the burial of each amino acid in your protein</p>", "html": "<p><a href=\"http://www.netasa.org/asaview/\" rel=\"nofollow\" title=\"ASA-view\">ASA-view</a> is a server that can help you visualize the burial of each amino acid in your protein</p>", "lastedit_user": 94}}, {"pk": 213, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 1, "views": 0, "author": 97, "creation_date": "2010-03-06 18:14:16", "content": "<p>Our <a href=\"http://noble.gs.washington.edu/proj/genomedata/\" rel=\"nofollow\">Genomedata</a> system stores multiple tracks of 1-bp resolution genomic data in a HDF5 array. Documentation and full source code is available on that page. It has a Python (PyTables) interface for reading the data. For originally loading it into HDF5, we wrote a C loader for added speed.</p>", "html": "<p>Our <a href=\"http://noble.gs.washington.edu/proj/genomedata/\" rel=\"nofollow\">Genomedata</a> system stores multiple tracks of 1-bp resolution genomic data in a HDF5 array. Documentation and full source code is available on that page. It has a Python (PyTables) interface for reading the data. For originally loading it into HDF5, we wrote a C loader for added speed.</p>", "lastedit_user": 97}}, {"pk": 214, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 2, "views": 0, "author": 98, "creation_date": "2010-03-06 18:20:20", "content": "<p>I have a Mac Pro dual quad core that I use for everything. I use the Mac OS for day to day email, most graphics, browsing, I run a VMWare virtual Windows machine, and I do most analysis in the unix terminal. Windows runs much better on the Mac hardware, Excel is much faster in Window, and I can fileshare between the Windows and Mac systems. So far this has been sufficient for me. If I run into a situation where I need more computing power, I can ssh to a Linux server, but I haven't needed to yet. I configured the machine with 16 GB RAM, leaving slots open to add another 16 if needed. I've been happy with this.</p>", "html": "<p>I have a Mac Pro dual quad core that I use for everything. I use the Mac OS for day to day email, most graphics, browsing, I run a VMWare virtual Windows machine, and I do most analysis in the unix terminal. Windows runs much better on the Mac hardware, Excel is much faster in Window, and I can fileshare between the Windows and Mac systems. So far this has been sufficient for me. If I run into a situation where I need more computing power, I can ssh to a Linux server, but I haven't needed to yet. I configured the machine with 16 GB RAM, leaving slots open to add another 16 if needed. I've been happy with this.</p>", "lastedit_user": 98}}, {"pk": 215, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 1, "views": 109, "author": 99, "creation_date": "2010-03-06 18:22:30", "content": "<p>Hi,</p>\n\n<p>Does anybody know of any tool that will produce an unambiguous assembly of next-gen fastq files and give the assembled output back as fastq with consensus/combined scores?</p>\n\n<p>By unambiguous I mean something like this in abyss:</p>\n\n<p>ABYSS -k$k -b0 -t0 -e0 -c0</p>\n\n<p>Cheers,</p>\n\n<p>Albert. </p>", "html": "<p>Hi,</p>\n\n<p>Does anybody know of any tool that will produce an unambiguous assembly of next-gen fastq files and give the assembled output back as fastq with consensus/combined scores?</p>\n\n<p>By unambiguous I mean something like this in abyss:</p>\n\n<p>ABYSS -k$k -b0 -t0 -e0 -c0</p>\n\n<p>Cheers,</p>\n\n<p>Albert. </p>", "lastedit_user": 99}}, {"pk": 216, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 2, "views": 0, "author": 72, "creation_date": "2010-03-06 18:33:14", "content": "<p>Highly subjective answer of course, but I don't think you can go wrong with Linux at the backend.  In general, you will find a vast variety of software, great community support, better work/$ numbers at scale.  I tend to prefer debian-based distro's (Ubuntu, Debian, etc) but that's a personal choice.  On the front end, I've successfully used IRIX (dating myself), Ubuntu, and OSX.</p>", "html": "<p>Highly subjective answer of course, but I don't think you can go wrong with Linux at the backend.  In general, you will find a vast variety of software, great community support, better work/$ numbers at scale.  I tend to prefer debian-based distro's (Ubuntu, Debian, etc) but that's a personal choice.  On the front end, I've successfully used IRIX (dating myself), Ubuntu, and OSX.</p>", "lastedit_user": 72}}, {"pk": 217, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 2, "views": 0, "author": 100, "creation_date": "2010-03-06 19:03:07", "content": "<p>yeah, the better answer is not to use surface area to calculate depth. use depth.\n<a href=\"http://dx.doi.org/10.1016/j.tibs.2003.09.004\" rel=\"nofollow\">http://dx.doi.org/10.1016/j.tibs.2003.09.004</a></p>", "html": "<p>yeah, the better answer is not to use surface area to calculate depth. use depth.\n<a href=\"http://dx.doi.org/10.1016/j.tibs.2003.09.004\" rel=\"nofollow\">http://dx.doi.org/10.1016/j.tibs.2003.09.004</a></p>", "lastedit_user": 100}}, {"pk": 218, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 2, "views": 0, "author": 92, "creation_date": "2010-03-06 20:38:38", "content": "<p>Most of my work is in python, so I use <a href=\"http://www.blueskyonmars.com/projects/paver/\" rel=\"nofollow\">paver</a>, which is similar to makefiles or rake for ruby, but gives you access to all python libraries.</p>", "html": "<p>Most of my work is in python, so I use <a href=\"http://www.blueskyonmars.com/projects/paver/\" rel=\"nofollow\">paver</a>, which is similar to makefiles or rake for ruby, but gives you access to all python libraries.</p>", "lastedit_user": 92}}, {"pk": 219, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 4, "views": 0, "author": 51, "creation_date": "2010-03-06 23:19:21", "content": "<p>I don't work on prediction of transcription factor binding or enhancers so I will just give a very general answer that could apply to any sort of prediction. </p>\n\n<p>I think there is a big difference between observing an event (ex. transcription factor binding to region X) and knowing why you observe it. To put it in another way .. if we can solve protein structures should we still try to predict how a protein might fold ? Prediction  tries to encapsulates our knowledge of the system so I think the answer is that we will never stop trying to predict/model a system even if we can just easily measure it. Until we can model it we don't really know how it works. If you are only interested in knowing where a TF might bind to then the observations are enough but if you want to know <strong>why</strong> a protein with those characteristics is binding to that DNA region then the observations are just the starting point. </p>", "html": "<p>I don't work on prediction of transcription factor binding or enhancers so I will just give a very general answer that could apply to any sort of prediction. </p>\n\n<p>I think there is a big difference between observing an event (ex. transcription factor binding to region X) and knowing why you observe it. To put it in another way .. if we can solve protein structures should we still try to predict how a protein might fold ? Prediction  tries to encapsulates our knowledge of the system so I think the answer is that we will never stop trying to predict/model a system even if we can just easily measure it. Until we can model it we don't really know how it works. If you are only interested in knowing where a TF might bind to then the observations are enough but if you want to know <strong>why</strong> a protein with those characteristics is binding to that DNA region then the observations are just the starting point. </p>", "lastedit_user": 51}}, {"pk": 220, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 3, "views": 0, "author": 36, "creation_date": "2010-03-07 03:26:37", "content": "<p>I have done some with <a href=\"http://wwwfgu.anat.ox.ac.uk/~lg/oss/ruffus/\" rel=\"nofollow\">ruffus</a> but have reverted back to using make files.\nRuffus is a nice idea and implemented very nicely, but often, in a pipeline, I just want to overwrite files--since I'm exploring and making lots of changes and mistakes. With rufus, I found I was spending a lot of time tracking down which files had/had not changed. For some reason, it's easier for me to deal with a Makefile, with or without using dependencies. YMMV. I just order the make with steps that come first at the top and add stuff to the bottom as I extend the pipeline. This is very simple, but works well for now. I'm interested to see what other responses are added here. </p>\n\n<p>As others have mentioned, a README.txt and documentation at the top of the script are a good idea. Also, for any script that takes more than 2 arguments, use a getopt equivalent e.g. <a href=\"http://docs.python.org/library/optparse.html\" rel=\"nofollow\">optparse</a> in python).</p>\n\n<p>Finally, extract as much code as possible into tested/test-able libraries.</p>", "html": "<p>I have done some with <a href=\"http://wwwfgu.anat.ox.ac.uk/~lg/oss/ruffus/\" rel=\"nofollow\">ruffus</a> but have reverted back to using make files.\nRuffus is a nice idea and implemented very nicely, but often, in a pipeline, I just want to overwrite files--since I'm exploring and making lots of changes and mistakes. With rufus, I found I was spending a lot of time tracking down which files had/had not changed. For some reason, it's easier for me to deal with a Makefile, with or without using dependencies. YMMV. I just order the make with steps that come first at the top and add stuff to the bottom as I extend the pipeline. This is very simple, but works well for now. I'm interested to see what other responses are added here. </p>\n\n<p>As others have mentioned, a README.txt and documentation at the top of the script are a good idea. Also, for any script that takes more than 2 arguments, use a getopt equivalent e.g. <a href=\"http://docs.python.org/library/optparse.html\" rel=\"nofollow\">optparse</a> in python).</p>\n\n<p>Finally, extract as much code as possible into tested/test-able libraries.</p>", "lastedit_user": 36}}, {"pk": 221, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 4, "views": 0, "author": 27, "creation_date": "2010-03-07 05:26:39", "content": "<p>We map the reads from the illumina and SoLid platform by using BWA. <a href=\"http://bio-bwa.sourceforge.net/\" rel=\"nofollow\">http://bio-bwa.sourceforge.net/</a></p>\n\n<p>For bacterial genomes, we choses the illumina platform. About 50X coverage of the total reads was obtained against the ~4Mb reference genome. The mapping process took about 1 hour by using 7 cpus.</p>\n\n<p>For eukaryotic genomes, we choses the SoLid platform. About 25x coverage of the total reads were obtained against the ~500Mb reference genome. The mapping process took about 2 days by using 7 cpus.</p>\n\n<p>Generally reads mapping by using BWA is reliable. </p>", "html": "<p>We map the reads from the illumina and SoLid platform by using BWA. <a href=\"http://bio-bwa.sourceforge.net/\" rel=\"nofollow\">http://bio-bwa.sourceforge.net/</a></p>\n\n<p>For bacterial genomes, we choses the illumina platform. About 50X coverage of the total reads was obtained against the ~4Mb reference genome. The mapping process took about 1 hour by using 7 cpus.</p>\n\n<p>For eukaryotic genomes, we choses the SoLid platform. About 25x coverage of the total reads were obtained against the ~500Mb reference genome. The mapping process took about 2 days by using 7 cpus.</p>\n\n<p>Generally reads mapping by using BWA is reliable. </p>", "lastedit_user": 27}}, {"pk": 222, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 4, "views": 220, "author": 105, "creation_date": "2010-03-07 12:53:55", "content": "<p>Dumb question I know, but...</p>\n\n<p>What tool to use?</p>\n\n<p>I'd like to find forward and reverse primers within an approximate distance of each other... I'd like to accept 1 or two mismatches. The genome is ~1 Gbp. I have ~500 forward reverse pairs to find in the genome.</p>\n\n<p>Any hints appreciated :-)</p>", "html": "<p>Dumb question I know, but...</p>\n\n<p>What tool to use?</p>\n\n<p>I'd like to find forward and reverse primers within an approximate distance of each other... I'd like to accept 1 or two mismatches. The genome is ~1 Gbp. I have ~500 forward reverse pairs to find in the genome.</p>\n\n<p>Any hints appreciated :-)</p>", "lastedit_user": 105}}, {"pk": 223, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 3, "views": 0, "author": 55, "creation_date": "2010-03-07 13:24:06", "content": "<p>I know that many people use the <a href=\"http://primer3.sourceforge.net/\" rel=\"nofollow\">primer3 software</a> to design primers. There are also two web-interfaces where you can try out the parameters, and there are many of them.\nThe program <strong><a href=\"http://emboss.sourceforge.net/apps/release/6.2/emboss/apps/eprimer3.html\" rel=\"nofollow\">eprimer3</a></strong> is part of the <a href=\"http://emboss.sourceforge.net/\" rel=\"nofollow\">EMBOSS tools</a>, maybe the best way of getting a command-line executable of primer3.</p>\n\n<p>I didn't see a mismatch parameter though, because for a 'real' PCR-primer to allow for mismatches is a bad idea. I noted the '' in your question, so you might not really be looking for primers. So what is it then? If this is just a piece of sequence then you do not need to bother with uniqueness or melting temperature constraints.</p>", "html": "<p>I know that many people use the <a href=\"http://primer3.sourceforge.net/\" rel=\"nofollow\">primer3 software</a> to design primers. There are also two web-interfaces where you can try out the parameters, and there are many of them.\nThe program <strong><a href=\"http://emboss.sourceforge.net/apps/release/6.2/emboss/apps/eprimer3.html\" rel=\"nofollow\">eprimer3</a></strong> is part of the <a href=\"http://emboss.sourceforge.net/\" rel=\"nofollow\">EMBOSS tools</a>, maybe the best way of getting a command-line executable of primer3.</p>\n\n<p>I didn't see a mismatch parameter though, because for a 'real' PCR-primer to allow for mismatches is a bad idea. I noted the '' in your question, so you might not really be looking for primers. So what is it then? If this is just a piece of sequence then you do not need to bother with uniqueness or melting temperature constraints.</p>", "lastedit_user": 55}}, {"pk": 224, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 2, "views": 0, "author": 36, "creation_date": "2010-03-07 15:20:02", "content": "<p>I've only used <a href=\"http://bowtie-bio.sourceforge.net/index.shtml\" rel=\"nofollow\">bowtie</a>, but it seems to be extremely fast and makes use of multiple cores with no extra work on my part. Also, builds an index for the reference sequence which can be re-used after the first build. </p>\n\n<p>This is mapping to Arabidopsis Thaliana, up to 5 or so Gigs of raw reads, so fastq of 4x that size. Using a pretty standard 8 core machine, it's relatively painless.</p>", "html": "<p>I've only used <a href=\"http://bowtie-bio.sourceforge.net/index.shtml\" rel=\"nofollow\">bowtie</a>, but it seems to be extremely fast and makes use of multiple cores with no extra work on my part. Also, builds an index for the reference sequence which can be re-used after the first build. </p>\n\n<p>This is mapping to Arabidopsis Thaliana, up to 5 or so Gigs of raw reads, so fastq of 4x that size. Using a pretty standard 8 core machine, it's relatively painless.</p>", "lastedit_user": 36}}, {"pk": 225, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:03", "score": 2, "views": 0, "author": 36, "creation_date": "2010-03-07 16:22:36", "content": "<p>[EDIT]\nJust saw <a href=\"http://www.biomedcentral.com/1471-2105/11/143\" rel=\"nofollow\">this</a> today (http://www.biomedcentral.com/1471-2105/11/143) which could be another piece of software to check out. I didnt read it carefully, but it looks like it builds on primer3.\n[/EDIT]</p>\n\n<p>Since you have so few pairs, you could just run them through a read-aligner allowing mismatches, and find pairs that are aligned within X basepairs in the reference genome. \nActually, you could probably even use the paired-end feature of most aligners so that the aligner only find the pairs with nearby matches. For either of those methods, you could use <a href=\"http://bowtie-bio.sourceforge.net/index.shtml\" rel=\"nofollow\">bowtie</a>.</p>\n\n<p>As far as I know, <a href=\"http://primer3.sourceforge.net/\" rel=\"nofollow\">primer3</a> does allow gaps and mismatches, so that may also be an option if you just want to see if you have good primers, but you'd probably have to use the command-line version.</p>\n\n<p>or, you could use BLAST and find nearby hits between the pairs.</p>", "html": "<p>[EDIT]\nJust saw <a href=\"http://www.biomedcentral.com/1471-2105/11/143\" rel=\"nofollow\">this</a> today (http://www.biomedcentral.com/1471-2105/11/143) which could be another piece of software to check out. I didnt read it carefully, but it looks like it builds on primer3.\n[/EDIT]</p>\n\n<p>Since you have so few pairs, you could just run them through a read-aligner allowing mismatches, and find pairs that are aligned within X basepairs in the reference genome. \nActually, you could probably even use the paired-end feature of most aligners so that the aligner only find the pairs with nearby matches. For either of those methods, you could use <a href=\"http://bowtie-bio.sourceforge.net/index.shtml\" rel=\"nofollow\">bowtie</a>.</p>\n\n<p>As far as I know, <a href=\"http://primer3.sourceforge.net/\" rel=\"nofollow\">primer3</a> does allow gaps and mismatches, so that may also be an option if you just want to see if you have good primers, but you'd probably have to use the command-line version.</p>\n\n<p>or, you could use BLAST and find nearby hits between the pairs.</p>", "lastedit_user": 36}}, {"pk": 226, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 2, "views": 0, "author": 26, "creation_date": "2010-03-07 19:22:29", "content": "<p>I agree with Istvan and pedrobeltrao.</p>\n\n<p>I would just add that we should all be careful when we look at the type of experiments that you describe as well as protein structures and many other biochemical experiments.</p>\n\n<p>They are, most often, <strong><em>snapshots</em></strong> of what is happening in an <strong><em>extremely dynamic</em></strong> environment, which is the cell and its components.</p>\n\n<p>What holds true at one moment (when the cell was fixed, the proteins extracted or crystalized) is not the whole picture of what's happening or how things look.</p>\n\n<p>I think you'll need more than a few biochemical experiments to <strong><em>know</em></strong> how the cell really works. Until that day, predictions and modeling will always be useful.</p>", "html": "<p>I agree with Istvan and pedrobeltrao.</p>\n\n<p>I would just add that we should all be careful when we look at the type of experiments that you describe as well as protein structures and many other biochemical experiments.</p>\n\n<p>They are, most often, <strong><em>snapshots</em></strong> of what is happening in an <strong><em>extremely dynamic</em></strong> environment, which is the cell and its components.</p>\n\n<p>What holds true at one moment (when the cell was fixed, the proteins extracted or crystalized) is not the whole picture of what's happening or how things look.</p>\n\n<p>I think you'll need more than a few biochemical experiments to <strong><em>know</em></strong> how the cell really works. Until that day, predictions and modeling will always be useful.</p>", "lastedit_user": 26}}, {"pk": 227, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 1, "views": 0, "author": 88, "creation_date": "2010-03-08 10:01:03", "content": "<p>Hey Pierre,</p>\n\n<p>thanks for your answer!\nI already got the genetic map provided by USCS database with STS markers.\nBut my issue remains the same: the density of markers of the available genetic maps (the USCS one or HapMap II one) is much lower than the density of my SNP set. For example I have 4054 SNPs between the 2 STS markers above (in your comment).</p>\n\n<p>Therefore I don't know how to attribute to each SNPs of my set a position in cM  without doing a very important approximation.</p>\n\n<p>Anyway, what do you suggest? To use a rule of three approach to attribute a cM position to my collection's SNPs?</p>\n\n<p>Thanks for your advice!\nPierre</p>", "html": "<p>Hey Pierre,</p>\n\n<p>thanks for your answer!\nI already got the genetic map provided by USCS database with STS markers.\nBut my issue remains the same: the density of markers of the available genetic maps (the USCS one or HapMap II one) is much lower than the density of my SNP set. For example I have 4054 SNPs between the 2 STS markers above (in your comment).</p>\n\n<p>Therefore I don't know how to attribute to each SNPs of my set a position in cM  without doing a very important approximation.</p>\n\n<p>Anyway, what do you suggest? To use a rule of three approach to attribute a cM position to my collection's SNPs?</p>\n\n<p>Thanks for your advice!\nPierre</p>", "lastedit_user": 88}}, {"pk": 228, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 3, "views": 165, "author": 110, "creation_date": "2010-03-08 12:57:32", "content": "<p>Hello all,\nI am new to this forum and I am glad I found one in Bioinformatics too.\nI hope I can ask this question here.\n<strong>Has anyone been able to generate cluster heatmaps using any library in Java ?</strong>\nI recently got to learn that heatmaps are different from cluster heat maps in just that in the cluster heatmaps there are dendrograms for both genes as well as samples. So essentially Hierarchical clustering (thats what I am working on) is to be performed once on the genes and once on the samples.\nI was looking at JFreechart, JTreeview. In JFreechart I did not find any method to directly get a cluster heat map. And with JTreeview,  it needs 3 input files in particular format like the .CDT file, .gtr file, .atr file. I am curious to know if there is any other direct way to generate these cluster heat maps. </p>\n\n<p>Please enlighten me</p>\n\n<p>Thanks in advance</p>", "html": "<p>Hello all,\nI am new to this forum and I am glad I found one in Bioinformatics too.\nI hope I can ask this question here.\n<strong>Has anyone been able to generate cluster heatmaps using any library in Java ?</strong>\nI recently got to learn that heatmaps are different from cluster heat maps in just that in the cluster heatmaps there are dendrograms for both genes as well as samples. So essentially Hierarchical clustering (thats what I am working on) is to be performed once on the genes and once on the samples.\nI was looking at JFreechart, JTreeview. In JFreechart I did not find any method to directly get a cluster heat map. And with JTreeview,  it needs 3 input files in particular format like the .CDT file, .gtr file, .atr file. I am curious to know if there is any other direct way to generate these cluster heat maps. </p>\n\n<p>Please enlighten me</p>\n\n<p>Thanks in advance</p>", "lastedit_user": 110}}, {"pk": 229, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 1, "views": 0, "author": 2, "creation_date": "2010-03-08 13:49:18", "content": "<p>I know that the <a href=\"http://www.tm4.org/mev/\" rel=\"nofollow\">Multiexperiment Viewer suite</a> is written in Java. </p>\n\n<p>While it is not usually used as a library I think you might be able to import some of its internals in your own code. It is worth a try, as you could get access to numerous other tools as well. </p>", "html": "<p>I know that the <a href=\"http://www.tm4.org/mev/\" rel=\"nofollow\">Multiexperiment Viewer suite</a> is written in Java. </p>\n\n<p>While it is not usually used as a library I think you might be able to import some of its internals in your own code. It is worth a try, as you could get access to numerous other tools as well. </p>", "lastedit_user": 2}}, {"pk": 230, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:35:58", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-08 13:50:54", "content": "<p>This post was not formulated in a question/answer format  therefore will be closed.</p>", "html": "<p>This post was not formulated in a question/answer format  therefore will be closed.</p>", "lastedit_user": 2}}, {"pk": 231, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 3, "views": 0, "author": 62, "creation_date": "2010-03-08 14:39:24", "content": "<p>Did not used it myself yet, but there is a new program claiming to be better than primer3:</p>\n\n<p>See:\n<a href=\"http://nar.oxfordjournals.org/cgi/content/abstract/37/13/e95\" rel=\"nofollow\">http://nar.oxfordjournals.org/cgi/content/abstract/37/13/e95</a></p>\n\n<p>Download it from:\n<a href=\"http://pythia.sourceforge.net\" rel=\"nofollow\">http://pythia.sourceforge.net</a></p>", "html": "<p>Did not used it myself yet, but there is a new program claiming to be better than primer3:</p>\n\n<p>See:\n<a href=\"http://nar.oxfordjournals.org/cgi/content/abstract/37/13/e95\" rel=\"nofollow\">http://nar.oxfordjournals.org/cgi/content/abstract/37/13/e95</a></p>\n\n<p>Download it from:\n<a href=\"http://pythia.sourceforge.net\" rel=\"nofollow\">http://pythia.sourceforge.net</a></p>", "lastedit_user": 62}}, {"pk": 232, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 7, "views": 101, "author": 64, "creation_date": "2010-03-08 16:54:31", "content": "<p>It is clear that in Computational Biology there are certain organisations, societies and the like, global and regional, that intend to cater the needs for conferences, networking and scientific exchange, proper of any scientific community.</p>\n\n<p>However, the benefits of joining a society are still elusive. In an American setting it seems that there is this culture of supporting your own community by joining your society. In Europe it does not seem to have any value attached in one's CV to belong or form part of a society, other than anecdotal. Other regions in the world may be somewhere in between.</p>\n\n<p>I would like to ask people what they think their perception of belonging to a professional society is, whether this should be something that should be encouraged in settings where this is not so valued and what their expectations are.</p>", "html": "<p>It is clear that in Computational Biology there are certain organisations, societies and the like, global and regional, that intend to cater the needs for conferences, networking and scientific exchange, proper of any scientific community.</p>\n\n<p>However, the benefits of joining a society are still elusive. In an American setting it seems that there is this culture of supporting your own community by joining your society. In Europe it does not seem to have any value attached in one's CV to belong or form part of a society, other than anecdotal. Other regions in the world may be somewhere in between.</p>\n\n<p>I would like to ask people what they think their perception of belonging to a professional society is, whether this should be something that should be encouraged in settings where this is not so valued and what their expectations are.</p>", "lastedit_user": 64}}, {"pk": 233, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 1, "views": 0, "author": 2, "creation_date": "2010-03-08 18:28:21", "content": "<p>I think the benefits of being in a professional society do not readily lend themselves to quantification. </p>\n\n<p>The positives are more about personal fulfillment, a sense of belonging, better understanding of the field and building interpersonal relationships that in the end may strongly shape one's future.</p>", "html": "<p>I think the benefits of being in a professional society do not readily lend themselves to quantification. </p>\n\n<p>The positives are more about personal fulfillment, a sense of belonging, better understanding of the field and building interpersonal relationships that in the end may strongly shape one's future.</p>", "lastedit_user": 2}}, {"pk": 234, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 4, "views": 0, "author": 59, "creation_date": "2010-03-08 21:51:44", "content": "<p>This is a very interesting question.  I think today, and especially in a modern field like bioinformatics, the idea of belonging to a professional society is almost quaint.</p>\n\n<p>Having once been a bench scientist, the only reasons I could ever ascertain to belonging to a society were that</p>\n\n<ol>\n<li>They might pay your fees to go to a conference if they fund this kind of thing</li>\n<li>You might get reduced conference fees for certain conferences</li>\n<li>You get a little ribbon on your badge to let everyone know at the conference you're a member</li>\n</ol>\n\n<p>Certainly, from my current position - I have never felt that belonging to a professional body distinguished my CV or resume from any other candidate.  As someone who hires, it would not make a jot of difference to me if you were a member of a society or not.</p>\n\n<p>I would go so far as to suggest that even the networking aspects of a society are largely oversold in the wake of the professional relationships I build over Twitter, LinkedIn or FriendFeed.  Whether or not I am a member of a professional organisation would not have any bearing on which conferences I attended, or who I spoke to at them.</p>", "html": "<p>This is a very interesting question.  I think today, and especially in a modern field like bioinformatics, the idea of belonging to a professional society is almost quaint.</p>\n\n<p>Having once been a bench scientist, the only reasons I could ever ascertain to belonging to a society were that</p>\n\n<ol>\n<li>They might pay your fees to go to a conference if they fund this kind of thing</li>\n<li>You might get reduced conference fees for certain conferences</li>\n<li>You get a little ribbon on your badge to let everyone know at the conference you're a member</li>\n</ol>\n\n<p>Certainly, from my current position - I have never felt that belonging to a professional body distinguished my CV or resume from any other candidate.  As someone who hires, it would not make a jot of difference to me if you were a member of a society or not.</p>\n\n<p>I would go so far as to suggest that even the networking aspects of a society are largely oversold in the wake of the professional relationships I build over Twitter, LinkedIn or FriendFeed.  Whether or not I am a member of a professional organisation would not have any bearing on which conferences I attended, or who I spoke to at them.</p>", "lastedit_user": 59}}, {"pk": 235, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 4, "views": 0, "author": 116, "creation_date": "2010-03-08 22:08:45", "content": "<p>I think the Pfam approach may return something useful, but you need to be careful about how you interpret your results. Pfam is primarily a tool to assign sequences to protein families. It also does a good job of recognizing functional domains. It provides information about the usual function of the domains/family members- but I do not think it should be viewed as a tool to assign function directly, and I think the Pfam curators would agree with me. It is making an assignment based on sequence similarity, and is inferring structural and functional similarity. These inferences may or may not be correct. You have several risks you need to keep in mind. Two biggies that pop out too me are:</p>\n\n<ol>\n<li><p>Your sequences are all shorter than most protein domains. So you may get false negatives where if you had the full sequence, you might have hit a domain, but because you only have a fragment, the similarity is too weak to produce a hit.</p></li>\n<li><p>You might get false positives because you match a domain but have a few key residues in your sequence mutated, and therefore the protein from which your sequence was derived actually does not perform the function assigned to that domain in Pfam. </p></li>\n</ol>\n\n<p>You asked about direct experience. Mine is roughly 5 years old now, but it was that Pfam was one of the best tools to identify functional domains, and was a good way to annotate sequences as long as I kept its limitations in mind. However, I was working with full length sequences, not fragments. My gut instinct is that it will not perform as well on small fragments, but I have no direct experience to back me up- just my knowledge that your fragments are shorter than most domains.</p>\n\n<p>Back when I did function assignment for a living, I considered it very risky to rely on one tool to make an assignment. And I never considered any assignment anything more than a hypothesis that could then be tested in the lab.</p>", "html": "<p>I think the Pfam approach may return something useful, but you need to be careful about how you interpret your results. Pfam is primarily a tool to assign sequences to protein families. It also does a good job of recognizing functional domains. It provides information about the usual function of the domains/family members- but I do not think it should be viewed as a tool to assign function directly, and I think the Pfam curators would agree with me. It is making an assignment based on sequence similarity, and is inferring structural and functional similarity. These inferences may or may not be correct. You have several risks you need to keep in mind. Two biggies that pop out too me are:</p>\n\n<ol>\n<li><p>Your sequences are all shorter than most protein domains. So you may get false negatives where if you had the full sequence, you might have hit a domain, but because you only have a fragment, the similarity is too weak to produce a hit.</p></li>\n<li><p>You might get false positives because you match a domain but have a few key residues in your sequence mutated, and therefore the protein from which your sequence was derived actually does not perform the function assigned to that domain in Pfam. </p></li>\n</ol>\n\n<p>You asked about direct experience. Mine is roughly 5 years old now, but it was that Pfam was one of the best tools to identify functional domains, and was a good way to annotate sequences as long as I kept its limitations in mind. However, I was working with full length sequences, not fragments. My gut instinct is that it will not perform as well on small fragments, but I have no direct experience to back me up- just my knowledge that your fragments are shorter than most domains.</p>\n\n<p>Back when I did function assignment for a living, I considered it very risky to rely on one tool to make an assignment. And I never considered any assignment anything more than a hypothesis that could then be tested in the lab.</p>", "lastedit_user": 116}}, {"pk": 236, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 2, "views": 0, "author": 89, "creation_date": "2010-03-08 22:46:36", "content": "<p>From the practical point of view, I heard when you apply for a green card in US as extraordinary/outstanding scientist, being a member of professional societies gives you some additional \"points\".</p>\n\n<p>Another example. AACR (The American Association for Cancer Research) became to large, that it accepts papers/posters for a conference only from its members. If you are not, you have to find a full member to be a \"sponsor\" for your paper.</p>\n\n<p>As for many societies, members usually get early event notices (I get them by e-mail all the time anyway), some free publications (sometime just another junk), fee reduction (do you care if your lab is paying? :). </p>", "html": "<p>From the practical point of view, I heard when you apply for a green card in US as extraordinary/outstanding scientist, being a member of professional societies gives you some additional \"points\".</p>\n\n<p>Another example. AACR (The American Association for Cancer Research) became to large, that it accepts papers/posters for a conference only from its members. If you are not, you have to find a full member to be a \"sponsor\" for your paper.</p>\n\n<p>As for many societies, members usually get early event notices (I get them by e-mail all the time anyway), some free publications (sometime just another junk), fee reduction (do you care if your lab is paying? :). </p>", "lastedit_user": 89}}, {"pk": 237, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 3, "views": 0, "author": 66, "creation_date": "2010-03-08 23:29:23", "content": "<p>The sole benefit that I have gained from my two experiences with society membership was a discounted rate for conference registration.  For the remainder of my subscription, I received no information via email or any other means apart from a reminder to renew (in one case, nothing in the other case).</p>\n\n<p>I'd agree with Daniel, above; the \"informal\" connections that I've made via online social networks have been far more valuable to me than any formal society.</p>", "html": "<p>The sole benefit that I have gained from my two experiences with society membership was a discounted rate for conference registration.  For the remainder of my subscription, I received no information via email or any other means apart from a reminder to renew (in one case, nothing in the other case).</p>\n\n<p>I'd agree with Daniel, above; the \"informal\" connections that I've made via online social networks have been far more valuable to me than any formal society.</p>", "lastedit_user": 66}}, {"pk": 238, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 1, "views": 119, "author": 90, "creation_date": "2010-03-09 02:39:53", "content": "<p>I have RMA (Robust Multi-Array) scores for the different genes (and their isoforms) on the Affymetrix chip. I want to know which of these genes are \"active\" (or in other words: are likely to produce enough protein products to have an effect). I'm not interested in them being differentially expressed or X-fold over- or under-expressed. All I want is the classification of them being likely \"on\" or \"off\". </p>\n\n<p>So far I log-transformed (basis 10) the RMA score and centered them (subtracted the median). I called all genes which had a transformed score &lt;0 as being inactive and scores >0 as being active. </p>\n\n<p>Does anyone have a better methodology ?</p>", "html": "<p>I have RMA (Robust Multi-Array) scores for the different genes (and their isoforms) on the Affymetrix chip. I want to know which of these genes are \"active\" (or in other words: are likely to produce enough protein products to have an effect). I'm not interested in them being differentially expressed or X-fold over- or under-expressed. All I want is the classification of them being likely \"on\" or \"off\". </p>\n\n<p>So far I log-transformed (basis 10) the RMA score and centered them (subtracted the median). I called all genes which had a transformed score &lt;0 as being inactive and scores >0 as being active. </p>\n\n<p>Does anyone have a better methodology ?</p>", "lastedit_user": 90}}, {"pk": 239, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 4, "views": 0, "author": 117, "creation_date": "2010-03-09 05:15:16", "content": "<p>You're right in thinking that your methodology isn't a very good representation of the system. mRNAs (and their protein products) have a huge dynamic range. Some are going to be expressed constantly at extremely low levels, and at the other extremes, you'll have genes that are highly expressed, but only for a short period of time.  Taking the median level as the dividing line between on and off is going to give you huge numbers of false negatives (genes that are actually being transcribed and translated, but that you'll classify as \"off\")</p>\n\n<p>I'd look at what the background noise level is, then run some stats to determine which probes give you signal significantly above that level. Any gene meeting that criteria should probably be considered \"on\". I suspect that may not divide the set as nicely as you'd hope, though.</p>\n\n<p>Maybe if you tell us more about what exactly you're trying to do, we can offer more constructive advice.</p>", "html": "<p>You're right in thinking that your methodology isn't a very good representation of the system. mRNAs (and their protein products) have a huge dynamic range. Some are going to be expressed constantly at extremely low levels, and at the other extremes, you'll have genes that are highly expressed, but only for a short period of time.  Taking the median level as the dividing line between on and off is going to give you huge numbers of false negatives (genes that are actually being transcribed and translated, but that you'll classify as \"off\")</p>\n\n<p>I'd look at what the background noise level is, then run some stats to determine which probes give you signal significantly above that level. Any gene meeting that criteria should probably be considered \"on\". I suspect that may not divide the set as nicely as you'd hope, though.</p>\n\n<p>Maybe if you tell us more about what exactly you're trying to do, we can offer more constructive advice.</p>", "lastedit_user": 117}}, {"pk": 240, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 2, "views": 0, "author": 117, "creation_date": "2010-03-09 05:20:42", "content": "<p>It's worth noting that a lot of people also use <a href=\"http://www.novocraft.com/index.html\" rel=\"nofollow\">Novoalign</a></p>", "html": "<p>It's worth noting that a lot of people also use <a href=\"http://www.novocraft.com/index.html\" rel=\"nofollow\">Novoalign</a></p>", "lastedit_user": 117}}, {"pk": 241, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 1, "views": 0, "author": 119, "creation_date": "2010-03-09 12:12:40", "content": "<p>I use a combination of things for different purposes, including C, R, Perl and Delphi. For anything to run on windows, whether command-line or with a nice-to-use UI for less technical users, <strong>Delphi</strong> still rocks.</p>", "html": "<p>I use a combination of things for different purposes, including C, R, Perl and Delphi. For anything to run on windows, whether command-line or with a nice-to-use UI for less technical users, <strong>Delphi</strong> still rocks.</p>", "lastedit_user": 119}}, {"pk": 242, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 2, "views": 0, "author": 119, "creation_date": "2010-03-09 12:59:45", "content": "<p>In addition to what's already been said, I'd like to add that even if these data did completely abolish the need to predict TF binding sites (which I'm not entirely sure about), there are still many cases - <strong>and many organisms</strong> - where such data aren't available, implying that there's still a niche for computational approaches.</p>", "html": "<p>In addition to what's already been said, I'd like to add that even if these data did completely abolish the need to predict TF binding sites (which I'm not entirely sure about), there are still many cases - <strong>and many organisms</strong> - where such data aren't available, implying that there's still a niche for computational approaches.</p>", "lastedit_user": 119}}, {"pk": 243, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 1, "views": 0, "author": 91, "creation_date": "2010-03-09 15:44:54", "content": "<p>We still have a long way to go when it comes to enhancer discovery. The fact that a genomic region comes out as DNAse I hypersensitive in a certain tissue does not necessarily mean it is an enhancer region in that tissue. Here, I think the DNAse I hypersensitivity (and FAIRE) data should be regarded as a necessary input to improved enhancer prediction algorithms, rather than something to replace them. (In fact I think there are very few enhancer prediction algorithms out there, so the help is sorely needed!)</p>\n\n<p>Similarly, I don't think DNAse or FAIRE <em>in themselves</em> say much about transcription factor binding, although they can be very informative in combination with knowledge of the TF motif (or so I've heard). ChIP-seq, on the other hand, does give pretty solid information on TF binding which I agree would more or less supersede computational predictions in the relevant tissue in the given organism. As others have pointed out in this thread, though, there are many organisms and/or tissues for which we won't have ChIP-seq within a foreseeable time, and for those cases (and others) we can hopefully use existing ChIP-seq data to refine computational models of TF binding. So I would regard ChIP-seq data as something that helps us refine our understanding of TF binding, including the prediction of binding events in various systems.</p>", "html": "<p>We still have a long way to go when it comes to enhancer discovery. The fact that a genomic region comes out as DNAse I hypersensitive in a certain tissue does not necessarily mean it is an enhancer region in that tissue. Here, I think the DNAse I hypersensitivity (and FAIRE) data should be regarded as a necessary input to improved enhancer prediction algorithms, rather than something to replace them. (In fact I think there are very few enhancer prediction algorithms out there, so the help is sorely needed!)</p>\n\n<p>Similarly, I don't think DNAse or FAIRE <em>in themselves</em> say much about transcription factor binding, although they can be very informative in combination with knowledge of the TF motif (or so I've heard). ChIP-seq, on the other hand, does give pretty solid information on TF binding which I agree would more or less supersede computational predictions in the relevant tissue in the given organism. As others have pointed out in this thread, though, there are many organisms and/or tissues for which we won't have ChIP-seq within a foreseeable time, and for those cases (and others) we can hopefully use existing ChIP-seq data to refine computational models of TF binding. So I would regard ChIP-seq data as something that helps us refine our understanding of TF binding, including the prediction of binding events in various systems.</p>", "lastedit_user": 91}}, {"pk": 244, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 2, "views": 0, "author": 89, "creation_date": "2010-03-09 17:57:12", "content": "<p>Just my two cents and since nobody mentioned yet, I'm using <strong>MATLAB</strong>. Yes, it's commercial and expensive. It might be behind <strong>R/Bioconductor</strong> in amount of contributed algorithms (this is why I sometime have to use R as well). But the environment is very friendly for fast development, figures are great, and making GUIs is pretty easy. Many useful for bioinformatician toolboxes, like Statistics, Bioinformatics, Optimization. Someone may find SimBiology cool (although I haven't used it). As others mentioned <strong>Perl</strong> is still rules for text processing and workflows, although I agree with giovanni on its problems.</p>", "html": "<p>Just my two cents and since nobody mentioned yet, I'm using <strong>MATLAB</strong>. Yes, it's commercial and expensive. It might be behind <strong>R/Bioconductor</strong> in amount of contributed algorithms (this is why I sometime have to use R as well). But the environment is very friendly for fast development, figures are great, and making GUIs is pretty easy. Many useful for bioinformatician toolboxes, like Statistics, Bioinformatics, Optimization. Someone may find SimBiology cool (although I haven't used it). As others mentioned <strong>Perl</strong> is still rules for text processing and workflows, although I agree with giovanni on its problems.</p>", "lastedit_user": 89}}, {"pk": 245, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 5, "views": 199, "author": 10, "creation_date": "2010-03-09 18:13:46", "content": "<p>I need to make a recommendation to people working in a wet-lab looking for an easy to use tool that does GO term enrichment determination. For those unfamiliar with the concept it means that given a list of gene names they want to find out which gene ontology terms are present in numbers that are above random chance.</p>\n\n<p>There is a huge <a href=\"http://www.geneontology.org/GO.tools.microarray.shtml\" rel=\"nofollow\">list here</a> yet a random sampling of the tools mentioned there has lead me to many non-working sites. Other tools seem out of date or just not reliable.</p>\n\n<p>What tool do you use to solve this problem?</p>\n\n<p>Thanks.</p>", "html": "<p>I need to make a recommendation to people working in a wet-lab looking for an easy to use tool that does GO term enrichment determination. For those unfamiliar with the concept it means that given a list of gene names they want to find out which gene ontology terms are present in numbers that are above random chance.</p>\n\n<p>There is a huge <a href=\"http://www.geneontology.org/GO.tools.microarray.shtml\" rel=\"nofollow\">list here</a> yet a random sampling of the tools mentioned there has lead me to many non-working sites. Other tools seem out of date or just not reliable.</p>\n\n<p>What tool do you use to solve this problem?</p>\n\n<p>Thanks.</p>", "lastedit_user": 10}}, {"pk": 246, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 7, "views": 0, "author": 58, "creation_date": "2010-03-09 18:55:53", "content": "<p>I prefer to use DAVID ( <a href=\"http://david.abcc.ncifcrf.gov/\" rel=\"nofollow\">http://david.abcc.ncifcrf.gov/</a> ) but id be interested to hear what other people like.  There are also R packages available through Bioconductor (GOstats; <a href=\"http://www.bioconductor.org/packages/2.3/bioc/html/GOstats.html\" rel=\"nofollow\">http://www.bioconductor.org/packages/2.3/bioc/html/GOstats.html</a>) that can do enrichment determination, but I am less familiar with those, and you need a good working knowlege of R to use these.</p>", "html": "<p>I prefer to use DAVID ( <a href=\"http://david.abcc.ncifcrf.gov/\" rel=\"nofollow\">http://david.abcc.ncifcrf.gov/</a> ) but id be interested to hear what other people like.  There are also R packages available through Bioconductor (GOstats; <a href=\"http://www.bioconductor.org/packages/2.3/bioc/html/GOstats.html\" rel=\"nofollow\">http://www.bioconductor.org/packages/2.3/bioc/html/GOstats.html</a>) that can do enrichment determination, but I am less familiar with those, and you need a good working knowlege of R to use these.</p>", "lastedit_user": 58}}, {"pk": 247, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 1, "views": 0, "author": 23, "creation_date": "2010-03-09 19:35:32", "content": "<p>You can try one of the tools at <a href=\"http://babelomics.bioinfo.cipf.es/\" rel=\"nofollow\">babelomics</a>, in particular FatiGO; or as an alternative, you can use the same AmiGO <a href=\"http://amigo.geneontology.org/cgi-bin/amigo/term_enrichment\" rel=\"nofollow\">Term Enrichment tool</a>.</p>\n\n<p>However, be careful when using GeneOntology: it is a very active and supported project, so they make big enhancements between two releases. If you look at thei bug tracker, there are at least 8-10 changes to geneontology terms every day. So, annotate the version and date of GeneOntology if you want your experiment to be reproducible.</p>", "html": "<p>You can try one of the tools at <a href=\"http://babelomics.bioinfo.cipf.es/\" rel=\"nofollow\">babelomics</a>, in particular FatiGO; or as an alternative, you can use the same AmiGO <a href=\"http://amigo.geneontology.org/cgi-bin/amigo/term_enrichment\" rel=\"nofollow\">Term Enrichment tool</a>.</p>\n\n<p>However, be careful when using GeneOntology: it is a very active and supported project, so they make big enhancements between two releases. If you look at thei bug tracker, there are at least 8-10 changes to geneontology terms every day. So, annotate the version and date of GeneOntology if you want your experiment to be reproducible.</p>", "lastedit_user": 23}}, {"pk": 248, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 3, "views": 0, "author": 26, "creation_date": "2010-03-09 20:15:02", "content": "<p>I would suggest the following question instead of the one you're asking:</p>\n\n<p><strong>Can you actually determine if a gene is \"active\" (i.e. translated into protein) from [gene] expression data?</strong></p>\n\n<p>And I'll point you towards people who have published papers about it:</p>\n\n<ul>\n<li><a href=\"http://www.ncbi.nlm.nih.gov/pubmed/10022859\" rel=\"nofollow\">Correlation between protein and mRNA abundance in yeast.</a></li>\n<li><a href=\"http://www.biomedcentral.com/1471-2164/9/246\" rel=\"nofollow\">Correlation of mRNA and protein levels: Cell type-specific gene expression of cluster designation antigens in the prostate</a></li>\n<li><a href=\"http://genomebiology.com/2003/4/9/117\" rel=\"nofollow\">Comparing protein abundance and mRNA expression levels on a genomic scale</a></li>\n<li><a href=\"http://www3.interscience.wiley.com/journal/106577988/abstract?CRETRY=1&amp;SRETRY=0\" rel=\"nofollow\">Insights into the relation between mrna and protein expression patterns: ii. Experimental observations in Escherichia coli</a></li>\n</ul>\n\n<p>These are just a few papers that seem critical towards such a correlation. That is not to say that there is no good correlation for any gene. But I would be very surprised if you can make a general rule about it without checking in every cell type, tissue type and for every gene to see if such a correlation is or not acceptable.</p>\n\n<p>Now, if you do a Pubmed search for the terms \"<a href=\"http://www.ncbi.nlm.nih.gov/pubmed?term=correlation+mrna+protein\" rel=\"nofollow\">correlation mRNA protein</a>\", you will find many papers that check for such correlations, but mostly for specific genes in specific tissues (often for cancer diagnostics purposes).</p>\n\n<p>If you do find papers that state such correlations, genome wide using microarray data, I'd be highly suspicious of that paper.</p>\n\n<p>So, obviously, you can not set \"a\" cut-off for determining this. My personal experience tells me that you can have gene transcription with <strong><em>no</em></strong> protein expression following it... Unfortunately, I have not published it yet :(</p>", "html": "<p>I would suggest the following question instead of the one you're asking:</p>\n\n<p><strong>Can you actually determine if a gene is \"active\" (i.e. translated into protein) from [gene] expression data?</strong></p>\n\n<p>And I'll point you towards people who have published papers about it:</p>\n\n<ul>\n<li><a href=\"http://www.ncbi.nlm.nih.gov/pubmed/10022859\" rel=\"nofollow\">Correlation between protein and mRNA abundance in yeast.</a></li>\n<li><a href=\"http://www.biomedcentral.com/1471-2164/9/246\" rel=\"nofollow\">Correlation of mRNA and protein levels: Cell type-specific gene expression of cluster designation antigens in the prostate</a></li>\n<li><a href=\"http://genomebiology.com/2003/4/9/117\" rel=\"nofollow\">Comparing protein abundance and mRNA expression levels on a genomic scale</a></li>\n<li><a href=\"http://www3.interscience.wiley.com/journal/106577988/abstract?CRETRY=1&amp;SRETRY=0\" rel=\"nofollow\">Insights into the relation between mrna and protein expression patterns: ii. Experimental observations in Escherichia coli</a></li>\n</ul>\n\n<p>These are just a few papers that seem critical towards such a correlation. That is not to say that there is no good correlation for any gene. But I would be very surprised if you can make a general rule about it without checking in every cell type, tissue type and for every gene to see if such a correlation is or not acceptable.</p>\n\n<p>Now, if you do a Pubmed search for the terms \"<a href=\"http://www.ncbi.nlm.nih.gov/pubmed?term=correlation+mrna+protein\" rel=\"nofollow\">correlation mRNA protein</a>\", you will find many papers that check for such correlations, but mostly for specific genes in specific tissues (often for cancer diagnostics purposes).</p>\n\n<p>If you do find papers that state such correlations, genome wide using microarray data, I'd be highly suspicious of that paper.</p>\n\n<p>So, obviously, you can not set \"a\" cut-off for determining this. My personal experience tells me that you can have gene transcription with <strong><em>no</em></strong> protein expression following it... Unfortunately, I have not published it yet :(</p>", "lastedit_user": 26}}, {"pk": 249, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 1, "views": 0, "author": 68, "creation_date": "2010-03-09 22:41:33", "content": "<p><a href=\"http://www.genepilot.com/index.html\" rel=\"nofollow\">GenePilot</a>\u2122 is a Java-based Analysis suite, which provides a MicroArray Analysis capabilities. </p>\n\n<p>You can export your results as Cluster Heatmaps. They give the following example of a local heatmap of the currently selected cluster along with the top dendigram (if applicable), column information, average thumbnail, row info and Gene Ontology Information (if applicable):</p>\n\n<p><img src=\"http://www.genepilot.com/assets/gifs/HC_Select_right.gif\" alt=\"alt text\"></p>", "html": "<p><a href=\"http://www.genepilot.com/index.html\" rel=\"nofollow\">GenePilot</a>\u2122 is a Java-based Analysis suite, which provides a MicroArray Analysis capabilities. </p>\n\n<p>You can export your results as Cluster Heatmaps. They give the following example of a local heatmap of the currently selected cluster along with the top dendigram (if applicable), column information, average thumbnail, row info and Gene Ontology Information (if applicable):</p>\n\n<p><img src=\"http://www.genepilot.com/assets/gifs/HC_Select_right.gif\" alt=\"alt text\"></p>", "lastedit_user": 68}}, {"pk": 250, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 1, "views": 0, "author": 90, "creation_date": "2010-03-09 23:15:00", "content": "<p>Another option is GONOME (http://gonome.imb.uq.edu.au/), which finds the over- and under-represented\nGO terms for a given set of genomic positions.</p>", "html": "<p>Another option is GONOME (http://gonome.imb.uq.edu.au/), which finds the over- and under-represented\nGO terms for a given set of genomic positions.</p>", "lastedit_user": 90}}, {"pk": 251, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 2, "views": 78, "author": 71, "creation_date": "2010-03-10 11:57:11", "content": "<p>What opensource Java solutions are available to query online pathway databases like <a href=\"http://www.genome.jp/kegg/\" rel=\"nofollow\">KEGG</a> (or <a href=\"http://biometa.cmbi.ru.nl/\" rel=\"nofollow\">BioMeta</a>), <a href=\"http://www.ebi.ac.uk/thornton-srv/databases/MACiE/\" rel=\"nofollow\">MACiE</a> and <a href=\"http://www.brenda-enzymes.org/\" rel=\"nofollow\">Brenda</a> for the pathways a certain metabolite is available, for example, based on the <a href=\"http://en.wikipedia.org/wiki/International_Chemical_Identifier\" rel=\"nofollow\">InChI</a>? Preferably, the library would have a good data model for the pathway information, possibly <a href=\"http://sbml.org/\" rel=\"nofollow\">SMBL</a> or <a href=\"http://en.wikipedia.org/wiki/Resource_description_framework\" rel=\"nofollow\">RDF</a>-based. What would the code look like to make such a query?</p>", "html": "<p>What opensource Java solutions are available to query online pathway databases like <a href=\"http://www.genome.jp/kegg/\" rel=\"nofollow\">KEGG</a> (or <a href=\"http://biometa.cmbi.ru.nl/\" rel=\"nofollow\">BioMeta</a>), <a href=\"http://www.ebi.ac.uk/thornton-srv/databases/MACiE/\" rel=\"nofollow\">MACiE</a> and <a href=\"http://www.brenda-enzymes.org/\" rel=\"nofollow\">Brenda</a> for the pathways a certain metabolite is available, for example, based on the <a href=\"http://en.wikipedia.org/wiki/International_Chemical_Identifier\" rel=\"nofollow\">InChI</a>? Preferably, the library would have a good data model for the pathway information, possibly <a href=\"http://sbml.org/\" rel=\"nofollow\">SMBL</a> or <a href=\"http://en.wikipedia.org/wiki/Resource_description_framework\" rel=\"nofollow\">RDF</a>-based. What would the code look like to make such a query?</p>", "lastedit_user": 71}}, {"pk": 252, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 4, "views": 0, "author": 55, "creation_date": "2010-03-10 15:48:37", "content": "<p>There is no explicit Brenda Java-API I know of, but kegg provides <a href=\"http://www.genome.jp/kegg/soap/support/keggapi.jar\" rel=\"nofollow\">a jar-file</a> which I recommend you <strong><em>don't</em></strong> use. \nThere is a solution anyhow, I have never used MACiE btw.\nBoth database provide a standard compliant web-services interface over SOAP messages.\nWeb-services are a standardized way of language and system independent programmatic communication. </p>\n\n<p><a href=\"http://www.genome.jp/kegg/soap/\" rel=\"nofollow\">KEGG soap: <a href=\"http://www.genome.jp/kegg/soap/\" rel=\"nofollow\">http://www.genome.jp/kegg/soap/</a></a></p>\n\n<p><a href=\"http://www.brenda-enzymes.org/soap/\" rel=\"nofollow\">Brenda SOAP: <a href=\"http://www.brenda-enzymes.org/soap/\" rel=\"nofollow\">http://www.brenda-enzymes.org/soap/</a></a></p>\n\n<p>Both services have a <a href=\"http://en.wikipedia.org/wiki/Web_Services_Description_Language\" rel=\"nofollow\">WSDL file</a> to describe the interface.</p>\n\n<p>This description can be used to automatically generate client code using for example <a href=\"http://ws.apache.org/axis2/\" rel=\"nofollow\">Axis2 a free open-source</a> implementation of the <a href=\"http://en.wikipedia.org/wiki/SOAP\" rel=\"nofollow\">SOAP protocol</a>. IMHO this is the way to go.\nSo you will use Axis2 wsdl2code (or the Axis2 Eclipse-plugin) to generate exactly the free-open-source Java API you need.</p>\n\n<hr>\n\n<p>A little edit and some issues from myself after having a look at the KEGG soap interface:</p>\n\n<p>As often, KEGG is a bit misbehaving, so what I answered above is the theory, it is true <em>in principle</em>, but....</p>\n\n<ol>\n<li><p>The databinding (mapping of xml-schema types to Java types) that seems to work is\n<strong>xmlbeans</strong>. The <strong>adb</strong> databinding gives an error. This is due to non-standard use of some\nstructures in the wsdl. </p></li>\n<li><p>Below is some source code demonstrating how an axis2 interface with xmlbeans data binding can be used. The only glitch is I cannot tell, how to set or read the <em>ArrayOfstring</em>. This glitch is IMHO KEGG's fault because they did only test with Axis1.</p></li>\n<li><p>Alternatives if nobody knows a better solution, try Axis1 with <a href=\"http://www.genome.jp/kegg/soap/support/keggapi.jar\" rel=\"nofollow\">the jar-file</a> from KEGG or try the <a href=\"http://www.brenda-enzymes.org/soap/brenda.wsdl\" rel=\"nofollow\">Brenda WSDL</a>.</p></li>\n</ol>\n\n<p>Example use of Axis2/xmlbeans generated classes. The principle is the same for Brenda:</p>\n\n<pre><code> package keggtest;\n\n   import java.rmi.RemoteException;\n\n   import kegg.soap.ArrayOfstring;\n   import kegg.soap.GetPathwaysByGenesDocument;\n   import kegg.soap.GetPathwaysByGenesResponseDocument;\n   import kegg.soap.KEGGStub;\n   import kegg.soap.GetPathwaysByGenesDocument.GetPathwaysByGenes;\n\n   import org.apache.axis2.AxisFault;\n\npublic class keggclient {\n\n    /**\n     * @param args\n     */\n    public static void main(String[] args) {\n\n        try {\n            KEGGStub stub = new KEGGStub(\"http://soap.genome.jp/KEGG.wsdl\");\n\n            GetPathwaysByGenes getPathwaysByGenes = GetPathwaysByGenes.Factory\n                    .newInstance();\n            ArrayOfstring genesIdList = ArrayOfstring.Factory.newInstance();\n            // add items to ArrayOfstring, but how?\n            getPathwaysByGenes.setGenesIdList(genesIdList);\n            GetPathwaysByGenesDocument get_pathways_by_genes = GetPathwaysByGenesDocument.Factory\n                    .newInstance();\n            get_pathways_by_genes.setGetPathwaysByGenes(getPathwaysByGenes);\n            try {\n                GetPathwaysByGenesResponseDocument res = stub\n                        .get_pathways_by_genes(get_pathways_by_genes);\n                System.err.println(res.getGetPathwaysByGenesResponse()\n                        .getReturn());\n            } catch (RemoteException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n            }\n\n        } catch (AxisFault e) {\n            // TODO Auto-generated catch block\n\n            e.printStackTrace();\n        }\n\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>And another edit, after trying the Brenda WSDL with axis2 wsdl2code, the result is not \nvery promising:\n...\nSEVERE: The binding operation getKeggPathway is RPC/literal. The message parts for this operation must use the type attribute as specificed by WS-I Basic Profile specification (4.4.1).  Message part, ecNumber, violatesthis rule.  Please remove the element attribute and use the type attribute.\n...</p>\n\n<p>So, if somebody has a better answer, including asking the service providers to adhere to standards. Apologies for testing after answering.... </p>", "html": "<p>There is no explicit Brenda Java-API I know of, but kegg provides <a href=\"http://www.genome.jp/kegg/soap/support/keggapi.jar\" rel=\"nofollow\">a jar-file</a> which I recommend you <strong><em>don't</em></strong> use. \nThere is a solution anyhow, I have never used MACiE btw.\nBoth database provide a standard compliant web-services interface over SOAP messages.\nWeb-services are a standardized way of language and system independent programmatic communication. </p>\n\n<p><a href=\"http://www.genome.jp/kegg/soap/\" rel=\"nofollow\">KEGG soap: <a href=\"http://www.genome.jp/kegg/soap/\" rel=\"nofollow\">http://www.genome.jp/kegg/soap/</a></a></p>\n\n<p><a href=\"http://www.brenda-enzymes.org/soap/\" rel=\"nofollow\">Brenda SOAP: <a href=\"http://www.brenda-enzymes.org/soap/\" rel=\"nofollow\">http://www.brenda-enzymes.org/soap/</a></a></p>\n\n<p>Both services have a <a href=\"http://en.wikipedia.org/wiki/Web_Services_Description_Language\" rel=\"nofollow\">WSDL file</a> to describe the interface.</p>\n\n<p>This description can be used to automatically generate client code using for example <a href=\"http://ws.apache.org/axis2/\" rel=\"nofollow\">Axis2 a free open-source</a> implementation of the <a href=\"http://en.wikipedia.org/wiki/SOAP\" rel=\"nofollow\">SOAP protocol</a>. IMHO this is the way to go.\nSo you will use Axis2 wsdl2code (or the Axis2 Eclipse-plugin) to generate exactly the free-open-source Java API you need.</p>\n\n<hr>\n\n<p>A little edit and some issues from myself after having a look at the KEGG soap interface:</p>\n\n<p>As often, KEGG is a bit misbehaving, so what I answered above is the theory, it is true <em>in principle</em>, but....</p>\n\n<ol>\n<li><p>The databinding (mapping of xml-schema types to Java types) that seems to work is\n<strong>xmlbeans</strong>. The <strong>adb</strong> databinding gives an error. This is due to non-standard use of some\nstructures in the wsdl. </p></li>\n<li><p>Below is some source code demonstrating how an axis2 interface with xmlbeans data binding can be used. The only glitch is I cannot tell, how to set or read the <em>ArrayOfstring</em>. This glitch is IMHO KEGG's fault because they did only test with Axis1.</p></li>\n<li><p>Alternatives if nobody knows a better solution, try Axis1 with <a href=\"http://www.genome.jp/kegg/soap/support/keggapi.jar\" rel=\"nofollow\">the jar-file</a> from KEGG or try the <a href=\"http://www.brenda-enzymes.org/soap/brenda.wsdl\" rel=\"nofollow\">Brenda WSDL</a>.</p></li>\n</ol>\n\n<p>Example use of Axis2/xmlbeans generated classes. The principle is the same for Brenda:</p>\n\n<pre><code> package keggtest;\n\n   import java.rmi.RemoteException;\n\n   import kegg.soap.ArrayOfstring;\n   import kegg.soap.GetPathwaysByGenesDocument;\n   import kegg.soap.GetPathwaysByGenesResponseDocument;\n   import kegg.soap.KEGGStub;\n   import kegg.soap.GetPathwaysByGenesDocument.GetPathwaysByGenes;\n\n   import org.apache.axis2.AxisFault;\n\npublic class keggclient {\n\n    /**\n     * @param args\n     */\n    public static void main(String[] args) {\n\n        try {\n            KEGGStub stub = new KEGGStub(\"http://soap.genome.jp/KEGG.wsdl\");\n\n            GetPathwaysByGenes getPathwaysByGenes = GetPathwaysByGenes.Factory\n                    .newInstance();\n            ArrayOfstring genesIdList = ArrayOfstring.Factory.newInstance();\n            // add items to ArrayOfstring, but how?\n            getPathwaysByGenes.setGenesIdList(genesIdList);\n            GetPathwaysByGenesDocument get_pathways_by_genes = GetPathwaysByGenesDocument.Factory\n                    .newInstance();\n            get_pathways_by_genes.setGetPathwaysByGenes(getPathwaysByGenes);\n            try {\n                GetPathwaysByGenesResponseDocument res = stub\n                        .get_pathways_by_genes(get_pathways_by_genes);\n                System.err.println(res.getGetPathwaysByGenesResponse()\n                        .getReturn());\n            } catch (RemoteException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n            }\n\n        } catch (AxisFault e) {\n            // TODO Auto-generated catch block\n\n            e.printStackTrace();\n        }\n\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>And another edit, after trying the Brenda WSDL with axis2 wsdl2code, the result is not \nvery promising:\n...\nSEVERE: The binding operation getKeggPathway is RPC/literal. The message parts for this operation must use the type attribute as specificed by WS-I Basic Profile specification (4.4.1).  Message part, ecNumber, violatesthis rule.  Please remove the element attribute and use the type attribute.\n...</p>\n\n<p>So, if somebody has a better answer, including asking the service providers to adhere to standards. Apologies for testing after answering.... </p>", "lastedit_user": 55}}, {"pk": 253, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 3, "views": 0, "author": 36, "creation_date": "2010-03-10 16:24:01", "content": "<p>it's very much in progress, but a colleague and I (mostly him) have been working on this for python:\n<a href=\"http://github.com/tanghaibao/goatools/\" rel=\"nofollow\">http://github.com/tanghaibao/goatools/</a></p>\n\n<p>it has a command-line script to find terms that are enriched in a study group. it reports p-value for various multiple testing corrections as well as the false discovery rate.</p>\n\n<p>It can also be used to plot the DAG of a particular GO term. </p>", "html": "<p>it's very much in progress, but a colleague and I (mostly him) have been working on this for python:\n<a href=\"http://github.com/tanghaibao/goatools/\" rel=\"nofollow\">http://github.com/tanghaibao/goatools/</a></p>\n\n<p>it has a command-line script to find terms that are enriched in a study group. it reports p-value for various multiple testing corrections as well as the false discovery rate.</p>\n\n<p>It can also be used to plot the DAG of a particular GO term. </p>", "lastedit_user": 36}}, {"pk": 254, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 1, "views": 0, "author": 24, "creation_date": "2010-03-10 21:05:39", "content": "<p>This review article may be helpful or at least interesting to you:</p>\n\n<p><a href=\"http://bib.oxfordjournals.org/cgi/content/full/7/3/225\" rel=\"nofollow\">\"Automated protein function prediction -- the genomic challenge\"</a> (Friedberg 2006)</p>\n\n<p>Here's a relevant excerpt:</p>\n\n<blockquote>\n  <p>Pfam is arguably the database of choice for those seeking order within the protein sequence universe. [...] As we shall see, Pfam annotation is used by function prediction programs, either by directly querying Pfam or by using umbrella databases that include Pfam information such as InterPro. SMART, CDD, and PRODOM are other databases consisting of multiple alignments of protein domains. All these databases have proteins arranged in homologous clusters, which, when possible, are annotated. These databases are often deferred to when producing homology-based annotation transfers. It should be emphasized that the use of these databases for homology transfer should be done with caution, as they annotate proteins on a domain level. A multi-domain query aligned to Pfam, for example, should be carefully checked for mis-annotations due to domain shuffling, as mentioned eariler. Also, the 'granularity' of these databases varies. For example, a single Pfam family may contain several proteins which perform the same enzymatic reaction on different substrates.</p>\n</blockquote>", "html": "<p>This review article may be helpful or at least interesting to you:</p>\n\n<p><a href=\"http://bib.oxfordjournals.org/cgi/content/full/7/3/225\" rel=\"nofollow\">\"Automated protein function prediction -- the genomic challenge\"</a> (Friedberg 2006)</p>\n\n<p>Here's a relevant excerpt:</p>\n\n<blockquote>\n  <p>Pfam is arguably the database of choice for those seeking order within the protein sequence universe. [...] As we shall see, Pfam annotation is used by function prediction programs, either by directly querying Pfam or by using umbrella databases that include Pfam information such as InterPro. SMART, CDD, and PRODOM are other databases consisting of multiple alignments of protein domains. All these databases have proteins arranged in homologous clusters, which, when possible, are annotated. These databases are often deferred to when producing homology-based annotation transfers. It should be emphasized that the use of these databases for homology transfer should be done with caution, as they annotate proteins on a domain level. A multi-domain query aligned to Pfam, for example, should be carefully checked for mis-annotations due to domain shuffling, as mentioned eariler. Also, the 'granularity' of these databases varies. For example, a single Pfam family may contain several proteins which perform the same enzymatic reaction on different substrates.</p>\n</blockquote>", "lastedit_user": 24}}, {"pk": 255, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 1, "views": 36, "author": 73, "creation_date": "2010-03-10 21:26:16", "content": "<p>Let's say I extract something like this from a qseq or FASTQ file</p>\n\n<pre><code>TTCAGATGTTCATATGCGGATCGGCGCTGGGCCCACGAGATCTAGCAGAGCTCGT.GGGACCACGACCACCGACCC\na`bbbbbbaabbab`ab^`bVa^^bab^[``bba^`]_Ya^`_`^^_Xa\\_KYTYD[PY^Y_^[P[V_BBBBBBBB\n</code></pre>\n\n<p>So the dot is like an N - it can't call the base. So if I look at the FASTQ scores in integer format I would expect that position to have a minimal score. But in fact its score is 'D' or 4, not great but some other called bases at the tail end are 'B' or 2. What gives?</p>", "html": "<p>Let's say I extract something like this from a qseq or FASTQ file</p>\n\n<pre><code>TTCAGATGTTCATATGCGGATCGGCGCTGGGCCCACGAGATCTAGCAGAGCTCGT.GGGACCACGACCACCGACCC\na`bbbbbbaabbab`ab^`bVa^^bab^[``bba^`]_Ya^`_`^^_Xa\\_KYTYD[PY^Y_^[P[V_BBBBBBBB\n</code></pre>\n\n<p>So the dot is like an N - it can't call the base. So if I look at the FASTQ scores in integer format I would expect that position to have a minimal score. But in fact its score is 'D' or 4, not great but some other called bases at the tail end are 'B' or 2. What gives?</p>", "lastedit_user": 73}}, {"pk": 256, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 2, "views": 58, "author": 121, "creation_date": "2010-03-10 23:46:35", "content": "<p>I have a plate of colonies to sequence.  I pick 2 colonies and sequence each in Fwd and Rev directions.   I get back a single bp difference between the 2 strands.  2 bp have an T, two have a C.   How should I call this base?  Can I call it a Y (C or T) and leave it at that, or do I need to sequence another colony to be sure? </p>", "html": "<p>I have a plate of colonies to sequence.  I pick 2 colonies and sequence each in Fwd and Rev directions.   I get back a single bp difference between the 2 strands.  2 bp have an T, two have a C.   How should I call this base?  Can I call it a Y (C or T) and leave it at that, or do I need to sequence another colony to be sure? </p>", "lastedit_user": 121}}, {"pk": 257, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:35:58", "score": 0, "views": 0, "author": 122, "creation_date": "2010-03-11 01:09:56", "content": "<p>Sounds like your trying to find genes which actually switch from on-to-off (or vice-versa) based on cell-type, condition, etc.  Not all genes have this type of behavior ... some are graded (like a dimer switch).  There are numerous papers that discuss techniques for finding genes which have \"bi-modal\" expression patterns.  Since they are a mixture of two expressions patterns it is likely that they have \"on\" and \"off\" pattern.</p>\n\n<p>This article explain the technique and includes Matlab code that should do the whole thing for you.</p>\n\n<p><a href=\"http://www.ncbi.nlm.nih.gov/pubmed/19105848\" rel=\"nofollow\">Human and mouse switch-like genes share common transcriptional regulatory mechanisms for bimodality.</a></p>", "html": "<p>Sounds like your trying to find genes which actually switch from on-to-off (or vice-versa) based on cell-type, condition, etc.  Not all genes have this type of behavior ... some are graded (like a dimer switch).  There are numerous papers that discuss techniques for finding genes which have \"bi-modal\" expression patterns.  Since they are a mixture of two expressions patterns it is likely that they have \"on\" and \"off\" pattern.</p>\n\n<p>This article explain the technique and includes Matlab code that should do the whole thing for you.</p>\n\n<p><a href=\"http://www.ncbi.nlm.nih.gov/pubmed/19105848\" rel=\"nofollow\">Human and mouse switch-like genes share common transcriptional regulatory mechanisms for bimodality.</a></p>", "lastedit_user": 122}}, {"pk": 258, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 5, "views": 141, "author": 122, "creation_date": "2010-03-11 01:27:26", "content": "<p>Does anyone know of a good gene-id conversion tool written in Python.  I've come across numerous webtools but I'd like something a little more automated.  I have the knowledge/ability to do it myself I was just wondering if there was something already out there.  There's no point in re-inventing the wheel each time.</p>\n\n<p>Thanks in advance</p>", "html": "<p>Does anyone know of a good gene-id conversion tool written in Python.  I've come across numerous webtools but I'd like something a little more automated.  I have the knowledge/ability to do it myself I was just wondering if there was something already out there.  There's no point in re-inventing the wheel each time.</p>\n\n<p>Thanks in advance</p>", "lastedit_user": 122}}, {"pk": 259, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 2, "views": 0, "author": 122, "creation_date": "2010-03-11 01:50:51", "content": "<p>I've started using <a href=\"http://www.picloud.com/\" rel=\"nofollow\">PiCloud</a>.  It is a super simple library for Python that facilitates running your code in the cloud.  The client will copy your interpreter's state and then run the code on their Amazon EC2 cluster.  They then charge you based on your program's run time.  They're currently doing beta trials so its actually free (for now).</p>\n\n<p>The only disadvantage is that they abstract everything away from you ... so its actually impossible to run on your own Amazon EC2 cluster.  Its also virtually impossible to run anything that's not Python.</p>\n\n<p>But overall I've found it really easy to implement some of my algorithms using their client.</p>", "html": "<p>I've started using <a href=\"http://www.picloud.com/\" rel=\"nofollow\">PiCloud</a>.  It is a super simple library for Python that facilitates running your code in the cloud.  The client will copy your interpreter's state and then run the code on their Amazon EC2 cluster.  They then charge you based on your program's run time.  They're currently doing beta trials so its actually free (for now).</p>\n\n<p>The only disadvantage is that they abstract everything away from you ... so its actually impossible to run on your own Amazon EC2 cluster.  Its also virtually impossible to run anything that's not Python.</p>\n\n<p>But overall I've found it really easy to implement some of my algorithms using their client.</p>", "lastedit_user": 122}}, {"pk": 260, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:35:58", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-11 03:36:20", "content": "<p>You could automate the access to the website with Python ;-)</p>", "html": "<p>You could automate the access to the website with Python ;-)</p>", "lastedit_user": 2}}, {"pk": 261, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 2, "views": 0, "author": 2, "creation_date": "2010-03-11 03:59:56", "content": "<p>I recall a situation where one of our students (Gue-Su Chang) tracked down a few undocumented behaviors in the Illumina pipeline. Basically once the basecalling is done there are additional filters applied during post-processing to handle a few odd cases. This might be on of those, the score D refers to the original call, but  later that gets overridden by another step. I know that's pretty vague. Long story short: I think the score does not apply here.</p>", "html": "<p>I recall a situation where one of our students (Gue-Su Chang) tracked down a few undocumented behaviors in the Illumina pipeline. Basically once the basecalling is done there are additional filters applied during post-processing to handle a few odd cases. This might be on of those, the score D refers to the original call, but  later that gets overridden by another step. I know that's pretty vague. Long story short: I think the score does not apply here.</p>", "lastedit_user": 2}}, {"pk": 262, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 1, "views": 0, "author": 2, "creation_date": "2010-03-11 04:16:58", "content": "<p>I think combining the quality score is not the intended use case for the p-values. The quality scores refer to the probability of a basecall being incorrect. So during assembly it is an important information. </p>\n\n<p>But once the reads are assembled if we were to keep it, it would need to reflect not just the chance of one base being wrong but that for an entire overlap to occur by chance. That is a different quantity than the original.</p>\n\n<p>This is just an opinion, I could be wrong.</p>", "html": "<p>I think combining the quality score is not the intended use case for the p-values. The quality scores refer to the probability of a basecall being incorrect. So during assembly it is an important information. </p>\n\n<p>But once the reads are assembled if we were to keep it, it would need to reflect not just the chance of one base being wrong but that for an entire overlap to occur by chance. That is a different quantity than the original.</p>\n\n<p>This is just an opinion, I could be wrong.</p>", "lastedit_user": 2}}, {"pk": 263, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 2, "views": 0, "author": 117, "creation_date": "2010-03-11 05:03:27", "content": "<p>There are lots of factors to consider here:</p>\n\n<p>1) What do the quality scores tell you about the base call at that position?</p>\n\n<p>2) How deep is your coverage?  If you've got 1x coverage, it's possible that you may be seeing a miscalled base. If you're taking consensus from 30x coverage, it's much less likely.</p>\n\n<p>3) You're sequencing from a population. It's completely possible that within this population there are individuals with both alleles that you're describing, right?</p>", "html": "<p>There are lots of factors to consider here:</p>\n\n<p>1) What do the quality scores tell you about the base call at that position?</p>\n\n<p>2) How deep is your coverage?  If you've got 1x coverage, it's possible that you may be seeing a miscalled base. If you're taking consensus from 30x coverage, it's much less likely.</p>\n\n<p>3) You're sequencing from a population. It's completely possible that within this population there are individuals with both alleles that you're describing, right?</p>", "lastedit_user": 117}}, {"pk": 264, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 1, "views": 0, "author": 119, "creation_date": "2010-03-11 05:42:31", "content": "<p>As chrisamiller says, it depends on the details of what you're trying to do. <strong>The question is whether what you're seeing is variation due to technical error or due to biological variation.</strong> </p>\n\n<p>However, without any additional information, if you've essentially only got 2 reads per sequence with contradicting information at a given position, you can't really call the base with any degree of certainty. In this case, the use of an ambiguity base call (i.e. Y instead of C or T) would be justified, in my view.</p>", "html": "<p>As chrisamiller says, it depends on the details of what you're trying to do. <strong>The question is whether what you're seeing is variation due to technical error or due to biological variation.</strong> </p>\n\n<p>However, without any additional information, if you've essentially only got 2 reads per sequence with contradicting information at a given position, you can't really call the base with any degree of certainty. In this case, the use of an ambiguity base call (i.e. Y instead of C or T) would be justified, in my view.</p>", "lastedit_user": 119}}, {"pk": 265, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 2, "views": 0, "author": 26, "creation_date": "2010-03-11 08:39:15", "content": "<p>I agree with chrisamiller and PhiS. I'll just add that it also <strong><em>greatly depends on what you will do with your sequence</em></strong>.</p>\n\n<p>I understand from your question that:</p>\n\n<ul>\n<li>You have picked only 2 [bacterial] colonies for sequencing</li>\n<li>These colonies result from the cloning of a PCR product (?)</li>\n<li>They were sequenced using Sanger sequencing</li>\n</ul>\n\n<p>[NOTE: when describing your problem it is very important to give these kind of details, so please correct me if my assumptions are wrong.]</p>\n\n<p>I am guessing that:</p>\n\n<ul>\n<li>You might want to check that the sequence is correct (maybe verifying that your qPCR product is correct)?</li>\n<li>You might be cloning a gene (or fragment thereof) in order to express a protein?</li>\n</ul>\n\n<p>[NOTE: here again, these kind of details are crucial in determining if you can accept an ambiguous base or not. Please add a comment or edit your post if it is yet another purpose]</p>\n\n<p>Finally, as Istvan has asked, you need to be clear as to what the difference is: are you looking at a different base call <strong><em>between the two sequenced colonies</em></strong> or <strong><em>between the forward and reverse sequencing events</em></strong>?</p>\n\n<p>If it is the first (i.e. difference between the two colonies) then you need to check the quality of the call at that base (quality scores if you have them, or look at the chromatogram to see if there's a mistake or a double pic etc.). If they are good quality, then you probably have at least these two different variants of the sequence you're targeting.</p>\n\n<p>If it is the second (i.e. difference between the forward and reverse) then you should also look at the quality in each read. If they are bad quality, sequence again. If they are good quality, then I'm scratching my head making a funny face. Start over from scratch.</p>\n\n<p>Now to your question about leaving it ambiguous or not: </p>\n\n<ul>\n<li>If you just wanted to check that the sequence is \"fairly\" OK, then fine, leave it as a Y.</li>\n<li>If you're checking the amplicon of a qPCR event, then it is crucial to know if you have only one sequence or two different ones (even if it's a SNP). This will change your interpretation.</li>\n<li>If you want to express a protein from this sequence, then you need to check if the difference (T or C) changes the resulting protein sequence: if yes, you need to choose the correct clone. If not, you can go with either.</li>\n</ul>", "html": "<p>I agree with chrisamiller and PhiS. I'll just add that it also <strong><em>greatly depends on what you will do with your sequence</em></strong>.</p>\n\n<p>I understand from your question that:</p>\n\n<ul>\n<li>You have picked only 2 [bacterial] colonies for sequencing</li>\n<li>These colonies result from the cloning of a PCR product (?)</li>\n<li>They were sequenced using Sanger sequencing</li>\n</ul>\n\n<p>[NOTE: when describing your problem it is very important to give these kind of details, so please correct me if my assumptions are wrong.]</p>\n\n<p>I am guessing that:</p>\n\n<ul>\n<li>You might want to check that the sequence is correct (maybe verifying that your qPCR product is correct)?</li>\n<li>You might be cloning a gene (or fragment thereof) in order to express a protein?</li>\n</ul>\n\n<p>[NOTE: here again, these kind of details are crucial in determining if you can accept an ambiguous base or not. Please add a comment or edit your post if it is yet another purpose]</p>\n\n<p>Finally, as Istvan has asked, you need to be clear as to what the difference is: are you looking at a different base call <strong><em>between the two sequenced colonies</em></strong> or <strong><em>between the forward and reverse sequencing events</em></strong>?</p>\n\n<p>If it is the first (i.e. difference between the two colonies) then you need to check the quality of the call at that base (quality scores if you have them, or look at the chromatogram to see if there's a mistake or a double pic etc.). If they are good quality, then you probably have at least these two different variants of the sequence you're targeting.</p>\n\n<p>If it is the second (i.e. difference between the forward and reverse) then you should also look at the quality in each read. If they are bad quality, sequence again. If they are good quality, then I'm scratching my head making a funny face. Start over from scratch.</p>\n\n<p>Now to your question about leaving it ambiguous or not: </p>\n\n<ul>\n<li>If you just wanted to check that the sequence is \"fairly\" OK, then fine, leave it as a Y.</li>\n<li>If you're checking the amplicon of a qPCR event, then it is crucial to know if you have only one sequence or two different ones (even if it's a SNP). This will change your interpretation.</li>\n<li>If you want to express a protein from this sequence, then you need to check if the difference (T or C) changes the resulting protein sequence: if yes, you need to choose the correct clone. If not, you can go with either.</li>\n</ul>", "lastedit_user": 26}}, {"pk": 266, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 8, "views": 0, "author": 38, "creation_date": "2010-03-11 11:03:45", "content": "<p>Writing a small tool to automate access to the website/service is pretty simple. Here's a method I wrote for the UniProt ID mapping service:</p>\n\n<pre><code>import urllib\nimport urllib2\n\ndef uniprot_mapping(fromtype, totype, identifier):\n    base = 'http://www.uniprot.org'\n    tool = 'mapping'\n    params = {'from':fromtype,\n                'to':totype,\n                'format':'tab',\n                'query':identifier,\n    }\n    data = urllib.urlencode(params)\n    url = base+'/'+tool+'?'+data\n    response = urllib2.urlopen(url)\n    return response.read()\n</code></pre>\n\n<p>It's not extensively tested, but should work. You can find a list of fromtypes and totypes here: <a href=\"http://www.uniprot.org/faq/28#id_mapping_examples\" rel=\"nofollow\">http://www.uniprot.org/faq/28#id_mapping_examples</a></p>", "html": "<p>Writing a small tool to automate access to the website/service is pretty simple. Here's a method I wrote for the UniProt ID mapping service:</p>\n\n<pre><code>import urllib\nimport urllib2\n\ndef uniprot_mapping(fromtype, totype, identifier):\n    base = 'http://www.uniprot.org'\n    tool = 'mapping'\n    params = {'from':fromtype,\n                'to':totype,\n                'format':'tab',\n                'query':identifier,\n    }\n    data = urllib.urlencode(params)\n    url = base+'/'+tool+'?'+data\n    response = urllib2.urlopen(url)\n    return response.read()\n</code></pre>\n\n<p>It's not extensively tested, but should work. You can find a list of fromtypes and totypes here: <a href=\"http://www.uniprot.org/faq/28#id_mapping_examples\" rel=\"nofollow\">http://www.uniprot.org/faq/28#id_mapping_examples</a></p>", "lastedit_user": 38}}, {"pk": 267, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 3, "views": 0, "author": 38, "creation_date": "2010-03-11 11:19:47", "content": "<p>The <a href=\"http://www.psb.ugent.be/cbd/papers/BiNGO/\" rel=\"nofollow\">BiNGO plugin</a> for <a href=\"http://www.cytoscape.org/\" rel=\"nofollow\">Cytoscape</a> will allow you to determine term enrichment in a Cytoscape network. It's quite a neat tool.</p>", "html": "<p>The <a href=\"http://www.psb.ugent.be/cbd/papers/BiNGO/\" rel=\"nofollow\">BiNGO plugin</a> for <a href=\"http://www.cytoscape.org/\" rel=\"nofollow\">Cytoscape</a> will allow you to determine term enrichment in a Cytoscape network. It's quite a neat tool.</p>", "lastedit_user": 38}}, {"pk": 268, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 10, "views": 234, "author": 59, "creation_date": "2010-03-12 09:52:17", "content": "<p>What podcasts are the bioinformaticians here listening to that tie in with their work?  </p>\n\n<p>The most relevant podcast that I know of (the currently even more irregular than normal) <a href=\"http://www.c2cbio.com/\" rel=\"nofollow\">Coast to Coast Bio Podcast</a> is still in my list of podcasts.</p>\n\n<p>For programming related topics I still find the <a href=\"http://blog.stackoverflow.com/category/podcasts/\" rel=\"nofollow\">StackOverflow podcast</a> an interesting and engaging listen.</p>\n\n<p>Whilst at one point or another I subscribed to both <a href=\"http://www.nature.com/nature/podcast/\" rel=\"nofollow\">Nature</a> and <a href=\"http://www.sciencemag.org/about/podcast.dtl\" rel=\"nofollow\">Science</a> podcasts for general science I no longer do so.</p>\n\n<p>What podcasts might I be missing out on that other people are enjoying related to their work?</p>", "html": "<p>What podcasts are the bioinformaticians here listening to that tie in with their work?  </p>\n\n<p>The most relevant podcast that I know of (the currently even more irregular than normal) <a href=\"http://www.c2cbio.com/\" rel=\"nofollow\">Coast to Coast Bio Podcast</a> is still in my list of podcasts.</p>\n\n<p>For programming related topics I still find the <a href=\"http://blog.stackoverflow.com/category/podcasts/\" rel=\"nofollow\">StackOverflow podcast</a> an interesting and engaging listen.</p>\n\n<p>Whilst at one point or another I subscribed to both <a href=\"http://www.nature.com/nature/podcast/\" rel=\"nofollow\">Nature</a> and <a href=\"http://www.sciencemag.org/about/podcast.dtl\" rel=\"nofollow\">Science</a> podcasts for general science I no longer do so.</p>\n\n<p>What podcasts might I be missing out on that other people are enjoying related to their work?</p>", "lastedit_user": 59}}, {"pk": 269, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 4, "views": 0, "author": 90, "creation_date": "2010-03-12 11:47:06", "content": "<p>That is a great question. I am not aware of any podcast or vodcast(video) that specifically cover  bioinformatics topics so far.\nBut there are other services that provide bioinformatics content in a audio-visual form:</p>\n\n<p><a href=\"http://www.scivee.tv/\" rel=\"nofollow\">http://www.scivee.tv/</a></p>\n\n<p><a href=\"http://videolectures.net/Top/Computer_Science/Bioinformatics/\" rel=\"nofollow\">http://videolectures.net/Top/Computer_Science/Bioinformatics/</a></p>\n\n<p><a href=\"http://www.bioscreencast.com/\" rel=\"nofollow\">http://www.bioscreencast.com/</a></p>", "html": "<p>That is a great question. I am not aware of any podcast or vodcast(video) that specifically cover  bioinformatics topics so far.\nBut there are other services that provide bioinformatics content in a audio-visual form:</p>\n\n<p><a href=\"http://www.scivee.tv/\" rel=\"nofollow\">http://www.scivee.tv/</a></p>\n\n<p><a href=\"http://videolectures.net/Top/Computer_Science/Bioinformatics/\" rel=\"nofollow\">http://videolectures.net/Top/Computer_Science/Bioinformatics/</a></p>\n\n<p><a href=\"http://www.bioscreencast.com/\" rel=\"nofollow\">http://www.bioscreencast.com/</a></p>", "lastedit_user": 90}}, {"pk": 270, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 4, "views": 0, "author": 38, "creation_date": "2010-03-12 11:55:57", "content": "<p>Related, but not bioinformatics, BBC podcasts:</p>\n\n<ul>\n<li>Material World - popsci <a href=\"http://www.bbc.co.uk/podcasts/series/material/\" rel=\"nofollow\">http://www.bbc.co.uk/podcasts/series/material/</a></li>\n<li>More or Less - statistics etc. <a href=\"http://www.bbc.co.uk/podcasts/series/moreorless\" rel=\"nofollow\">http://www.bbc.co.uk/podcasts/series/moreorless</a></li>\n</ul>\n\n<p>Both have very good presenters, and make for an entertaining listen.</p>", "html": "<p>Related, but not bioinformatics, BBC podcasts:</p>\n\n<ul>\n<li>Material World - popsci <a href=\"http://www.bbc.co.uk/podcasts/series/material/\" rel=\"nofollow\">http://www.bbc.co.uk/podcasts/series/material/</a></li>\n<li>More or Less - statistics etc. <a href=\"http://www.bbc.co.uk/podcasts/series/moreorless\" rel=\"nofollow\">http://www.bbc.co.uk/podcasts/series/moreorless</a></li>\n</ul>\n\n<p>Both have very good presenters, and make for an entertaining listen.</p>", "lastedit_user": 38}}, {"pk": 271, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 2, "views": 89, "author": 125, "creation_date": "2010-03-12 13:58:39", "content": "<p>(Sorry for the long header)</p>\n\n<p>Hello all.</p>\n\n<p>I wish to have a FASTA file (or similar) of a tRNA sequences that are aligned.</p>\n\n<p>Here is an example of a FASTA file I would like to align:</p>\n\n<p><a href=\"http://gtrnadb.ucsc.edu/Aero_pern/aerPer1-tRNAs.fa\" rel=\"nofollow\">http://gtrnadb.ucsc.edu/Aero_pern/aerPer1-tRNAs.fa</a></p>\n\n<p>Here is how the sequence would look aligned:</p>\n\n<p><a href=\"http://gtrnadb.ucsc.edu/Aero_pern/Aero_pern-align.html\" rel=\"nofollow\">http://gtrnadb.ucsc.edu/Aero_pern/Aero_pern-align.html</a></p>\n\n<p>It uses a software called COVE, which can be found here:</p>\n\n<p><a href=\"http://selab.janelia.org/software.html\" rel=\"nofollow\">http://selab.janelia.org/software.html</a></p>\n\n<p>And it is said to do it by doing: \"Structural alignments are generated by aligning tRNA sequences against domain-specific tRNA covariance models with the use of COVE.\"</p>\n\n<p>Which leads me to my questions:</p>\n\n<ol>\n<li>Where might I find the \"domain-specific tRNA\" to run the COVE model with ?</li>\n<li>How can I do this on windows ?</li>\n<li>Is there a better way to do this alignment ?</li>\n</ol>\n\n<p>This is my first question, and I am very new to bioinformatics, so I am sorry if I am missing something very basic, or am asking something to which not many people would know to answer.</p>\n\n<p>Thanks in advance,</p>\n\n<p>Tal</p>", "html": "<p>(Sorry for the long header)</p>\n\n<p>Hello all.</p>\n\n<p>I wish to have a FASTA file (or similar) of a tRNA sequences that are aligned.</p>\n\n<p>Here is an example of a FASTA file I would like to align:</p>\n\n<p><a href=\"http://gtrnadb.ucsc.edu/Aero_pern/aerPer1-tRNAs.fa\" rel=\"nofollow\">http://gtrnadb.ucsc.edu/Aero_pern/aerPer1-tRNAs.fa</a></p>\n\n<p>Here is how the sequence would look aligned:</p>\n\n<p><a href=\"http://gtrnadb.ucsc.edu/Aero_pern/Aero_pern-align.html\" rel=\"nofollow\">http://gtrnadb.ucsc.edu/Aero_pern/Aero_pern-align.html</a></p>\n\n<p>It uses a software called COVE, which can be found here:</p>\n\n<p><a href=\"http://selab.janelia.org/software.html\" rel=\"nofollow\">http://selab.janelia.org/software.html</a></p>\n\n<p>And it is said to do it by doing: \"Structural alignments are generated by aligning tRNA sequences against domain-specific tRNA covariance models with the use of COVE.\"</p>\n\n<p>Which leads me to my questions:</p>\n\n<ol>\n<li>Where might I find the \"domain-specific tRNA\" to run the COVE model with ?</li>\n<li>How can I do this on windows ?</li>\n<li>Is there a better way to do this alignment ?</li>\n</ol>\n\n<p>This is my first question, and I am very new to bioinformatics, so I am sorry if I am missing something very basic, or am asking something to which not many people would know to answer.</p>\n\n<p>Thanks in advance,</p>\n\n<p>Tal</p>", "lastedit_user": 125}}, {"pk": 272, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 4, "views": 0, "author": 91, "creation_date": "2010-03-12 14:17:58", "content": "<p>I enjoy <a href=\"http://twit.tv/FIB\" rel=\"nofollow\">Futures in Biotech</a>, which is about life science in general but does touch on bioinformatics sometimes.</p>", "html": "<p>I enjoy <a href=\"http://twit.tv/FIB\" rel=\"nofollow\">Futures in Biotech</a>, which is about life science in general but does touch on bioinformatics sometimes.</p>", "lastedit_user": 91}}, {"pk": 273, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 3, "views": 0, "author": 2, "creation_date": "2010-03-12 15:51:14", "content": "<ol>\n<li>The site is a little short on information but it gave me the impression that it will build the covariance model from the multiple sequence alignment itself. Try contacting the author for more information.</li>\n<li>You can compile cove on Windows under <a href=\"http://www.cygwin.com/\" rel=\"nofollow\">Cygwin</a>, I just gave it a try and compiled it with no problem.</li>\n</ol>", "html": "<ol>\n<li>The site is a little short on information but it gave me the impression that it will build the covariance model from the multiple sequence alignment itself. Try contacting the author for more information.</li>\n<li>You can compile cove on Windows under <a href=\"http://www.cygwin.com/\" rel=\"nofollow\">Cygwin</a>, I just gave it a try and compiled it with no problem.</li>\n</ol>", "lastedit_user": 2}}, {"pk": 274, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 4, "views": 0, "author": 117, "creation_date": "2010-03-12 16:23:51", "content": "<p>It's not bioinformatic-specific, but <a href=\"http://www.wnyc.org/shows/radiolab/\" rel=\"nofollow\">RadioLab</a> is a great science show. I especially like listening on days when I'm frustrated with my work - it helps me remember why I have a passion for science.</p>", "html": "<p>It's not bioinformatic-specific, but <a href=\"http://www.wnyc.org/shows/radiolab/\" rel=\"nofollow\">RadioLab</a> is a great science show. I especially like listening on days when I'm frustrated with my work - it helps me remember why I have a passion for science.</p>", "lastedit_user": 117}}, {"pk": 275, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 3, "views": 0, "author": 55, "creation_date": "2010-03-12 16:24:10", "content": "<p>I had a quick look into the documentation of the software. If you donwload and unpack the soucecode archive, there is a Guide.tex file that can be compiled with Latex, you could look into this. So, to answer your questions partially without trying anything myself: </p>\n\n<ol>\n<li><p>Where do I find the covariance Models to run COVE with? As Istvan said: you have to make them yourself. From the manual:\nUsing these programs, you can:</p>\n\n<ul>\n<li>generate new models, by training them on example sequences (covet) ....</li>\n</ul></li>\n<li><p>See Istvan's answer</p></li>\n<li><p>Possibly not:</p>\n\n<p>The tRNA identification program  tRNAscan-SE is based on a tRNA CM and COVE  (Lowe and Eddy, 1997). </p></li>\n</ol>\n\n<p>And this program is still state-of-the art in tRNA discovery. If you want to look at RNAs in general an learn about their structure then <a href=\"http://rfam.janelia.org/\" rel=\"nofollow\">Rfam</a>/Infernal is nice.</p>\n\n<p>If you are interested in RNA structure and visualization the <a href=\"http://bibiserv.techfak.uni-bielefeld.de/bibi/Tools_RNA_Studio.html\" rel=\"nofollow\">BiBiServ RNA-Studio</a> are an interesting resource.</p>", "html": "<p>I had a quick look into the documentation of the software. If you donwload and unpack the soucecode archive, there is a Guide.tex file that can be compiled with Latex, you could look into this. So, to answer your questions partially without trying anything myself: </p>\n\n<ol>\n<li><p>Where do I find the covariance Models to run COVE with? As Istvan said: you have to make them yourself. From the manual:\nUsing these programs, you can:</p>\n\n<ul>\n<li>generate new models, by training them on example sequences (covet) ....</li>\n</ul></li>\n<li><p>See Istvan's answer</p></li>\n<li><p>Possibly not:</p>\n\n<p>The tRNA identification program  tRNAscan-SE is based on a tRNA CM and COVE  (Lowe and Eddy, 1997). </p></li>\n</ol>\n\n<p>And this program is still state-of-the art in tRNA discovery. If you want to look at RNAs in general an learn about their structure then <a href=\"http://rfam.janelia.org/\" rel=\"nofollow\">Rfam</a>/Infernal is nice.</p>\n\n<p>If you are interested in RNA structure and visualization the <a href=\"http://bibiserv.techfak.uni-bielefeld.de/bibi/Tools_RNA_Studio.html\" rel=\"nofollow\">BiBiServ RNA-Studio</a> are an interesting resource.</p>", "lastedit_user": 55}}, {"pk": 276, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 3, "views": 0, "author": 62, "creation_date": "2010-03-12 16:31:28", "content": "<p>There is a recent review:</p>\n\n<p>Computational analysis of tRNA identity\nFEBS Letters, Volume 584, Issue 2, Pages 325-333</p>\n\n<p>D. Ardell</p>\n\n<p><a href=\"http://dx.doi.org/10.1016/j.febslet.2009.11.084\" rel=\"nofollow\">http://dx.doi.org/10.1016/j.febslet.2009.11.084</a></p>\n\n<p>You may check if COVE is your only option. </p>", "html": "<p>There is a recent review:</p>\n\n<p>Computational analysis of tRNA identity\nFEBS Letters, Volume 584, Issue 2, Pages 325-333</p>\n\n<p>D. Ardell</p>\n\n<p><a href=\"http://dx.doi.org/10.1016/j.febslet.2009.11.084\" rel=\"nofollow\">http://dx.doi.org/10.1016/j.febslet.2009.11.084</a></p>\n\n<p>You may check if COVE is your only option. </p>", "lastedit_user": 62}}, {"pk": 277, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 2, "views": 158, "author": 53, "creation_date": "2010-03-12 17:04:23", "content": "<p>I'd like to visualise the results of a BLAST search in a genome browser. Is there a simple way to get the results in GFF format without having to write a parser myself?</p>", "html": "<p>I'd like to visualise the results of a BLAST search in a genome browser. Is there a simple way to get the results in GFF format without having to write a parser myself?</p>", "lastedit_user": 53}}, {"pk": 278, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 6, "views": 0, "author": 53, "creation_date": "2010-03-12 17:07:53", "content": "<p>I like <a href=\"http://thechangelog.com/\" rel=\"nofollow\">The Changelog</a>. It highlights interesting and useful open source software with a slight ruby slant.</p>", "html": "<p>I like <a href=\"http://thechangelog.com/\" rel=\"nofollow\">The Changelog</a>. It highlights interesting and useful open source software with a slight ruby slant.</p>", "lastedit_user": 53}}, {"pk": 279, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 2, "views": 0, "author": 30, "creation_date": "2010-03-12 17:18:08", "content": "<p>I found this via google: <a href=\"http://jperl.googlecode.com/svn-history/r16/trunk/Blast2Gff.pl\" rel=\"nofollow\">http://jperl.googlecode.com/svn-history/r16/trunk/Blast2Gff.pl</a></p>\n\n<p>else I would save my blast result as <strong>XML</strong> and transform it to GFF with with a (should be) simple <strong>XSLT</strong> stylesheet. As an example, you can have a look at my 'old' stylesheet blast2svg: <a href=\"http://code.google.com/p/lindenb/source/browse/trunk/src/xsl/blast2svg.xsl\" rel=\"nofollow\">http://code.google.com/p/lindenb/source/browse/trunk/src/xsl/blast2svg.xsl</a>\nPierre</p>", "html": "<p>I found this via google: <a href=\"http://jperl.googlecode.com/svn-history/r16/trunk/Blast2Gff.pl\" rel=\"nofollow\">http://jperl.googlecode.com/svn-history/r16/trunk/Blast2Gff.pl</a></p>\n\n<p>else I would save my blast result as <strong>XML</strong> and transform it to GFF with with a (should be) simple <strong>XSLT</strong> stylesheet. As an example, you can have a look at my 'old' stylesheet blast2svg: <a href=\"http://code.google.com/p/lindenb/source/browse/trunk/src/xsl/blast2svg.xsl\" rel=\"nofollow\">http://code.google.com/p/lindenb/source/browse/trunk/src/xsl/blast2svg.xsl</a>\nPierre</p>", "lastedit_user": 30}}, {"pk": 280, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:35:58", "score": 0, "views": 0, "author": 23, "creation_date": "2010-03-12 17:29:05", "content": "<p>Have you tried these scripts: <a href=\"http://gmod.org/wiki/Load_BLAST_Into_Chado\" rel=\"nofollow\">http://gmod.org/wiki/Load_BLAST_Into_Chado</a>, <a href=\"http://www.bioperl.org/pipermail/bioperl-l/2002-November/010223.html\" rel=\"nofollow\">http://www.bioperl.org/pipermail/bioperl-l/2002-November/010223.html</a> ??</p>\n\n<p>maybe the <a href=\"http://genome.ucsc.edu/FAQ/FAQformat.html#format2\" rel=\"nofollow\">PSL</a> format is better to represent an alignment. You can also look at the <a href=\"http://genome.ucsc.edu/FAQ/FAQformat.html#format1\" rel=\"nofollow\">BED</a> format so later you can play with <a href=\"http://code.google.com/p/bedtools/\" rel=\"nofollow\">BedTools</a></p>", "html": "<p>Have you tried these scripts: <a href=\"http://gmod.org/wiki/Load_BLAST_Into_Chado\" rel=\"nofollow\">http://gmod.org/wiki/Load_BLAST_Into_Chado</a>, <a href=\"http://www.bioperl.org/pipermail/bioperl-l/2002-November/010223.html\" rel=\"nofollow\">http://www.bioperl.org/pipermail/bioperl-l/2002-November/010223.html</a> ??</p>\n\n<p>maybe the <a href=\"http://genome.ucsc.edu/FAQ/FAQformat.html#format2\" rel=\"nofollow\">PSL</a> format is better to represent an alignment. You can also look at the <a href=\"http://genome.ucsc.edu/FAQ/FAQformat.html#format1\" rel=\"nofollow\">BED</a> format so later you can play with <a href=\"http://code.google.com/p/bedtools/\" rel=\"nofollow\">BedTools</a></p>", "lastedit_user": 23}}, {"pk": 281, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:04", "score": 2, "views": 0, "author": 62, "creation_date": "2010-03-12 18:12:04", "content": "<p>Start with tabulated blast output myfile.blast.out. Then check two-liners from:</p>\n\n<p><a href=\"http://bergman-lab.blogspot.com/2009/12/ncbi-blast-tabular-output-format-fields.html\" rel=\"nofollow\">http://bergman-lab.blogspot.com/2009/12/ncbi-blast-tabular-output-format-fields.html</a></p>\n\n<p>Few lines tooutput proper gff are missing, but you may either go for minimalistic gff or try to encode everything in column 9. Also you may try validating your gff3 here:</p>\n\n<p><a href=\"http://modencode.oicr.on.ca/cgi-bin/validate_gff3_online\" rel=\"nofollow\">http://modencode.oicr.on.ca/cgi-bin/validate_gff3_online</a></p>", "html": "<p>Start with tabulated blast output myfile.blast.out. Then check two-liners from:</p>\n\n<p><a href=\"http://bergman-lab.blogspot.com/2009/12/ncbi-blast-tabular-output-format-fields.html\" rel=\"nofollow\">http://bergman-lab.blogspot.com/2009/12/ncbi-blast-tabular-output-format-fields.html</a></p>\n\n<p>Few lines tooutput proper gff are missing, but you may either go for minimalistic gff or try to encode everything in column 9. Also you may try validating your gff3 here:</p>\n\n<p><a href=\"http://modencode.oicr.on.ca/cgi-bin/validate_gff3_online\" rel=\"nofollow\">http://modencode.oicr.on.ca/cgi-bin/validate_gff3_online</a></p>", "lastedit_user": 62}}, {"pk": 282, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 2, "views": 0, "author": 122, "creation_date": "2010-03-13 04:51:33", "content": "<p>In case anyone comes by this later I've made a simple python module for doing this sort of converting.  You can find it on GitHub: <a href=\"http://github.com/JudoWill/IDConverter\" rel=\"nofollow\">http://github.com/JudoWill/IDConverter</a></p>\n\n<p>Feel free make comments and provide suggestions.</p>", "html": "<p>In case anyone comes by this later I've made a simple python module for doing this sort of converting.  You can find it on GitHub: <a href=\"http://github.com/JudoWill/IDConverter\" rel=\"nofollow\">http://github.com/JudoWill/IDConverter</a></p>\n\n<p>Feel free make comments and provide suggestions.</p>", "lastedit_user": 122}}, {"pk": 283, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 2, "views": 298, "author": 31, "creation_date": "2010-03-13 15:46:57", "content": "<p>To clarify, I am a biochemist, trained in molecular evolution since undergrad and I changed my particular field of work to large scale phylogenetic analysis in the grad school. </p>\n\n<p>So, to me, building and interpreting a phylogenetic tree from a family of genes can be considered a trivial task in my subfield (actually, this should be be trivial to any people with a background in biology), but to integrate functional data and increase the scale of the analysis to whole genomes and dozen/hundreds of species would be a little more challenging. </p>\n\n<p>I am really curious since bioinformatics and computational biology has had a fast growing in the last years, many paradigms have changed in what is trivial and what is challenging in his many subfields. </p>", "html": "<p>To clarify, I am a biochemist, trained in molecular evolution since undergrad and I changed my particular field of work to large scale phylogenetic analysis in the grad school. </p>\n\n<p>So, to me, building and interpreting a phylogenetic tree from a family of genes can be considered a trivial task in my subfield (actually, this should be be trivial to any people with a background in biology), but to integrate functional data and increase the scale of the analysis to whole genomes and dozen/hundreds of species would be a little more challenging. </p>\n\n<p>I am really curious since bioinformatics and computational biology has had a fast growing in the last years, many paradigms have changed in what is trivial and what is challenging in his many subfields. </p>", "lastedit_user": 31}}, {"pk": 284, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 4, "views": 0, "author": 30, "creation_date": "2010-03-13 16:41:18", "content": "<p><strong>Challenging</strong>:</p>\n\n<ul>\n<li>Using other's code</li>\n<li>understanding why a technology/paper/language/db is worth looking/testing</li>\n<li>understanding theoretical papers</li>\n<li>making my code reusable</li>\n<li>being my own learning mentor</li>\n<li>working with 'big-data'</li>\n<li>(...)</li>\n</ul>\n\n<p><strong>Trivial</strong>:</p>\n\n<ul>\n<li>working with 'big-data' :-)</li>\n<li>Using SQL/C/C++/Java/etc... etc...</li>\n<li>using some common resources related to by field (dbsnp...)</li>\n<li>Parsing data</li>\n<li>sharing</li>\n<li>(...)</li>\n</ul>", "html": "<p><strong>Challenging</strong>:</p>\n\n<ul>\n<li>Using other's code</li>\n<li>understanding why a technology/paper/language/db is worth looking/testing</li>\n<li>understanding theoretical papers</li>\n<li>making my code reusable</li>\n<li>being my own learning mentor</li>\n<li>working with 'big-data'</li>\n<li>(...)</li>\n</ul>\n\n<p><strong>Trivial</strong>:</p>\n\n<ul>\n<li>working with 'big-data' :-)</li>\n<li>Using SQL/C/C++/Java/etc... etc...</li>\n<li>using some common resources related to by field (dbsnp...)</li>\n<li>Parsing data</li>\n<li>sharing</li>\n<li>(...)</li>\n</ul>", "lastedit_user": 30}}, {"pk": 285, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 9, "views": 0, "author": 117, "creation_date": "2010-03-13 17:33:54", "content": "<p>Off the top of my head:</p>\n\n<p><strong>Challenging and frustrating:</strong>  </p>\n\n<ul>\n<li>Sifting through the avalanche of new\npapers and tools to find ones that\nare immediately relevant  </li>\n</ul>\n\n<p><strong>Challenging and interesting:</strong>  </p>\n\n<ul>\n<li>Given whole-genome assays, deciding which\nof the hundreds of mutations are\nimportant and potentially causative</li>\n<li>Integrating results from assays that\nprovide different insights and\npotentially conflicting information.</li>\n<li>writing code using a parallel (or map/reduce) paradigm, so that it won't take years to run</li>\n</ul>\n\n<p><strong>Trivial, but tedious:</strong>  </p>\n\n<ul>\n<li>constantly munging data files from one poorly defined format to another</li>\n</ul>", "html": "<p>Off the top of my head:</p>\n\n<p><strong>Challenging and frustrating:</strong>  </p>\n\n<ul>\n<li>Sifting through the avalanche of new\npapers and tools to find ones that\nare immediately relevant  </li>\n</ul>\n\n<p><strong>Challenging and interesting:</strong>  </p>\n\n<ul>\n<li>Given whole-genome assays, deciding which\nof the hundreds of mutations are\nimportant and potentially causative</li>\n<li>Integrating results from assays that\nprovide different insights and\npotentially conflicting information.</li>\n<li>writing code using a parallel (or map/reduce) paradigm, so that it won't take years to run</li>\n</ul>\n\n<p><strong>Trivial, but tedious:</strong>  </p>\n\n<ul>\n<li>constantly munging data files from one poorly defined format to another</li>\n</ul>", "lastedit_user": 117}}, {"pk": 286, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 2, "views": 0, "author": 55, "creation_date": "2010-03-13 20:46:52", "content": "<blockquote>\n  <p><a href=\"http://jperl.googlecode.com/svn-history/r16/trunk/Blast2Gff.pl\" rel=\"nofollow\">http://jperl.googlecode.com/svn-history/r16/trunk/Blast2Gff.pl</a></p>\n</blockquote>\n\n<p>You can use the script Pierre found swith a slight modification, actually it is a bit crude and does no real error checking but it works. The error is it does not work if the blast file has a header like this:</p>\n\n<pre><code># BLASTN 2.2.21 [Jun-14-2009]\n# Query: 16383 sequences\n# Database: genomedata/GenomeOfDeath.fas\n# Fields: Query id, Subject id, % identity, alignment length, mismatches, gap openings, q. start, q. end, s. start, s. end, e-value, bit score\nGeneOfDeath  GenomeOfDeath  100.00  295     0       0       1       295     152626  152920  4e-168   585\n</code></pre>\n\n<p>So, one should filter out lines beginning with \"#\" and it does no harm to skip lines which \nare empty or contain only white spaces.</p>\n\n<p>So edit the file Blast2Gff.pl: in line 149 add:</p>\n\n<pre><code> next if (/^\\#/ || /^\\s*$/); # filter comments and empty lines\n</code></pre>\n\n<p>Such that this part looks like below, then try again.</p>\n\n<pre><code>while (&lt;BLASTIN&gt;)\n{\n\n  next if (/^\\#/ || /^\\s*$/); # filter comments and empty lines\n\n$HitNum++;\n\nmy ($QryId, $SubId, $PID, $Len, \n    $MisMatch, $GapOpen, \n    $QStart,$QEnd, $SStart, $SEnd,\n    $EVal, $BitScore) = split(/\\t/);\n</code></pre>", "html": "<blockquote>\n  <p><a href=\"http://jperl.googlecode.com/svn-history/r16/trunk/Blast2Gff.pl\" rel=\"nofollow\">http://jperl.googlecode.com/svn-history/r16/trunk/Blast2Gff.pl</a></p>\n</blockquote>\n\n<p>You can use the script Pierre found swith a slight modification, actually it is a bit crude and does no real error checking but it works. The error is it does not work if the blast file has a header like this:</p>\n\n<pre><code># BLASTN 2.2.21 [Jun-14-2009]\n# Query: 16383 sequences\n# Database: genomedata/GenomeOfDeath.fas\n# Fields: Query id, Subject id, % identity, alignment length, mismatches, gap openings, q. start, q. end, s. start, s. end, e-value, bit score\nGeneOfDeath  GenomeOfDeath  100.00  295     0       0       1       295     152626  152920  4e-168   585\n</code></pre>\n\n<p>So, one should filter out lines beginning with \"#\" and it does no harm to skip lines which \nare empty or contain only white spaces.</p>\n\n<p>So edit the file Blast2Gff.pl: in line 149 add:</p>\n\n<pre><code> next if (/^\\#/ || /^\\s*$/); # filter comments and empty lines\n</code></pre>\n\n<p>Such that this part looks like below, then try again.</p>\n\n<pre><code>while (&lt;BLASTIN&gt;)\n{\n\n  next if (/^\\#/ || /^\\s*$/); # filter comments and empty lines\n\n$HitNum++;\n\nmy ($QryId, $SubId, $PID, $Len, \n    $MisMatch, $GapOpen, \n    $QStart,$QEnd, $SStart, $SEnd,\n    $EVal, $BitScore) = split(/\\t/);\n</code></pre>", "lastedit_user": 55}}, {"pk": 287, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 2, "views": 91, "author": 131, "creation_date": "2010-03-14 16:26:35", "content": "<p>Can anybody point me to a resource that provides information on functionally redundant genes? I have been pointed towards the use of GOA (http://www.ebi.ac.uk/GOA/) as one approach. Would this provide sufficient 'resolution' to identify functionally equivalent genes? My thinking is that if two genes share the same GO term and the GO term is a leaf node, that might be useful. </p>\n\n<p>Any pointers would be appreciated</p>", "html": "<p>Can anybody point me to a resource that provides information on functionally redundant genes? I have been pointed towards the use of GOA (http://www.ebi.ac.uk/GOA/) as one approach. Would this provide sufficient 'resolution' to identify functionally equivalent genes? My thinking is that if two genes share the same GO term and the GO term is a leaf node, that might be useful. </p>\n\n<p>Any pointers would be appreciated</p>", "lastedit_user": 131}}, {"pk": 288, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 5, "views": 0, "author": 117, "creation_date": "2010-03-14 16:38:32", "content": "<p>What exactly do you mean by functional redundancy? </p>\n\n<ul>\n<li>Two proteins may both metabolize some sugar, but send different products down different pathways. Are they redundant?</li>\n<li>Two different pathways can be used to produce the same end product from some metabolite.  Are all of the genes in these two pathways redundant? </li>\n<li>What about proteins that have multiple functions? How do you handle <em>partial</em> redundancy?</li>\n</ul>\n\n<p>My take:<br>\nThere are no solid and complete answers to these questions at this point, but I think you could justify using GO terms of a certain depth, as you suggest. Just justify your assumptions, acknowledge that any such attempt is going to be full of errors and omissions, and be careful about  drawing too many hard conclusions from the results.</p>", "html": "<p>What exactly do you mean by functional redundancy? </p>\n\n<ul>\n<li>Two proteins may both metabolize some sugar, but send different products down different pathways. Are they redundant?</li>\n<li>Two different pathways can be used to produce the same end product from some metabolite.  Are all of the genes in these two pathways redundant? </li>\n<li>What about proteins that have multiple functions? How do you handle <em>partial</em> redundancy?</li>\n</ul>\n\n<p>My take:<br>\nThere are no solid and complete answers to these questions at this point, but I think you could justify using GO terms of a certain depth, as you suggest. Just justify your assumptions, acknowledge that any such attempt is going to be full of errors and omissions, and be careful about  drawing too many hard conclusions from the results.</p>", "lastedit_user": 117}}, {"pk": 289, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 4, "views": 0, "author": 135, "creation_date": "2010-03-15 00:32:45", "content": "<p>From the same people as Futures in Biotech: <a href=\"http://twit.tv/FLOSS\" rel=\"nofollow\">Floss weekly</a>. About free &amp; open software, they had an <a href=\"http://twit.tv/floss96\" rel=\"nofollow\">episode</a> on Bioperl a while ago.</p>", "html": "<p>From the same people as Futures in Biotech: <a href=\"http://twit.tv/FLOSS\" rel=\"nofollow\">Floss weekly</a>. About free &amp; open software, they had an <a href=\"http://twit.tv/floss96\" rel=\"nofollow\">episode</a> on Bioperl a while ago.</p>", "lastedit_user": 135}}, {"pk": 290, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 1, "views": 62, "author": 136, "creation_date": "2010-03-15 07:11:09", "content": "<p><em>Bringing in my questions from <a href=\"http://stackoverflow.com/questions/1432467/performing-blast-smithwaterman-searches-directly-from-my-application\">stackoverflow</a>:</em></p>\n\n<p>I'm working on a small application and thinking about integrating BLAST or other local alignment searches into my application. My searching has only brought up programs, which need to be installed and called as an external program.</p>\n\n<p>Is there a way short of me implementing it from scratch? Any pre-made library perhaps?</p>", "html": "<p><em>Bringing in my questions from <a href=\"http://stackoverflow.com/questions/1432467/performing-blast-smithwaterman-searches-directly-from-my-application\">stackoverflow</a>:</em></p>\n\n<p>I'm working on a small application and thinking about integrating BLAST or other local alignment searches into my application. My searching has only brought up programs, which need to be installed and called as an external program.</p>\n\n<p>Is there a way short of me implementing it from scratch? Any pre-made library perhaps?</p>", "lastedit_user": 136}}, {"pk": 291, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 2, "views": 0, "author": 136, "creation_date": "2010-03-15 07:12:01", "content": "<p>I found the <a href=\"http://www.ncbi.nlm.nih.gov/IEB/ToolBox/CPP_DOC/\" rel=\"nofollow\">NCBI C++ Toolkit</a> to be quite useful.</p>", "html": "<p>I found the <a href=\"http://www.ncbi.nlm.nih.gov/IEB/ToolBox/CPP_DOC/\" rel=\"nofollow\">NCBI C++ Toolkit</a> to be quite useful.</p>", "lastedit_user": 136}}, {"pk": 292, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 4, "views": 0, "author": 119, "creation_date": "2010-03-15 12:12:24", "content": "<p>Also the <a href=\"http://www.seqan.de/\" rel=\"nofollow\">SeqAn</a> C++ library may be useful to some.</p>", "html": "<p>Also the <a href=\"http://www.seqan.de/\" rel=\"nofollow\">SeqAn</a> C++ library may be useful to some.</p>", "lastedit_user": 119}}, {"pk": 293, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 2, "views": 0, "author": 138, "creation_date": "2010-03-15 15:02:35", "content": "<p>These are the big challenge(s) for me:</p>\n\n<ol>\n<li>Ask the relevant questions and find/develop the proper/satisfactory solutions to obtain meaningful results.</li>\n<li>Determine what is relevant (what really matters).</li>\n<li>Understand what and why is proper, merely sufficient or unsatisfactory.</li>\n<li>Interpret the results without bias and preconceptions.</li>\n</ol>", "html": "<p>These are the big challenge(s) for me:</p>\n\n<ol>\n<li>Ask the relevant questions and find/develop the proper/satisfactory solutions to obtain meaningful results.</li>\n<li>Determine what is relevant (what really matters).</li>\n<li>Understand what and why is proper, merely sufficient or unsatisfactory.</li>\n<li>Interpret the results without bias and preconceptions.</li>\n</ol>", "lastedit_user": 138}}, {"pk": 294, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 4, "views": 0, "author": 35, "creation_date": "2010-03-15 16:56:44", "content": "<p><strong>Trivial</strong></p>\n\n<ul>\n<li>Creating lists of genes that might be of interest in a given system</li>\n<li>Integrating several experiments with one kind of data</li>\n<li>Talking with people in my own sub-disciplines of biology</li>\n<li>Thinking of cool experiments to do</li>\n</ul>\n\n<p><strong>Challenging</strong></p>\n\n<ul>\n<li>Determining which genes in a list are important for a process and integrating those genes in to current domain-specific understanding in a meaningful way</li>\n<li>Integrating several experiments across totally different kinds of data</li>\n<li>Talking with people in other sub-disciplines of biology and actually understanding each other well enough to collaborate effectively</li>\n<li>Thinking of the most important and useful questions to ask</li>\n<li>Getting funding</li>\n</ul>", "html": "<p><strong>Trivial</strong></p>\n\n<ul>\n<li>Creating lists of genes that might be of interest in a given system</li>\n<li>Integrating several experiments with one kind of data</li>\n<li>Talking with people in my own sub-disciplines of biology</li>\n<li>Thinking of cool experiments to do</li>\n</ul>\n\n<p><strong>Challenging</strong></p>\n\n<ul>\n<li>Determining which genes in a list are important for a process and integrating those genes in to current domain-specific understanding in a meaningful way</li>\n<li>Integrating several experiments across totally different kinds of data</li>\n<li>Talking with people in other sub-disciplines of biology and actually understanding each other well enough to collaborate effectively</li>\n<li>Thinking of the most important and useful questions to ask</li>\n<li>Getting funding</li>\n</ul>", "lastedit_user": 35}}, {"pk": 295, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 2, "views": 0, "author": 2, "creation_date": "2010-03-15 18:45:16", "content": "<p>Most challenging: processing contradictory information and identifying the credible evidence.</p>", "html": "<p>Most challenging: processing contradictory information and identifying the credible evidence.</p>", "lastedit_user": 2}}, {"pk": 296, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 12, "views": 304, "author": 2, "creation_date": "2010-03-15 18:57:44", "content": "<p>What do you recommend as the most appropriate site to advertise (or look for) bioinformatics related job openings.</p>", "html": "<p>What do you recommend as the most appropriate site to advertise (or look for) bioinformatics related job openings.</p>", "lastedit_user": 2}}, {"pk": 297, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 3, "views": 0, "author": 23, "creation_date": "2010-03-15 19:27:51", "content": "<p>I think it is easier to look at the home pages of the laboratories that work in a topic of your interest and ask; however, there are a few generic places:</p>\n\n<ul>\n<li><a href=\"http://www.nature.com/naturejobs/index.html\" rel=\"nofollow\">Nature Jobs</a>, for example <a href=\"http://www.nature.com/naturejobs/science/searches/13075465-all-bioinformatics-jobs#search-results\" rel=\"nofollow\">these</a></li>\n<li><a href=\"http://www.linkedin.com/\" rel=\"nofollow\">Linked In</a>, in particular groups like <a href=\"http://www.linkedin.com/groups?gid=65325&amp;trk=anetsrch_name&amp;goback=%2Egdr_1268681143545_1\" rel=\"nofollow\">Bioinformatics Geeks</a> or <a href=\"http://www.linkedin.com/groups?gid=96837&amp;trk=anetsrch_name&amp;goback=%2Egdr_1268681143545_1\" rel=\"nofollow\">Bioinformatics Computing</a></li>\n</ul>", "html": "<p>I think it is easier to look at the home pages of the laboratories that work in a topic of your interest and ask; however, there are a few generic places:</p>\n\n<ul>\n<li><a href=\"http://www.nature.com/naturejobs/index.html\" rel=\"nofollow\">Nature Jobs</a>, for example <a href=\"http://www.nature.com/naturejobs/science/searches/13075465-all-bioinformatics-jobs#search-results\" rel=\"nofollow\">these</a></li>\n<li><a href=\"http://www.linkedin.com/\" rel=\"nofollow\">Linked In</a>, in particular groups like <a href=\"http://www.linkedin.com/groups?gid=65325&amp;trk=anetsrch_name&amp;goback=%2Egdr_1268681143545_1\" rel=\"nofollow\">Bioinformatics Geeks</a> or <a href=\"http://www.linkedin.com/groups?gid=96837&amp;trk=anetsrch_name&amp;goback=%2Egdr_1268681143545_1\" rel=\"nofollow\">Bioinformatics Computing</a></li>\n</ul>", "lastedit_user": 23}}, {"pk": 298, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 6, "views": 0, "author": 30, "creation_date": "2010-03-15 19:52:48", "content": "<ul>\n<li>Biojobs on FriendFeed: <a href=\"http://friendfeed.com/biojobs\" rel=\"nofollow\">http://friendfeed.com/biojobs</a></li>\n<li>The (French) Bioinfo mailing list (but many international positions) <a href=\"http://listes.sfbi.fr/wws/info/bioinfo\" rel=\"nofollow\">http://listes.sfbi.fr/wws/info/bioinfo</a></li>\n<li><a href=\"http://www.nature.com/naturejobs/index.html\" rel=\"nofollow\">http://www.nature.com/naturejobs/index.html</a> (nature jobs)</li>\n<li>some yahoo pipes .e.g. <a href=\"http://pipes.yahoo.com/pipes/search?q=bioinformatics+job&amp;x=0&amp;y=0\" rel=\"nofollow\">http://pipes.yahoo.com/pipes/search?q=bioinformatics+job&amp;x=0&amp;y=0</a></li>\n<li>(...)</li>\n</ul>", "html": "<ul>\n<li>Biojobs on FriendFeed: <a href=\"http://friendfeed.com/biojobs\" rel=\"nofollow\">http://friendfeed.com/biojobs</a></li>\n<li>The (French) Bioinfo mailing list (but many international positions) <a href=\"http://listes.sfbi.fr/wws/info/bioinfo\" rel=\"nofollow\">http://listes.sfbi.fr/wws/info/bioinfo</a></li>\n<li><a href=\"http://www.nature.com/naturejobs/index.html\" rel=\"nofollow\">http://www.nature.com/naturejobs/index.html</a> (nature jobs)</li>\n<li>some yahoo pipes .e.g. <a href=\"http://pipes.yahoo.com/pipes/search?q=bioinformatics+job&amp;x=0&amp;y=0\" rel=\"nofollow\">http://pipes.yahoo.com/pipes/search?q=bioinformatics+job&amp;x=0&amp;y=0</a></li>\n<li>(...)</li>\n</ul>", "lastedit_user": 30}}, {"pk": 299, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 4, "views": 0, "author": 68, "creation_date": "2010-03-15 20:20:37", "content": "<ol>\n<li><p>Some companies do not longer publish\ntheir vacancies in newspapers but\ninstead use their own vacancy\nweb-site. This is helpful and\nup-to-date (well, should be), but\nthe counterside is that there's no\nlonger a central place where you can\nfind all actual vacant jobs. So if\nyou are searching for a job you have\nto check out a score of websites on\na regular base. To make this\nsomewhat easier the <a href=\"http://www.geneyous.nl/jobreport/\" rel=\"nofollow\">Geneyous\nJobReport</a> has been set up.</p>\n\n<p>The  JobReport checks the vacancy\npages of several (mostly Dutch)\ncompanies and institutes on a\nregular base on keywords like\ngenomics, bio-informatician,\ngenetics, scientific programmer and\nmore, including Dutch translations.</p>\n\n<p>The results are placed in a grid and\narrows indicate if the number of\nkeywords has\nincreased/decreased/remained stable\nthe last month.</p></li>\n<li><p><a href=\"http://www.academictransfer.com/search_results/?q=bioinformatics&amp;find=Search&amp;phd_position=\" rel=\"nofollow\">AcademicTransfer</a> is the joint job board of Dutch universities, university medical centers and research institutions. Use this website to search jobs, career opportunities and trends in the Dutch and international academic job market.</p></li>\n<li><p>The <a href=\"http://www.bioinformatics.org/jobs/\" rel=\"nofollow\">Bioinformatics Organization Career Center</a></p></li>\n</ol>", "html": "<ol>\n<li><p>Some companies do not longer publish\ntheir vacancies in newspapers but\ninstead use their own vacancy\nweb-site. This is helpful and\nup-to-date (well, should be), but\nthe counterside is that there's no\nlonger a central place where you can\nfind all actual vacant jobs. So if\nyou are searching for a job you have\nto check out a score of websites on\na regular base. To make this\nsomewhat easier the <a href=\"http://www.geneyous.nl/jobreport/\" rel=\"nofollow\">Geneyous\nJobReport</a> has been set up.</p>\n\n<p>The  JobReport checks the vacancy\npages of several (mostly Dutch)\ncompanies and institutes on a\nregular base on keywords like\ngenomics, bio-informatician,\ngenetics, scientific programmer and\nmore, including Dutch translations.</p>\n\n<p>The results are placed in a grid and\narrows indicate if the number of\nkeywords has\nincreased/decreased/remained stable\nthe last month.</p></li>\n<li><p><a href=\"http://www.academictransfer.com/search_results/?q=bioinformatics&amp;find=Search&amp;phd_position=\" rel=\"nofollow\">AcademicTransfer</a> is the joint job board of Dutch universities, university medical centers and research institutions. Use this website to search jobs, career opportunities and trends in the Dutch and international academic job market.</p></li>\n<li><p>The <a href=\"http://www.bioinformatics.org/jobs/\" rel=\"nofollow\">Bioinformatics Organization Career Center</a></p></li>\n</ol>", "lastedit_user": 68}}, {"pk": 300, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:05", "score": 4, "views": 0, "author": 142, "creation_date": "2010-03-15 21:50:36", "content": "<p>You can also checked <a href=\"http://www.bioinformatics.fr/jobs.php\" rel=\"nofollow\">http://www.bioinformatics.fr/jobs.php</a> with a dedicated RSS feed.</p></p>\n\n<p>When I have the time I also try to compile jobs from other sources like :</p>\n\n<ul>\n<li><a href=\"http://www.jobs.ac.uk/cgi-bin/search.cgi?keywords=bioinformatics&amp;x=0&amp;y=0\" rel=\"nofollow\">jobs.ac.uk</a> </li>\n<li><a href=\"http://www.bioinformatics.org/jobs/\" rel=\"nofollow\">bioinformatics.org</a></li>\n<li><a href=\"http://listes.sfbi.fr/wws/info/bioinfo\" rel=\"nofollow\">listbioinfo</a> (see Pierre post)</li>\n<li><a href=\"http://www.iscb.org/iscb-careers\" rel=\"nofollow\">iscb.org</a> </li>\n<li><a href=\"http://www.biospace.com/search_results_jobs.aspx?SearchWord=%25%25&amp;TheLocation=%25%25\" rel=\"nofollow\">biospace.com</a></li>\n</ul>", "html": "<p>You can also checked <a href=\"http://www.bioinformatics.fr/jobs.php\" rel=\"nofollow\">http://www.bioinformatics.fr/jobs.php</a> with a dedicated RSS feed.</p>\n\n</p>\n\n<p>When I have the time I also try to compile jobs from other sources like :</p>\n\n<ul>\n<li><a href=\"http://www.jobs.ac.uk/cgi-bin/search.cgi?keywords=bioinformatics&amp;x=0&amp;y=0\" rel=\"nofollow\">jobs.ac.uk</a> </li>\n<li><a href=\"http://www.bioinformatics.org/jobs/\" rel=\"nofollow\">bioinformatics.org</a></li>\n<li><a href=\"http://listes.sfbi.fr/wws/info/bioinfo\" rel=\"nofollow\">listbioinfo</a> (see Pierre post)</li>\n<li><a href=\"http://www.iscb.org/iscb-careers\" rel=\"nofollow\">iscb.org</a> </li>\n<li><a href=\"http://www.biospace.com/search_results_jobs.aspx?SearchWord=%25%25&amp;TheLocation=%25%25\" rel=\"nofollow\">biospace.com</a></li>\n</ul>", "lastedit_user": 142}}, {"pk": 301, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2009-09-30 14:56:48", "content": "Original body not yet available!", "html": "I'll answer my own question here as it is a demo for now", "lastedit_user": 2}}, {"pk": 302, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2009-09-30 19:43:58", "content": "Original body not yet available!", "html": "post the python code as well (put it into pre tags then it will be shown nicely formatted, see help on the right)", "lastedit_user": 2}}, {"pk": 303, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2009-10-09 16:57:23", "content": "Original body not yet available!", "html": "I see, then I guess they will need to contribute first in some way to gain some reputation first. ", "lastedit_user": 2}}, {"pk": 304, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 16, "creation_date": "2009-10-28 16:38:40", "content": "Original body not yet available!", "html": "Thanks! That's great! But I'm not student there...Can I access to that anyway? I am using Human whole genome Agilent array. Thank you so much. ", "lastedit_user": 16}}, {"pk": 305, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-01-22 15:14:58", "content": "Original body not yet available!", "html": "Just a note: code above need bioperl", "lastedit_user": 2}}, {"pk": 306, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 4, "creation_date": "2010-01-23 23:29:53", "content": "Original body not yet available!", "html": "Thanks, I think I'll try getting some help from the bioinformaticists here. In addition, I recently came across some other possibilities, have you or anyone here tried using CLC genomics workbench 3 (http://www.clcbio.com/index.php?id=1240) or SeqWeb GCG Wisconsin Sequence Analysis Package (http://www.hmc.psu.edu/core/computer/seqweb.htm)?  I know the SeqWeb is described in vague terms, but the CLC GW3 provides a means to do everything I need, in theory. ", "lastedit_user": 4}}, {"pk": 307, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-01-26 20:39:39", "content": "Original body not yet available!", "html": "you should ask questions separately not in the comments - those can get lost", "lastedit_user": 2}}, {"pk": 308, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-01-27 10:11:26", "content": "Original body not yet available!", "html": "MacPorts seems to be a very useful tool, but I have the feeling that the ufficial repositories for the majority of linux distributions are bigger. Moreover, many programming languages have their own way to install new modules: easy_install for python, cpan for perl, cran for R...", "lastedit_user": 23}}, {"pk": 309, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-01-27 14:18:52", "content": "Original body not yet available!", "html": "macports is primarly for installing the necessary binary dependencies into OS X - its ability to install say python modules is just an *extra* feature.", "lastedit_user": 2}}, {"pk": 310, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-01-27 14:20:22", "content": "Original body not yet available!", "html": "missed this comment, sorry about it!", "lastedit_user": 2}}, {"pk": 311, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-01-28 21:42:41", "content": "Original body not yet available!", "html": "for now we don't want to police questions too strictly, usually all questions are fine unless they are spam or obvious trolling", "lastedit_user": 2}}, {"pk": 312, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-01-29 16:17:44", "content": "Original body not yet available!", "html": "Hi Alex, one thing you could do it replace the case block with a hash map that remaps chromosomes. That way it is a lot easier to add other entries withouth make the code longer and longer...", "lastedit_user": 2}}, {"pk": 313, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-02-22 16:30:04", "content": "Original body not yet available!", "html": "I tought so, but I can't find the table for sequences, not even when I select 'All tracks' and 'AlLl tables'. Thanks anyway..", "lastedit_user": 23}}, {"pk": 314, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-02-22 18:37:59", "content": "Original body not yet available!", "html": "I guess you are right, now that I tried myself and it seems that information is awfully hard to get - sometimes the seemingly getting the easiest thing is not possible. You could try your luck with the Ensemble API.", "lastedit_user": 2}}, {"pk": 315, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-02-22 18:38:52", "content": "Original body not yet available!", "html": "I guess you are right, now that I tried myself and it seems that information is awfully hard to get - sometimes getting something seemingly easy end up as being not possible. You could try your luck with the Ensemble API.", "lastedit_user": 2}}, {"pk": 316, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-02-25 18:26:02", "content": "Original body not yet available!", "html": "that's really neat!", "lastedit_user": 2}}, {"pk": 317, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 31, "creation_date": "2010-02-25 23:54:17", "content": "Original body not yet available!", "html": "Complementing this answer, a good option could be the Trac framework (http://trac.edgewall.org/) with the plug-in for Git (http://nanosleep.org/proj/trac-git-plugin). Default support is for Subversion AFAIK.", "lastedit_user": 31}}, {"pk": 318, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-02-26 09:51:42", "content": "Original body not yet available!", "html": "Thanks!! I didn't know that, very cool!! :-)", "lastedit_user": 23}}, {"pk": 319, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-02-26 09:58:51", "content": "Original body not yet available!", "html": "yep but with cygwin you lose all the fun of using Linux or an Unix system. Moreover, it is very complicated to install new programs (I think you have to click on the installer again) or to compile new ones. As an an alternative, you can also install a virtual machine on Windows if you really need to do that.", "lastedit_user": 23}}, {"pk": 320, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 30, "creation_date": "2010-02-26 13:57:38", "content": "Original body not yet available!", "html": "Many thanks Fernando. As I said , I'm especially looking for some source code: e.g. I'd like to see a short program that would store/retrieve data just to see/understand why I should use this HDF instead of a classic RDBM or another engine (berkeleydb, couchdb...)", "lastedit_user": 30}}, {"pk": 321, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 30, "creation_date": "2010-02-26 14:04:47", "content": "Original body not yet available!", "html": "Still not the kind of source code I'm looking for but it is very interesting ! Your project reminds me Jan Aerts' Locus Tree : http://saaientist.blogspot.com/2009/04/locustree-searching-genomic-loci.html", "lastedit_user": 30}}, {"pk": 322, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-02-26 14:08:54", "content": "Original body not yet available!", "html": "This site has been started by a Bionformatics group at Pennsylvania State University. See bottom of the page for a contact link. Thanks.", "lastedit_user": 2}}, {"pk": 323, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-02-26 14:16:15", "content": "Original body not yet available!", "html": "Interesting link. You might want to also check out the PyTables documentation. That may have some use cases that you might be interested in. You can safely ignore the python related features: http://www.pytables.org/docs/manual/", "lastedit_user": 2}}, {"pk": 324, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 30, "creation_date": "2010-02-26 14:34:38", "content": "Original body not yet available!", "html": "Very interesting. I'll flag this answer as \"correct\", but please, if anybody knows some source code that would highlight the power of HDF5. Please, feel free to post it here. Thanks", "lastedit_user": 30}}, {"pk": 325, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-02-26 15:22:37", "content": "Original body not yet available!", "html": "Community building starts our very slowly but once it picks up steam it can really blossom. I do think that there bioinformatics is particularly well suited for this question-answer type format. I am very pleased to see an influx of new users to the system. This  motivates me to start promoting this site in a more visible manner. I have actually already learned a tremendous amount from the answers here. Users can help by posting questions and answers, and if you see an interesting question answered somewhere else you may want to post it here as well.\n", "lastedit_user": 2}}, {"pk": 326, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-02-26 15:23:03", "content": "Original body not yet available!", "html": "Community building starts our very slowly but once it picks up steam it can really blossom. I do think that bioinformatics is particularly well suited for this question-answer type format. I am very pleased to see an influx of new users to the system. This motivates me to start promoting this site in a more visible manner. I have actually already learned a tremendous amount from the answers here. Users can help by posting questions and answers, and if you see an interesting question answered somewhere else you may want to post it here as well", "lastedit_user": 2}}, {"pk": 327, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-02-26 15:24:07", "content": "Original body not yet available!", "html": "Community building starts our very slowly but once it picks up steam it can really blossom. I do think that bioinformatics is particularly well suited for this question-answer type format. I am very pleased to see an influx of new users to the system.  I have actually already learned a tremendous amount from the answers here. More than anything that motivates me to promote this site in a more visible manner. Users can help by posting questions and answers, and if you see an interesting question answered somewhere else you may want to post it here as well", "lastedit_user": 2}}, {"pk": 328, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-02-26 16:12:29", "content": "Original body not yet available!", "html": "We can probably find/write you perl or python scripts that do this, what are you comfortable running?", "lastedit_user": 2}}, {"pk": 329, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-02-26 17:05:54", "content": "Original body not yet available!", "html": "I have tried ruffus extensively, but in the end I decided I don't like its syntax. It complicates python's syntax and in the end, I recoded my pipeline as a simple python script, because I was getting errors that I couldn't understand well. What I am really looking for is something on the style of biomake/skam: http://skam.sourceforge.net/skam-intro.html", "lastedit_user": 23}}, {"pk": 330, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 30, "creation_date": "2010-02-26 17:16:41", "content": "Original body not yet available!", "html": "can you do 'loops' with (bio)make ?", "lastedit_user": 30}}, {"pk": 331, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-02-26 17:20:31", "content": "Original body not yet available!", "html": "I know it but since I have starting use make, I can't do anything without some certain features. For example, if you write a 'glue' script, you don't have conditional execution of tasks, so you will always have to run all the pipeline at once, without the possibility of pausing it. Or again, with makefiles, if you change only one of the input files, the program will only run the steps that are necessary to obtain the results, while a batch script will re-run everything. Moreover, a Makefile script has a standard syntax and it is easier to understand what is happening.", "lastedit_user": 23}}, {"pk": 332, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-02-26 17:22:56", "content": "Original body not yet available!", "html": "no idea :-( Unfortunately I could never make it working. Anyway, since these are usually declarative-like syntax, you don't make loops, you just apply a function on an array of values (e.g. like in R with the apply function)", "lastedit_user": 23}}, {"pk": 333, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-03-01 09:03:58", "content": "Original body not yet available!", "html": "well, a Makefile with phony rules is not much difficult to write. Even if you use a script only once, it is useful to write down the options and the files on which you have launched it. Moreover, sometimes you use binary files like the ones from emboss or blast, which have lot of options, and you need to annotate the options you have used to make your results reproducible.", "lastedit_user": 23}}, {"pk": 334, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-01 14:45:57", "content": "Original body not yet available!", "html": "Another tip: you can transform a Seq class instance into a string with the str() function.", "lastedit_user": 2}}, {"pk": 335, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 10, "creation_date": "2010-03-01 16:10:23", "content": "Original body not yet available!", "html": "good point but it seems like that would generate way too many small questions", "lastedit_user": 10}}, {"pk": 336, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-01 16:46:23", "content": "Original body not yet available!", "html": "interesting frameworks", "lastedit_user": 2}}, {"pk": 337, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-03-01 16:56:27", "content": "Original body not yet available!", "html": "Thanks. I think waf is too much oriented towards compiling programs, I have tried to use it but I don't think it is very useful for what we need to do. As for your third point, I use a lot of .Phony targets, which means that I just use a generic name (e.g. align_sequences, get_data, calculate_x) and the list of commands, with few dependencies. A bit like how I have shown in these slides: http://bioinfoblog.it/?p=29", "lastedit_user": 23}}, {"pk": 338, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-03-01 16:58:00", "content": "Original body not yet available!", "html": "scrum is interesting. I will probably collaborate to a colleague of mine who is using it to prepare a part of the talk on it. Thank you very much for answering.", "lastedit_user": 23}}, {"pk": 339, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-01 17:32:48", "content": "Original body not yet available!", "html": "good observation will do that from now on", "lastedit_user": 2}}, {"pk": 340, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-03-02 12:08:00", "content": "Original body not yet available!", "html": "Yes, I have checked it on January 2009 and it was the same as it is now. I also wrote to the author and he confirmed that he is working on a different project now, and he doesn't plan to work on biomake soon.", "lastedit_user": 23}}, {"pk": 341, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-02 14:35:32", "content": "Original body not yet available!", "html": "also pytables: http://www.pytables.org/moin", "lastedit_user": 2}}, {"pk": 342, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-02 14:56:06", "content": "Original body not yet available!", "html": "now fixed, tagging rules have been relaxed please try again, thanks", "lastedit_user": 2}}, {"pk": 343, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 30, "creation_date": "2010-03-02 16:20:09", "content": "Original body not yet available!", "html": "hum, not sure I understand what is your input... An example ?", "lastedit_user": 30}}, {"pk": 344, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-03-02 16:45:23", "content": "Original body not yet available!", "html": "nice, but I would include the N in the dna set.", "lastedit_user": 23}}, {"pk": 345, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-03-02 17:06:24", "content": "Original body not yet available!", "html": "Can you also show an example of the table output from blast? Anyway it is better to use the xml output as it is more stable over time. Also, are you doing this in any particular programming language or tool?", "lastedit_user": 23}}, {"pk": 346, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-03-02 17:48:38", "content": "Original body not yet available!", "html": "eheh :-) this sounds familiar...", "lastedit_user": 23}}, {"pk": 347, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 53, "creation_date": "2010-03-02 18:26:49", "content": "Original body not yet available!", "html": "Second that. Good one for python\n", "lastedit_user": 53}}, {"pk": 348, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 62, "creation_date": "2010-03-02 18:40:29", "content": "Original body not yet available!", "html": "Thank you. These are genomic contigs. \"Metagenomics\" is accidental. Input DNA was from two sources, one of which contained bacterias. \nNo idea if these come from dirty root, lived between plant cells, within them(?) but it does not look like bacterial lab strain jumping to a new bottle.  \n Sequence produced by 454s, assembled by Newbler. My contigs are anywhere from 100bp to 1Mbp. So I am expecting one plant genome and at least one, possibly many bacterial species. Single, 1Mb  large bacterial contig can hit multiple species of bacteria (blastp using predicted genes, 40-70% similarity hits).", "lastedit_user": 62}}, {"pk": 349, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-02 19:07:36", "content": "Original body not yet available!", "html": "Hi everyone, slightly unrelated note. Remember to vote on posts, questions if you like them. That is the way to accumulate reputation that in the end allows the users to moderate content (see FAQ for more info). Also it is recommended to select the best answer for a question.", "lastedit_user": 2}}, {"pk": 350, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 62, "creation_date": "2010-03-02 19:12:53", "content": "Original body not yet available!", "html": "Dear Pierre, I just send you an email to your yahoo address. \nIn short I think it is a great idea. i will look into your code tomorrow. Thank you\n", "lastedit_user": 62}}, {"pk": 351, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 55, "creation_date": "2010-03-02 19:20:55", "content": "Original body not yet available!", "html": "Many plants undergo symbiotic interactions with soil-bacteria, e.g. legume palnts and nitrogen-fixing rhizobia, these form root nodules. If you sample from the wild, you have possibly discovered the plant and its symbiont(s) in between root cells, otherwise just dirt. Just speculation, depends on how you got the sample.\n\nAnyway, maybe then it's maybe best to sort out the individual reads on the domain level (bacteria vs. eukaryota) and assemble afterwards. At least if mainly interested in a pure assembly.\n\n ", "lastedit_user": 55}}, {"pk": 352, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 62, "creation_date": "2010-03-02 20:23:31", "content": "Original body not yet available!", "html": "re reassembly: indeed this is what we will do in the end. But since we already have draft assembly reducing the total sequence length I went for contig screen first. As a bonus one can confirm that 454 contigs contain our plant DNA by mapping (blast pre-screened) ESTs, GSS sequences and Illumina short reads from bacteria-free (so far...) leaves / mRNAs.    ", "lastedit_user": 62}}, {"pk": 353, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-03-02 21:08:44", "content": "Original body not yet available!", "html": "Abhishek's is one of the bests :-)", "lastedit_user": 23}}, {"pk": 354, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 53, "creation_date": "2010-03-02 21:18:04", "content": "Original body not yet available!", "html": "That is a good list\n", "lastedit_user": 53}}, {"pk": 355, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-03-03 11:33:21", "content": "Original body not yet available!", "html": "please don't be shy about continuing your discussion here... If you continue your discussion in private, then it is of no use for the other readers.", "lastedit_user": 23}}, {"pk": 356, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 30, "creation_date": "2010-03-03 12:46:12", "content": "Original body not yet available!", "html": "put the source code I wrote on ghist: http://gist.github.com/320585", "lastedit_user": 30}}, {"pk": 357, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 62, "creation_date": "2010-03-03 12:49:28", "content": "Original body not yet available!", "html": "Sorry but the email was non-technical. All about what I possibly can do for Pierre for (in some way at least) doing my homework. Surely it may be interesting in the longer run how do we return the favors (authorship? $$$, invitation to give a talk?) but often person asking the question is not at the helm (can not promise much). Hope it explains a bit. \n\nAs for Pierre's program, once it stops running and I check the output I will write about it. ", "lastedit_user": 62}}, {"pk": 358, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 59, "creation_date": "2010-03-03 14:01:21", "content": "Original body not yet available!", "html": "How frequently do you need things updated?  DAVID does have yearly releases so far, but their latest release is this month (March 2010). See the release announcement here: http://david.abcc.ncifcrf.gov/forum/cgi-bin/ikonboard.cgi?act=ST;f=10;t=25 This does suggest the underlying mapping framework will be updated along with it in the 6.7 beta, and hence should include more recent information for the conversion tool", "lastedit_user": 59}}, {"pk": 359, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 61, "creation_date": "2010-03-03 16:09:37", "content": "Original body not yet available!", "html": "There are Perl-based bindings to both HDF5 and BioHDF here, along with some docs: \n\nftp://ftp.hdfgroup.uiuc.edu/pub/outgoing/BioHDF/Perl/ ", "lastedit_user": 61}}, {"pk": 360, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 62, "creation_date": "2010-03-03 17:23:28", "content": "Original body not yet available!", "html": "Pierre's Java program did work as promised. For 6.6k accessions it took ca 6 hours. Thank you :-). \nNow it is my part to combine it with blast output /contig sizes etc. ", "lastedit_user": 62}}, {"pk": 361, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-04 03:33:26", "content": "Original body not yet available!", "html": "minor correction it was Giovanni who asked that question", "lastedit_user": 2}}, {"pk": 362, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 30, "creation_date": "2010-03-04 07:16:28", "content": "Original body not yet available!", "html": "Thank you Abhishek !", "lastedit_user": 30}}, {"pk": 363, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 68, "creation_date": "2010-03-04 09:44:21", "content": "Original body not yet available!", "html": "And what exactly is your question?", "lastedit_user": 68}}, {"pk": 364, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 68, "creation_date": "2010-03-04 09:46:50", "content": "Original body not yet available!", "html": "I concur with giovanni. ", "lastedit_user": 68}}, {"pk": 365, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 7, "creation_date": "2010-03-04 14:07:30", "content": "Original body not yet available!", "html": "Hey Nicojo , \n\nThanks for your reply. I am trying to find out what percentage of peptides in my library share a same biological process or have same molecular function .These peptides have length between 17-22 residues and Pfam was giving the annotation for a test run which I carried out a few weeks before.\n\n", "lastedit_user": 7}}, {"pk": 366, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-03-04 15:03:56", "content": "Original body not yet available!", "html": "which answer should I choose? All of them are good.", "lastedit_user": 23}}, {"pk": 367, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-03-04 15:06:27", "content": "Original body not yet available!", "html": "you don't need to 'community wiki' all your questions: I suggest you to accumulate some points, unless you can at least vote, and then we will change to community wiki all the questions that deserve it here.", "lastedit_user": 23}}, {"pk": 368, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-04 15:17:57", "content": "Original body not yet available!", "html": "that's really neat Pierre!", "lastedit_user": 2}}, {"pk": 369, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-04 15:18:49", "content": "Original body not yet available!", "html": "That's a really nice description of the problem and code, Pierre!", "lastedit_user": 2}}, {"pk": 370, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-03-04 15:25:28", "content": "Original body not yet available!", "html": "what does it means that a snp is related to a pathway?", "lastedit_user": 23}}, {"pk": 371, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 71, "creation_date": "2010-03-04 15:28:39", "content": "Original body not yet available!", "html": "I'm even tempted to say that the EBI is one of the most interesting places from even a EU perspective. Particularly, if you value the ODOSOS ideas.", "lastedit_user": 71}}, {"pk": 372, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 30, "creation_date": "2010-03-04 15:33:47", "content": "Original body not yet available!", "html": "Thanks but your system just finds the genes in a given region ( To do this i would simply use the UCSC mysql anonymous server with 'select distinct G.name from knownGenes as G, snp130 as S where G.txtStart<= S.chromStart and G.txtEnd>=S.chromEnd and S.name in(\"rs1\",\"rs2\"...)'). Here I want to mine the pathways and/or the diseases. For example: \"this subset of SNPs is involved in the metabolism of XXXX\".", "lastedit_user": 30}}, {"pk": 373, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 30, "creation_date": "2010-03-04 15:35:58", "content": "Original body not yet available!", "html": "@giovani e.g. \"this subset of snps (localized on gene G1,G2,...) have been described to be involved in the metabolism of 'X'\".  ", "lastedit_user": 30}}, {"pk": 374, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-04 15:46:17", "content": "Original body not yet available!", "html": "yes, good point, community wiki will turn on automatically after some time.", "lastedit_user": 2}}, {"pk": 375, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 64, "creation_date": "2010-03-04 15:55:27", "content": "Original body not yet available!", "html": "thanks for your suggestions... Still learning.", "lastedit_user": 64}}, {"pk": 376, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 30, "creation_date": "2010-03-04 16:14:55", "content": "Original body not yet available!", "html": "be careful: the DAS server uses an index of (+1) for the first base.", "lastedit_user": 30}}, {"pk": 377, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 74, "creation_date": "2010-03-04 16:17:17", "content": "Original body not yet available!", "html": "Wow, thanks. That's quite useful.", "lastedit_user": 74}}, {"pk": 378, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-03-04 16:43:22", "content": "Original body not yet available!", "html": "try makefiles, it basically the same as shell scripts but you can define more than a task in a file.", "lastedit_user": 23}}, {"pk": 379, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 53, "creation_date": "2010-03-04 19:14:01", "content": "Original body not yet available!", "html": "Agree with the point about small labs. I work at a small lab and there is no way that we could afford a large cluster. We can however afford to spin out EC2 when ever we need it.", "lastedit_user": 53}}, {"pk": 380, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 30, "creation_date": "2010-03-04 20:14:32", "content": "Original body not yet available!", "html": "I guess I should flag this anwser as correct :-) However, if someone has a method to build a simple plugin without maven, feel free to write it here. Thanks :-)", "lastedit_user": 30}}, {"pk": 381, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 26, "creation_date": "2010-03-04 21:20:26", "content": "Original body not yet available!", "html": "I'm still a bit confused: are these peptides experimentally shown to be present in the sample as such short peptides? Or are they fragments of large proteins that have been digested and sequenced?\nIn any case, you cannot predict the function of peptides just because that sequence is present in a full blown protein that has a function... I'd even say that it is not biologically relevant :(\n\nBut, if you have a bunch of peptides that are sequenced from a sample and you manage to map them back to a protein, then you can find out what Pfam domains that protein has and get an idea of its function.", "lastedit_user": 26}}, {"pk": 382, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 7, "creation_date": "2010-03-04 23:05:24", "content": "Original body not yet available!", "html": "Thanks for fixing the typo , was working on something else while posting this hence overlooked it.", "lastedit_user": 7}}, {"pk": 383, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-03-05 09:18:13", "content": "Original body not yet available!", "html": "I looked at the genes in the pathway that I studied and I have found a lot of errors, including genes with similar names being merged as one, and many false positives due to genes being in the same pathway in some database. And my pathway is not exactly badly annotated, it was already described in the '80s...", "lastedit_user": 23}}, {"pk": 384, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 59, "creation_date": "2010-03-05 12:03:10", "content": "Original body not yet available!", "html": "Why preinstalled?  If you can maintain a Linux server to host bioinformatics apps, you can surely install CentOS as well.  Or are you after a mangaged solution?  Have you thought about just having a VM hosted somewhere?", "lastedit_user": 59}}, {"pk": 385, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 68, "creation_date": "2010-03-05 12:45:23", "content": "Original body not yet available!", "html": "I would argue that the installation of new and/or interdependent software packages is easiest on Linux, because the package management system takes care of resolving all dependencies.", "lastedit_user": 68}}, {"pk": 386, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-03-05 13:08:31", "content": "Original body not yet available!", "html": "thanks for the answer. I think there are at least two distributions called 'biolinux' and 'bio-linux', and they are different, one is based on rpm and the other on deb. I contributed a bit to debian-med in the past, but it is more aimed at medics (there is should be also a debian-science distro).", "lastedit_user": 23}}, {"pk": 387, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-05 13:33:38", "content": "Original body not yet available!", "html": "It might probably help if you gave the full reference to the paper that you mention. ", "lastedit_user": 2}}, {"pk": 388, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-05 13:35:14", "content": "Original body not yet available!", "html": "Wow. That's a pretty good history lesson! Thanks!", "lastedit_user": 2}}, {"pk": 389, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 56, "creation_date": "2010-03-05 15:18:37", "content": "Original body not yet available!", "html": "I second the System76 recommendation. Bought a laptop from them and have been very happy.", "lastedit_user": 56}}, {"pk": 390, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-05 15:34:20", "content": "Original body not yet available!", "html": "What a great story! Thanks for sharing.", "lastedit_user": 2}}, {"pk": 391, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 62, "creation_date": "2010-03-05 16:45:35", "content": "Original body not yet available!", "html": "Seems that I am missing hits to some fragments, therefore I will have to go down in fragment size and increase the proportion of the overlap. Average predicted gene size is 274 aa, so I will try 1kb fragments with 500bp overlaps next. ", "lastedit_user": 62}}, {"pk": 392, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-03-05 16:46:42", "content": "Original body not yet available!", "html": "they merged it with another gene, with a similar name. Now, there is a gene in ensembl with three transcripts, two of which are localizated in the nucleus and are ribonucleoproteins, and the other is in the ER and catalyze a completely different reaction.", "lastedit_user": 23}}, {"pk": 393, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 82, "creation_date": "2010-03-05 16:53:56", "content": "Original body not yet available!", "html": "Sometimes the powers that be like things such as service contracts, which tend to be hard to get if the OS isn't preinstalled.", "lastedit_user": 82}}, {"pk": 394, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-05 17:07:53", "content": "Original body not yet available!", "html": "not including BioPython because it is not supported in Python 3 seems like a terrible decision", "lastedit_user": 2}}, {"pk": 395, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-05 17:09:23", "content": "Original body not yet available!", "html": "Not including BioPython because it is not supported in Python 3 sounds like a bad decision.", "lastedit_user": 2}}, {"pk": 396, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-05 20:00:17", "content": "Original body not yet available!", "html": "Fixed your links - nice reviews!", "lastedit_user": 2}}, {"pk": 397, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 71, "creation_date": "2010-03-05 20:25:11", "content": "Original body not yet available!", "html": "So, according to this list Bioinfo is genome only, right?", "lastedit_user": 71}}, {"pk": 398, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 87, "creation_date": "2010-03-05 21:44:13", "content": "Original body not yet available!", "html": "Have you looked at their web site or downloadable files ? AFAIK, STRING basically use Ensembl IDs in their PPI files but provide another mapping file to map from other identitfiers. The problem of mapping a gene to a pathway is always not a direct approach, think of this scenario : 1 gene, n transcript and one of them could go in to pathway. 'n' transcripts code for n splice variants of same protein, so it is not wrong in merging the IDs of transcripts to one gene ID.", "lastedit_user": 87}}, {"pk": 399, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 87, "creation_date": "2010-03-05 21:48:35", "content": "Original body not yet available!", "html": "Daniel, True. Back in India, in my lab we used to get Systems engineers to help us with O/S or any critical systems issues. I can install and CentOS and get it up and running, but it need considerable amount to tweak things. I am looking for something like a pre-installed OS with a service contract. I already got some quotes. But, don't have any experience with the vendors in US. ", "lastedit_user": 87}}, {"pk": 400, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 87, "creation_date": "2010-03-05 21:49:03", "content": "Original body not yet available!", "html": "Thanks for your point geoff ", "lastedit_user": 87}}, {"pk": 401, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 87, "creation_date": "2010-03-05 21:50:16", "content": "Original body not yet available!", "html": "Egon thanks for the suggestion. I am afraid we are on a tight budget as of now. May be later we will try Ubuntu Amazon EC2. ", "lastedit_user": 87}}, {"pk": 402, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 87, "creation_date": "2010-03-05 22:22:07", "content": "Original body not yet available!", "html": "Thanks Geoff. I will look the URL.", "lastedit_user": 87}}, {"pk": 403, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 27, "creation_date": "2010-03-06 16:34:42", "content": "Original body not yet available!", "html": "Thanks a lot for your kind help, the number of dots in csfasta reads does become lower.", "lastedit_user": 27}}, {"pk": 404, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 30, "creation_date": "2010-03-06 18:18:25", "content": "Original body not yet available!", "html": "thanks, that's very useful too", "lastedit_user": 30}}, {"pk": 405, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 79, "creation_date": "2010-03-06 22:07:35", "content": "Original body not yet available!", "html": "I want to do this programmatically, so I can do this scoring thousands of times.. Manual wont do, and using curl for this seems hackish, unreliable & sensitive to change.", "lastedit_user": 79}}, {"pk": 406, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-07 03:34:53", "content": "Original body not yet available!", "html": "I guess it is hard to improve on a time tested approach such as make. Thanks for the review of ruffus.", "lastedit_user": 2}}, {"pk": 407, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 36, "creation_date": "2010-03-07 04:15:14", "content": "Original body not yet available!", "html": "paver does look like a good option, falling somewhere between a makefile and ruffus. http://blog.doughellmann.com/2009/01/converting-from-make-to-paver.html", "lastedit_user": 36}}, {"pk": 408, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 23, "creation_date": "2010-03-07 11:53:53", "content": "Original body not yet available!", "html": "Try argparse (http://code.google.com/p/argparse/) which is an extended argument parse library for python. I had a similar experience with ruffus, as I have tried it and then reverted to makefiles. I think the est is still biomake.", "lastedit_user": 23}}, {"pk": 409, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 68, "creation_date": "2010-03-07 13:21:09", "content": "Original body not yet available!", "html": "The form on the above page triggers http://strand.imb.ac.ru/PSIC-cgi/run.pl so that Perl script probably has the code you're looking for. Maybe mail the webmaster (vlasov@imb.imb.ac.ru) or the authors of the article for a copy of that code?", "lastedit_user": 68}}, {"pk": 410, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 30, "creation_date": "2010-03-07 13:21:19", "content": "Original body not yet available!", "html": "do you need some random primers or do you know your 500 targets ?", "lastedit_user": 30}}, {"pk": 411, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 73, "creation_date": "2010-03-07 14:29:45", "content": "Original body not yet available!", "html": "haha that's great. i think a quality physical work environment is underrated. i would also demand two monitors or one very large one.", "lastedit_user": 73}}, {"pk": 412, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:06", "score": 0, "views": 0, "author": 26, "creation_date": "2010-03-07 18:55:34", "content": "Original body not yet available!", "html": "I think you need to be more specific with your question: what are you trying to do? 500 pairs of \"primers\": are you targeting something in particular or just random? Will these sequences be used for wet lab experiments like PCR or qPCR? Etc.", "lastedit_user": 26}}, {"pk": 413, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 108, "creation_date": "2010-03-08 08:42:58", "content": "Original body not yet available!", "html": "So you're only interested in exact matches, did I get that right? If not, what is your strategy to find inexact matches?", "lastedit_user": 108}}, {"pk": 414, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 30, "creation_date": "2010-03-08 13:05:55", "content": "Original body not yet available!", "html": "yes, only extact matches", "lastedit_user": 30}}, {"pk": 415, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 36, "creation_date": "2010-03-08 15:56:54", "content": "Original body not yet available!", "html": "thanks for the links, didn't know about that.", "lastedit_user": 36}}, {"pk": 416, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 62, "creation_date": "2010-03-08 17:11:47", "content": "Original body not yet available!", "html": "Thank you, that's a very useful tip. \n\nIt is quite fast to count all 4-mers in my draft sequence. I think I have to count them on a reverse strand and add it to forward counts (done). For implementing TETRA-measure I will start with RPy.   \n    ", "lastedit_user": 62}}, {"pk": 417, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 114, "creation_date": "2010-03-08 20:30:14", "content": "Original body not yet available!", "html": "Please place the reason for closing a question in the question's comments, not as an answer, since it's a comment, not an answer.", "lastedit_user": 114}}, {"pk": 418, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-08 21:45:12", "content": "Original body not yet available!", "html": "This post was not formulated in a question/answer format therefore will be closed.", "lastedit_user": 2}}, {"pk": 419, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 89, "creation_date": "2010-03-08 23:12:16", "content": "Original body not yet available!", "html": "I doubt you can get better resolution since centimorgan is experimental unit for recombination frequency. It does not correlate well with base pairs, which depends on genomic position. In human it approximately 1 Mbp in average.", "lastedit_user": 89}}, {"pk": 420, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-09 04:51:35", "content": "Original body not yet available!", "html": "I think it would help to elaborate on what the \"produce enough protein to have an effect\" means. ", "lastedit_user": 2}}, {"pk": 421, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 90, "creation_date": "2010-03-09 06:20:49", "content": "Original body not yet available!", "html": "Sorry, I was to vague here. I am looking at the effects of a certain set of transcription factors in a certain tissue. There seem to be some interesting patterns of co-operation between them. Whether these TFs are able to interact in the first place depends on whether all of them are actually expressed in this tissue. That's what I want to find out with this exercise. -- Thanks for your help !", "lastedit_user": 90}}, {"pk": 422, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 119, "creation_date": "2010-03-09 12:15:08", "content": "Original body not yet available!", "html": "+1 for Bowtie, I find that very useful", "lastedit_user": 119}}, {"pk": 423, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 66, "creation_date": "2010-03-09 13:00:51", "content": "Original body not yet available!", "html": "Yes, please be more clear.  Do you (1) have 500 forward and reverse 28 bp sequences that you wish to *align* to the genome sequence?  Or (2) want to *generate* 500 forward/reverse primers using the genome sequence?", "lastedit_user": 66}}, {"pk": 424, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 75, "creation_date": "2010-03-09 14:59:28", "content": "Original body not yet available!", "html": "Porticus (http://porticus.alittledrop.com/) is a GUI for MacPorts that  makes the installation of unix software as simple as using the Synaptic Frontend on debian/ubuntu.", "lastedit_user": 75}}, {"pk": 425, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-09 15:33:24", "content": "Original body not yet available!", "html": "I agree, using the background level as noise and using that as not-expressed at all sounds like a good approach", "lastedit_user": 2}}, {"pk": 426, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 72, "creation_date": "2010-03-09 16:37:05", "content": "Original body not yet available!", "html": "I have to agree with Neil.  I have gained a lot more from informal social networks.  In the end societies are about networking and certain, usually unimportant, membership benefits and there are better ways to network now.", "lastedit_user": 72}}, {"pk": 427, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 113, "creation_date": "2010-03-09 17:26:02", "content": "Original body not yet available!", "html": "Use the direct url, as it has been split from the MAQ project: http://bio-bwa.sourceforge.net/", "lastedit_user": 113}}, {"pk": 428, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 117, "creation_date": "2010-03-09 19:50:51", "content": "Original body not yet available!", "html": "I also like DAVID.\n\nIf you're ruby users, I wrote a very basic library that allows you to query DAVID from your scripts: http://github.com/chrisamiller/davidapi", "lastedit_user": 117}}, {"pk": 429, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 90, "creation_date": "2010-03-09 22:55:50", "content": "Original body not yet available!", "html": "Thanks for this detailed reply! Those are really great references you pointed me to !", "lastedit_user": 90}}, {"pk": 430, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 90, "creation_date": "2010-03-09 22:57:47", "content": "Original body not yet available!", "html": "That sounds like the approach I'm after. How would I determine the noise level thought?", "lastedit_user": 90}}, {"pk": 431, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 90, "creation_date": "2010-03-09 23:01:46", "content": "Original body not yet available!", "html": "Thanks for this detailed reply! Those are really great references you pointed me to! However, determining how much proteins are actually produced from the transcribed mRNA is going into too much detail for this project.  ", "lastedit_user": 90}}, {"pk": 432, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 26, "creation_date": "2010-03-09 23:18:48", "content": "Original body not yet available!", "html": "The point is that no amount of mRNA will tell you if the protein is present and in what amount... And even less if there is a biological impact by the proteins produced.", "lastedit_user": 26}}, {"pk": 433, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 110, "creation_date": "2010-03-10 00:56:10", "content": "Original body not yet available!", "html": "Thank you for making me aware of this. I was interested in knowing if I could use any libraries in Java that have HC already implemented as a method which I could use with the clusters I get and plot them as a cluster heatmap.", "lastedit_user": 110}}, {"pk": 434, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 110, "creation_date": "2010-03-10 00:58:45", "content": "Original body not yet available!", "html": "Thank you, I didnt know about this. I was actually more interested in knowing if any libraries in Java already have this method of generating cluster heat maps implemented, which I could use with the clusters that I generate.", "lastedit_user": 110}}, {"pk": 435, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 110, "creation_date": "2010-03-10 00:59:08", "content": "Original body not yet available!", "html": "Thanks Istvan. will look at this.", "lastedit_user": 110}}, {"pk": 436, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 90, "creation_date": "2010-03-10 02:37:20", "content": "Original body not yet available!", "html": "I agree, theis statement in my question was quite confusing. What I'm after is just a rough classification for the proteins in \"probably there\" or not. (I'm looking forward to reading the publication you hinted at)", "lastedit_user": 90}}, {"pk": 437, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 26, "creation_date": "2010-03-10 08:25:14", "content": "Original body not yet available!", "html": "Ahh I'm struggling with quite a few things more urgent. I'm afraid it might stay on the shelf for a while (I hope not forever though)... Wet lab can be EXTREMELY frustrating :(", "lastedit_user": 26}}, {"pk": 438, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 62, "creation_date": "2010-03-10 15:33:59", "content": "Original body not yet available!", "html": "In case you did not look at it yet:\nhttp://www.hdfgroup.org/HDF5/doc/H5.intro.html\nhttp://www.hdfgroup.org/HDF5/doc/Intro/IntroExamples.html\n", "lastedit_user": 62}}, {"pk": 439, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 117, "creation_date": "2010-03-10 23:54:06", "content": "Original body not yet available!", "html": "Which platform is this data from?", "lastedit_user": 117}}, {"pk": 440, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-11 03:41:43", "content": "Original body not yet available!", "html": "Just to clarify the situation: in each of your two sequencing runs you found a single base difference between the two strands, and that difference was in the same position in both cases?  ", "lastedit_user": 2}}, {"pk": 441, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 23, "creation_date": "2010-03-11 11:36:52", "content": "Original body not yet available!", "html": "Which Ids do you want to convert, exactly? I think there is not a single service that can convert between all the most used ids for genes, even biomart and uniprot lack some databases. Look at this question: http://biostar.stackexchange.com/questions/22/gene-id-conversion-tool", "lastedit_user": 23}}, {"pk": 442, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 73, "creation_date": "2010-03-11 15:28:17", "content": "Original body not yet available!", "html": "illumina - maybe v1.3", "lastedit_user": 73}}, {"pk": 443, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 117, "creation_date": "2010-03-11 18:00:38", "content": "Original body not yet available!", "html": "I'll get on board with this answer. It's pretty easy to envision a scenario where the actual base call and the quality score get adjusted by separate processes at some point.", "lastedit_user": 117}}, {"pk": 444, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 59, "creation_date": "2010-03-12 09:18:42", "content": "Original body not yet available!", "html": "DAVID is the one I always recommend to our wet lab biologists too.  It's now been maintained well for several years, unlike many bioinformatics resources..", "lastedit_user": 59}}, {"pk": 445, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 121, "creation_date": "2010-03-12 09:19:38", "content": "Original body not yet available!", "html": "Thanks all, yes I had two good reads on each strand and the single bp on one of the colonies was different from that of the other colony (I'd picked 3 originally, but one was just an insert).  I went with picking another 2 colonies to be sure.  I'm sequencing ~100 markers though, so I was trying to weigh up the extra $$ / time in sequencing another colony with the extra information a C or T gives me over a Y.  This is only the 15th sequence or so and the first time this has happened, so I'll see how the others turn out before deciding on a general policy.", "lastedit_user": 121}}, {"pk": 446, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 121, "creation_date": "2010-03-12 09:21:49", "content": "Original body not yet available!", "html": "Actually, what I'd really like to know is when you go to publish a sequence like this, how much coverage should you have?  Is it acceptable to put a sequence with a Y into genbank, because you didn't go to the effort / cost of re-sequencing to resolve it?  Or does the Y represent natural variation... and how many would you need to sequence to answer that question... :)", "lastedit_user": 121}}, {"pk": 447, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 59, "creation_date": "2010-03-12 12:15:14", "content": "Original body not yet available!", "html": "Yep Mpre or Less is great, and I nearly added it into the list above.  Statistical podcasts are even thinner on the ground than coding ones I suspect!", "lastedit_user": 59}}, {"pk": 448, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 59, "creation_date": "2010-03-12 12:17:36", "content": "Original body not yet available!", "html": "I should also add that things like the MIT Courseware sites are excellent and similar resources: http://ocw.mit.edu/OcwWeb/web/home/home/index.htm\n\n", "lastedit_user": 59}}, {"pk": 449, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 59, "creation_date": "2010-03-12 14:21:43", "content": "Original body not yet available!", "html": "Thanks Mikael, that's a new one on me - I will give it a whirl", "lastedit_user": 59}}, {"pk": 450, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 23, "creation_date": "2010-03-12 14:56:53", "content": "Original body not yet available!", "html": "the program you linked is 14 years old and has the phrase 'old version' in its description. Are you sure you want to use it? ", "lastedit_user": 23}}, {"pk": 451, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 72, "creation_date": "2010-03-12 15:00:51", "content": "Original body not yet available!", "html": "We should be back next week and given our absence from the airwaves lots to cover and some interviews lined up", "lastedit_user": 72}}, {"pk": 452, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 72, "creation_date": "2010-03-12 15:01:36", "content": "Original body not yet available!", "html": "Agreed.  FIB can be pretty good.  There was a recent episode (poor audio) with David Haussler you could start with.", "lastedit_user": 72}}, {"pk": 453, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 38, "creation_date": "2010-03-12 15:14:50", "content": "Original body not yet available!", "html": "@mndoci - This is excellent news!", "lastedit_user": 38}}, {"pk": 454, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 59, "creation_date": "2010-03-12 15:22:45", "content": "Original body not yet available!", "html": "Deepak - that is good news, I think you should know the podcast is quite sorely missed between episodes!", "lastedit_user": 59}}, {"pk": 455, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 55, "creation_date": "2010-03-12 15:46:42", "content": "Original body not yet available!", "html": "Maybe, you should be more specific about what you really want to do? It looks a bit like you already have the solution in the web-site you linked. So, what do you really want to do with your tRNA sequences, what is the problem you are trying to solve?\nThis would really help people to provide a good answer.", "lastedit_user": 55}}, {"pk": 456, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 84, "creation_date": "2010-03-12 15:55:06", "content": "Original body not yet available!", "html": "Thanks Istvan for your suggestion. I will work on the same lines.", "lastedit_user": 84}}, {"pk": 457, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 38, "creation_date": "2010-03-12 16:05:52", "content": "Original body not yet available!", "html": "I should note that DAVIS has an API: http://david.abcc.ncifcrf.gov/content.jsp?file=DAVID_API.html but it doesn't seem to cover their ID mapping service.", "lastedit_user": 38}}, {"pk": 458, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 38, "creation_date": "2010-03-12 16:06:27", "content": "Original body not yet available!", "html": "Oh and also, Tim Yates has written a Groovy version of my code, above: http://gist.github.com/330312", "lastedit_user": 38}}, {"pk": 459, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 38, "creation_date": "2010-03-12 16:07:17", "content": "Original body not yet available!", "html": "I should note that DAVID has an API: http://david.abcc.ncifcrf.gov/content.jsp?file=DAVID_API.html but it doesn't seem to cover their ID mapping service. ", "lastedit_user": 38}}, {"pk": 460, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 114, "creation_date": "2010-03-12 17:22:09", "content": "Original body not yet available!", "html": "If there's such a concept here as Stack Overflow, this should probably be community wiki; helpful links should be curated and compiled in the question.", "lastedit_user": 114}}, {"pk": 461, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 72, "creation_date": "2010-03-12 17:27:59", "content": "Original body not yet available!", "html": "Oooh I need to add that to my list. Always looking for new Ruby-centric podcasts.", "lastedit_user": 72}}, {"pk": 462, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 53, "creation_date": "2010-03-12 17:28:51", "content": "Original body not yet available!", "html": "Thanks I'll give it a go. I've never used perl before though. :S", "lastedit_user": 53}}, {"pk": 463, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 53, "creation_date": "2010-03-12 17:42:03", "content": "Original body not yet available!", "html": "I don't have bioperl on my computer and the documentation states that installing bioperl is \"non-trivial\" which is not encouraging. Perhaps it would be simpler just to write a parser myself.", "lastedit_user": 53}}, {"pk": 464, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 53, "creation_date": "2010-03-12 17:43:11", "content": "Original body not yet available!", "html": "I just got a bunch of errors with this. :(\n\n\"Use of uninitialized value $QEnd in numeric lt (<) at ./Blast2Gff.pl line 161, <BLASTIN> line 12.\"", "lastedit_user": 53}}, {"pk": 465, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 53, "creation_date": "2010-03-12 17:54:02", "content": "Original body not yet available!", "html": "So up-vote me! ;)", "lastedit_user": 53}}, {"pk": 466, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 30, "creation_date": "2010-03-12 17:59:17", "content": "Original body not yet available!", "html": "Sorry I'm not a perl guru too :-P", "lastedit_user": 30}}, {"pk": 467, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 2, "creation_date": "2010-03-12 18:29:55", "content": "Original body not yet available!", "html": "Good observation, I turned the question into a community wiki", "lastedit_user": 2}}, {"pk": 468, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 55, "creation_date": "2010-03-12 18:59:33", "content": "Original body not yet available!", "html": "The blast2Gff.pl looks as if it uses Blast tabular format, did you try this?", "lastedit_user": 55}}, {"pk": 469, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 53, "creation_date": "2010-03-12 21:39:54", "content": "Original body not yet available!", "html": "Using the examples this was relatively simple to do. The GFF3 validator helped too.", "lastedit_user": 53}}, {"pk": 470, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 53, "creation_date": "2010-03-12 21:40:32", "content": "Original body not yet available!", "html": "I was using the tab delimited output produced using the -m8 option but I was still getting the error unfortunately.", "lastedit_user": 53}}, {"pk": 471, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 53, "creation_date": "2010-03-12 21:41:21", "content": "Original body not yet available!", "html": "Thanks for the XLST Pierre. I'm not used to XLST though so it was a bit over my head.", "lastedit_user": 53}}, {"pk": 472, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 59, "creation_date": "2010-03-13 10:17:00", "content": "Original body not yet available!", "html": "Looks interesting Chris, will certainly give that a try!", "lastedit_user": 59}}, {"pk": 473, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 66, "creation_date": "2010-03-13 13:04:57", "content": "Original body not yet available!", "html": "I second Changelog. I occasionally listen to FLOSS Weekly and IT Conversations too, for programming. Aside from c2cbio, I can't think of another podcast with a strong bioinformatics focus.", "lastedit_user": 66}}, {"pk": 474, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 119, "creation_date": "2010-03-13 16:49:10", "content": "Original body not yet available!", "html": "+1; among other things I definitely agree on \"understanding theoretical papers\" ", "lastedit_user": 119}}, {"pk": 475, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 26, "creation_date": "2010-03-13 18:18:54", "content": "Original body not yet available!", "html": "I can't agree with you when you say that building and interpreting a phylogenetic tree should be trivial to any person with a background in biology. Tell me, are you any good at Florescence activated cell sorting? It's a pretty \"basic\" technique in biology... I don't know anybody good at FACS who can do phylogeny and vis-versa.", "lastedit_user": 26}}, {"pk": 476, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 31, "creation_date": "2010-03-13 19:00:35", "content": "Original body not yet available!", "html": "I say that because I firmly believe that this should be a skill that any biologist can have. Tools like www.Phylogeny.fr and Mega (megasoftware.net) greatly reduce the time and work need to build a phylogenetic tree. Since evolution is a core concept in biology, the foundation to  interpret a tree is already explored in most undergraduate courses I know.", "lastedit_user": 31}}, {"pk": 477, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 31, "creation_date": "2010-03-13 19:06:05", "content": "Original body not yet available!", "html": " In true, for quickly build a tree, it is only a matter to run a BLAST search and from the results page click in the \"Distance tree of results\" link. Sure, this may not be a good tree built with the most sofisticated methods, but is a good start to a more complete analysis. I am not saying that philogenetics as a whole is trivial, just the specific task to build a simple tree and interpreting the branching pattern resulting from it. ", "lastedit_user": 31}}, {"pk": 478, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 31, "creation_date": "2010-03-13 19:07:05", "content": "Original body not yet available!", "html": "Without questioning the merit of FACS as an important technique (I know it is), we must agree with this famous Dobzhansky quote \"Nothing in Biology Makes Sense Except in the Light of Evolution\". ", "lastedit_user": 31}}, {"pk": 479, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 26, "creation_date": "2010-03-13 19:24:42", "content": "Original body not yet available!", "html": "I play around with phylogenetics. It's not simple. And yes, I understand the importance it has in biology. But, sorry, I still can't agree with you. You're view and experience seem limited if you think that every University teaching biology goes into the concept of phylogenetics. In particular there are a lot that focus on medical issues and they really don't care about it.\n\nTrust me, the really don't. And they do very good biology too!", "lastedit_user": 26}}, {"pk": 480, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 31, "creation_date": "2010-03-13 19:50:30", "content": "Original body not yet available!", "html": "I think we are arguing about a different point of view. Maybe due to a particular bias. I am in Brasil and here all biology courses consider phylogenetics pretty seriously, undergraduates seeking to work in medical issues generally goes to medical school. Anyway, I think that even biomedical students can greatly benefit if they start to think about medical problems from an evolutionary perspective. This will be particularly important with the coming availability of a vast number of sequenced human genomes.", "lastedit_user": 31}}, {"pk": 481, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 55, "creation_date": "2010-03-13 20:01:59", "content": "Original body not yet available!", "html": "The message \"Use of unitialized value\" is just a warning, not an error. It is not nice, it means that $QEnd has an empty value but is used in a comparison. However, if the result is ok you could tolerate this. Is the result ok?", "lastedit_user": 55}}, {"pk": 482, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 26, "creation_date": "2010-03-13 21:02:46", "content": "Original body not yet available!", "html": "Dude, I'm not saying you are wrong in stating that it is important (you are totally right!!!).\nI'm saying that you're wrong if you think that every biologist in the world understands or cares about it.", "lastedit_user": 26}}, {"pk": 483, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 31, "creation_date": "2010-03-13 21:18:37", "content": "Original body not yet available!", "html": "Are you sure you can call someone a biologist if they don't understand a simple phylogenetic tree? (I am not telling everyone should care about, I would like that, but it is unreal.)", "lastedit_user": 31}}, {"pk": 484, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 31, "creation_date": "2010-03-13 21:19:45", "content": "Original body not yet available!", "html": "Are you sure you can call someone a biologist if they don't understand a simple phylogenetic tree? ", "lastedit_user": 31}}, {"pk": 485, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 26, "creation_date": "2010-03-13 21:37:10", "content": "Original body not yet available!", "html": "Yes. (This is all I have to say, but I have to add more characters ;)", "lastedit_user": 26}}, {"pk": 486, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 31, "creation_date": "2010-03-13 22:03:36", "content": "Original body not yet available!", "html": "Ok, so we have different views about what a biologist is, and that goes a long way. :--) Thanks for the discussion.", "lastedit_user": 31}}, {"pk": 487, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 125, "creation_date": "2010-03-13 22:59:52", "content": "Original body not yet available!", "html": "Hi Istvan.\n\n1) I contacted - no reply yet.\n\n2) Thanks!", "lastedit_user": 125}}, {"pk": 488, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 125, "creation_date": "2010-03-13 23:02:58", "content": "Original body not yet available!", "html": "Hi Michael,\n\nThanks for your opinion.  I see I will have to go deeper then.  Thanks again.", "lastedit_user": 125}}, {"pk": 489, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 26, "creation_date": "2010-03-13 23:03:12", "content": "Original body not yet available!", "html": "LOL, sorry I didn't want to add anything but I have to add: please, go tell all those people working on type III secretion systems or biofilms in microbiology and all those working on p53 or c-Myc and other cancer related topics! Trust me, they don't care one bit about phylogenetics ;)", "lastedit_user": 26}}, {"pk": 490, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 125, "creation_date": "2010-03-13 23:03:50", "content": "Original body not yet available!", "html": "Thanks darked.\nI am at home now and can't access the file.  I'll try it once I get to the University (I am not sure if they have access or not). Thanks!", "lastedit_user": 125}}, {"pk": 491, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 125, "creation_date": "2010-03-13 23:04:47", "content": "Original body not yet available!", "html": "Giovanni - if I where to find a newer better software I would gladly use it :)", "lastedit_user": 125}}, {"pk": 492, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 125, "creation_date": "2010-03-13 23:09:01", "content": "Original body not yet available!", "html": "Michael - what I really want is to compare (some areas of, for example, the D loop in) tRNA's from different species.\nIn order to do so, I need to know that I am looking at the D loop in all of them, but it is located in different numbering in different tRNA's from different species.  I could just copy paste the websites result (for an aligned sequence, based on the COVE model and the secondary folding of the tRNA) - but I had hoped for a more generic (and thus, scalable) solution for getting these aligned sequences (then using copy paste).", "lastedit_user": 125}}, {"pk": 493, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 31, "creation_date": "2010-03-14 00:11:31", "content": "Original body not yet available!", "html": "ORLLY?? http://bit.ly/cZ7ssB", "lastedit_user": 31}}, {"pk": 494, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 31, "creation_date": "2010-03-14 00:36:03", "content": "Original body not yet available!", "html": "or...if you have access to Scopus: http://bit.ly/coSBWK", "lastedit_user": 31}}, {"pk": 495, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 31, "creation_date": "2010-03-14 00:38:09", "content": "Original body not yet available!", "html": "...and broad results from Scirus: http://bit.ly/cB6eNu", "lastedit_user": 31}}, {"pk": 496, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 14, "creation_date": "2010-03-14 04:56:14", "content": "Original body not yet available!", "html": "\"Trivial, but tedious:\nconstantly munging data files from one poorly defined format to another\"\n\nCan't agree with you more!", "lastedit_user": 14}}, {"pk": 497, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 26, "creation_date": "2010-03-14 08:02:02", "content": "Original body not yet available!", "html": "Look at the stats: pubmed \"p53 cancer\" and compare to \"p53 cancer phylogeny\" :) And YES, again, you do have some that do phylogeny! But seriously, are you calling the tens of thousands of other papers that don't care about it \"Not Biological\"?", "lastedit_user": 26}}, {"pk": 498, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 131, "creation_date": "2010-03-14 17:03:08", "content": "Original body not yet available!", "html": "Thanks Chris. I think what I was thinking of was more on the lines of functional redundancy arising from evolutionary convergence (rather than say gene duplication). As to what exactly is meant by \"redundant\", you point out interesting variations.\n\nMy question originates from RNAi screens. If knockdown of gene X does not result in a loss-of-function phenotype is it because X is not involved in that phenotype? Or is it because X is knocked down, but a functionally equivalent gene (or pathway) can take over the function?", "lastedit_user": 131}}, {"pk": 499, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 58, "creation_date": "2010-03-14 18:19:18", "content": "Original body not yet available!", "html": "If thats all you are looking for, probably a simple blast search to see if there are reasonably well conserved isoforms might be sufficient", "lastedit_user": 58}}, {"pk": 500, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 31, "creation_date": "2010-03-14 19:10:29", "content": "Original body not yet available!", "html": "No, that is not the point.", "lastedit_user": 31}}, {"pk": 501, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 68, "creation_date": "2010-03-14 19:28:22", "content": "Original body not yet available!", "html": "Since this was chosen as the top answer, I've added a link to BioStar in the sidebar of the bioinformatics subreddit.", "lastedit_user": 68}}, {"pk": 502, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 138, "creation_date": "2010-03-15 12:48:19", "content": "Original body not yet available!", "html": "Sorry to interrupt this \"discussion\", but the statement that phylogenetics is easy is unjustified. But because it might be me who just cannot grasp the \"trivial trees\" could you Marcos explain me how I can relate/interpret posterior branch probabilities with bootstrapping values and what to do if they differ significantly? And which of the two approaches for consensus/super-tree reconstruction using majority-rule voting is more relevant evolutionarily i.e. closer to the real evolution.  ", "lastedit_user": 138}}, {"pk": 503, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 31, "creation_date": "2010-03-15 15:43:18", "content": "Original body not yet available!", "html": "Marcin, please consider my other comments. I didn't want to say that phylogenetics is easy. But, build a simple phylogenetic tree and interpret it can be. Please, point me where I told that phylogenetics is easy. Remember that not all problems are ultra-hard and need the most sophisticated inference methods or supertrees to be solved. I definitely wasn't trying to be pedant, pretty much the inverse. See my example about buiding a tree from BLAST results, what can be more simple? Yes, it may not be the most accurate, etc, but sometimes you only need that. That is what I am talking about.", "lastedit_user": 31}}, {"pk": 504, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 30, "creation_date": "2010-03-15 16:12:49", "content": "Original body not yet available!", "html": "Marcos +1: not everyone can understand the subtleties of a phylogenic tree. But *any* biologist (high school student ?) should understand ( I didn't say 'be interested') what is the underlying idea described in those trees. ", "lastedit_user": 30}}, {"pk": 505, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 26, "creation_date": "2010-03-15 20:25:25", "content": "Original body not yet available!", "html": "Pierre and Marcos, I'll just emphasize the key word in your statement: SHOULD. And that is my point... You all seem to evolve in the world of bioinformatics and you understand phylogenetics. But, when it comes to their own work, many biologists (yes, I insist, they are biologists, even if they don't understand phylogenetics) in wet labs do not understand the meaning of phylogenetic relationships. Yes they understand that you can make a \"species tree\", but no, they don't relate it to what they do, i.e. they don't understand it and they do not value it.", "lastedit_user": 26}}, {"pk": 506, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 26, "creation_date": "2010-03-15 20:26:28", "content": "Original body not yet available!", "html": "And Pierre, I have been to high school in the french system. Please tell me when phylogenetics is covered?", "lastedit_user": 26}}, {"pk": 507, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 31, "creation_date": "2010-03-15 21:24:55", "content": "Original body not yet available!", "html": "I am sorry Nicojo, but what you are asking me for is that I admit that is ok for a biologist not understand a phylogenetic tree. This is like saying it is ok for a chemist not understand the acid/base concepts, as long as he works with nuclear chemistry. I can't agree. ", "lastedit_user": 31}}, {"pk": 508, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 26, "creation_date": "2010-03-15 22:01:02", "content": "Original body not yet available!", "html": "Marcos, would we have Rock music if all musicians had to go to the conservatory and learn Brahms first? I don't think so, but I'm probably wrong... I do agree that this is a very important and fundamental aspect of biology. I'm sorry I made all this fuss over this topic. I'm usually fighting with wet lab biologists to try and make them understand that bioinformaticians are also biologists! In any case, even if I disagree, still I respect your take on the matter, and I'll even use it next time I argue with the others ;). Thanks for your patience with my arguments!", "lastedit_user": 26}}, {"pk": 509, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 31, "creation_date": "2010-03-15 22:46:36", "content": "Original body not yet available!", "html": "No problem Nicojo, it was a good discussion. All the best.", "lastedit_user": 31}}, {"pk": 510, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 138, "creation_date": "2010-03-15 23:37:59", "content": "Original body not yet available!", "html": "I'll quote \"building and interpreting a phylogenetic tree from a family of genes can be considered a trivial task in my subfield\". If your statement is true and indeed building a tree from a family of genes is a trivial task to anyone, then my PhD is a terrible mistake is a terrible mistake because I try to give answers to trivial questions like \"what is a family of genes\" or \"how to interpret a phylogenetic tree\". ", "lastedit_user": 138}}, {"pk": 511, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 30, "creation_date": "2010-03-16 12:49:39", "content": "Original body not yet available!", "html": "Nicojo, I was introduced to genetics/phylogeny in my final year of Secondary School (~17 y.o.)", "lastedit_user": 30}}, {"pk": 512, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 26, "creation_date": "2010-03-16 14:06:21", "content": "Original body not yet available!", "html": "Pierre, je viens de chercher le programme officiel et effectivement il semblerait que c'est maintenant partie int\u00e9grante de l'enseignement de terminal S. Mais de votre r\u00e9ponse, j'en d\u00e9duis que vous \u00eates bien plus jeune que moi. Cela fait il de moi un \"non-biologist\"? Je trouve que vous avez une vision tr\u00e8s r\u00e9ductionniste si vous arrivez \u00e0 de telles conclusions. ", "lastedit_user": 26}}, {"pk": 513, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 66, "creation_date": "2010-03-17 05:26:36", "content": "Original body not yet available!", "html": "I've used Trac successfully for project/code management.  I'd also recommend Redmine - http://www.redmine.org/ - written in Ruby on Rails.", "lastedit_user": 66}}, {"pk": 514, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 59, "creation_date": "2010-03-17 11:50:24", "content": "Original body not yet available!", "html": "Seeing as this was the first suggestion for FiB, you get the accepted answer :)", "lastedit_user": 59}}, {"pk": 515, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 142, "creation_date": "2010-03-17 12:48:43", "content": "Original body not yet available!", "html": "This is not a question", "lastedit_user": 142}}, {"pk": 516, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 26, "creation_date": "2010-03-17 12:56:13", "content": "Original body not yet available!", "html": "You should not put unreliable data into Genbank! Either you prove there is natural variation and you submit all the variants or you make sure you have reliable data and you don't have the problem.", "lastedit_user": 26}}, {"pk": 517, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 26, "creation_date": "2010-03-17 12:58:53", "content": "Original body not yet available!", "html": "In this particular case, you can not talk about natural variation: you are sequencing fragments you've cloned into a plasmid! Unless you've contaminated your prep with two colonies from the plate, all the plasmids in one prep should be identical. If you have ambivalent bases, then it's because your sequencing is of bad quality. You should never submit bad quality data to Genbank.", "lastedit_user": 26}}, {"pk": 518, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 121, "creation_date": "2010-03-18 20:37:39", "content": "Original body not yet available!", "html": "In this case I sequenced more colonies and found a consensus sequence, however, I'm cloning PCR products, so I don't think it is possible to say that there could not be natural variation in the PCR amplicon pool.  One good example would be a bacterium with 2 different 16s inside a single cell, this could produce 2 populations  of PCR products.  If the ratio were 1:3, how often would you have to sample cloned colonies in order to observe this natural variation?", "lastedit_user": 121}}, {"pk": 519, "model": "server.post", "fields": {"lastedit_date": "2011-03-31 21:36:07", "score": 0, "views": 0, "author": 62, "creation_date": "2010-03-18 21:13:45", "content": "Original body not yet available!", "html": "Small update: another aligner can use an arbitrary (but less than 250) alphabet:\nhttp://www.vmatch.de/", "lastedit_user": 62}}, {"pk": 1, "model": "server.question", "fields": {"post": 1, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 5, "title": "Site use guidelines"}}, {"pk": 2, "model": "server.question", "fields": {"post": 2, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 2, "title": "How do I convert from BED format to GFF format?"}}, {"pk": 3, "model": "server.question", "fields": {"post": 4, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 7, "title": "Finding common motifs in sequences"}}, {"pk": 4, "model": "server.question", "fields": {"post": 5, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 5, "title": "Recommend easy to use microarray clustering software"}}, {"pk": 5, "model": "server.question", "fields": {"post": 6, "lastedit_date": "2011-03-31 21:35:59", "answer_count": 0, "title": "test by zhenhai"}}, {"pk": 6, "model": "server.question", "fields": {"post": 10, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 1, "title": "How to generate multi-nucleotide occupancy counts for each coordinate of my reads?"}}, {"pk": 7, "model": "server.question", "fields": {"post": 13, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 3, "title": "CHIP DNA deep sequence"}}, {"pk": 8, "model": "server.question", "fields": {"post": 20, "lastedit_date": "2011-03-31 21:35:59", "answer_count": 0, "title": "do you have to be a guy to dress up as boy george"}}, {"pk": 9, "model": "server.question", "fields": {"post": 21, "lastedit_date": "2011-03-31 21:35:59", "answer_count": 0, "title": "do you have to be a guy to dress up as boy george"}}, {"pk": 10, "model": "server.question", "fields": {"post": 22, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 7, "title": "Gene ID conversion tool"}}, {"pk": 11, "model": "server.question", "fields": {"post": 24, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 2, "title": "How to set SHRiMP parameters for best sensitivity with 35bp colorspace data?"}}, {"pk": 12, "model": "server.question", "fields": {"post": 28, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 1, "title": "Tips on compiling and using MEME 4.3 with a Sun Grid Engine computation cluster"}}, {"pk": 13, "model": "server.question", "fields": {"post": 31, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 3, "title": "How do I map, align, and plot my SOLiD results?"}}, {"pk": 14, "model": "server.question", "fields": {"post": 33, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 9, "title": "Which operating system do you prefer for bioinformatics?"}}, {"pk": 15, "model": "server.question", "fields": {"post": 34, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 10, "title": "Which are the best programming languages to study for a bioinformatician?"}}, {"pk": 16, "model": "server.question", "fields": {"post": 41, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 2, "title": "How much do you trust GeneOntology?"}}, {"pk": 17, "model": "server.question", "fields": {"post": 46, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 3, "title": "What is your experience with the STRING (interactions) database?"}}, {"pk": 18, "model": "server.question", "fields": {"post": 48, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 6, "title": "Where can I get the secondary structure of a protein?"}}, {"pk": 19, "model": "server.question", "fields": {"post": 51, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 1, "title": "Turn off BLAST search on reverse complement strand in blastn"}}, {"pk": 20, "model": "server.question", "fields": {"post": 53, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 2, "title": "How to do quality trimming of SoLid Reads in colour space?"}}, {"pk": 21, "model": "server.question", "fields": {"post": 56, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 3, "title": "How to get the sequence of a genomic region from UCSC?"}}, {"pk": 22, "model": "server.question", "fields": {"post": 58, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 8, "title": "What is the best way to share scripts between members of a lab?"}}, {"pk": 23, "model": "server.question", "fields": {"post": 69, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 9, "title": "Using HDF5 to store  bio-data"}}, {"pk": 24, "model": "server.question", "fields": {"post": 76, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 2, "title": "Looking for a 'Hello world\" plugin for Taverna."}}, {"pk": 25, "model": "server.question", "fields": {"post": 77, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 1, "title": "How do I convert an Illumina export file to BED?"}}, {"pk": 26, "model": "server.question", "fields": {"post": 79, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 11, "title": "How to organize a pipeline of small scripts together?"}}, {"pk": 27, "model": "server.question", "fields": {"post": 88, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 2, "title": "Agile programming for bioinformaticians - any suggestions?"}}, {"pk": 28, "model": "server.question", "fields": {"post": 90, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 2, "title": "Computing the reverse and complement of a sequence with Biopython"}}, {"pk": 29, "model": "server.question", "fields": {"post": 92, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 1, "title": "Computing the reverse and complement of a sequence with Pygr"}}, {"pk": 30, "model": "server.question", "fields": {"post": 99, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 3, "title": "Fast interval intersection methodologies"}}, {"pk": 31, "model": "server.question", "fields": {"post": 102, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 1, "title": "How to validate that a sequence only contains letters from a given alphabet?"}}, {"pk": 32, "model": "server.question", "fields": {"post": 108, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 1, "title": "Genome specific database (Gbrowse / Ensembl type)"}}, {"pk": 33, "model": "server.question", "fields": {"post": 111, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 2, "title": "Taxonomy of blast hits"}}, {"pk": 34, "model": "server.question", "fields": {"post": 112, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 9, "title": "Your favorite bioinformatics blog"}}, {"pk": 35, "model": "server.question", "fields": {"post": 128, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 4, "title": "Pfam based functional annotaion"}}, {"pk": 36, "model": "server.question", "fields": {"post": 130, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 1, "title": "k-mer based sequencing contamination detection"}}, {"pk": 37, "model": "server.question", "fields": {"post": 132, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 5, "title": "Experiences with cloud computing in bioinformatics"}}, {"pk": 38, "model": "server.question", "fields": {"post": 137, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 7, "title": "What methods do you use for short read mapping?"}}, {"pk": 39, "model": "server.question", "fields": {"post": 138, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 2, "title": "What is the best place in the world to do Bioinformatics?"}}, {"pk": 40, "model": "server.question", "fields": {"post": 139, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 3, "title": "State of computational genomics"}}, {"pk": 41, "model": "server.question", "fields": {"post": 142, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 3, "title": "Mapping SNPs to Pathways"}}, {"pk": 42, "model": "server.question", "fields": {"post": 149, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 3, "title": "How far does bioinformatics go?"}}, {"pk": 43, "model": "server.question", "fields": {"post": 161, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 1, "title": "Implementation of Blosum62 in the source code of global pairwise alignment of proteins"}}, {"pk": 44, "model": "server.question", "fields": {"post": 162, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 1, "title": "Repeat subunit based multiple alignment of DNA"}}, {"pk": 45, "model": "server.question", "fields": {"post": 168, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 3, "title": "Looking for Linux vendors to order a CentOS/Ubuntu based webserver to host bioinformatics apps"}}, {"pk": 46, "model": "server.question", "fields": {"post": 173, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 3, "title": "How to charecterize a residue in a protein based on it's ASA"}}, {"pk": 47, "model": "server.question", "fields": {"post": 178, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 2, "title": "I was studying a gene but it disappeared in the latest ensembl release. What should I do now?"}}, {"pk": 48, "model": "server.question", "fields": {"post": 181, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 4, "title": "Recommend your favorite bioinformatics books"}}, {"pk": 49, "model": "server.question", "fields": {"post": 183, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 1, "title": "Score protein variants based on frequency of AA in multiple sequence alignment"}}, {"pk": 50, "model": "server.question", "fields": {"post": 185, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 2, "title": "Provide a book review for \"Bioinformatics Programming Using Python\" by Mitchell L. Model"}}, {"pk": 51, "model": "server.question", "fields": {"post": 186, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 1, "title": "merging blastx hits from overlapping bacterial genome segments"}}, {"pk": 52, "model": "server.question", "fields": {"post": 187, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 2, "title": "Compute genetic map"}}, {"pk": 53, "model": "server.question", "fields": {"post": 201, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 5, "title": "Has enhancer and transcription factor binding site prediction already been made redundant?"}}, {"pk": 54, "model": "server.question", "fields": {"post": 205, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 1, "title": "How do I contact the moderators or supervisors of this site?"}}, {"pk": 55, "model": "server.question", "fields": {"post": 215, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 1, "title": "Unambiguous assembly of next-gen fastq reads into fastq contigs?"}}, {"pk": 56, "model": "server.question", "fields": {"post": 222, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 3, "title": "How to find a 28bp 'primer' sequence in a genome?"}}, {"pk": 57, "model": "server.question", "fields": {"post": 228, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 2, "title": "Hierarchical Clustering, Cluster Heat Maps in Java"}}, {"pk": 58, "model": "server.question", "fields": {"post": 232, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 4, "title": "How Important is it to belong to a Professional Society in Computational Biology?"}}, {"pk": 59, "model": "server.question", "fields": {"post": 238, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 3, "title": "How to determine if a gene is active from expression data"}}, {"pk": 60, "model": "server.question", "fields": {"post": 245, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 5, "title": "Tools to find gene ontology term enrichment"}}, {"pk": 61, "model": "server.question", "fields": {"post": 251, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 1, "title": "What open source Java library can I use to query online, free databases in which pathways a metabolite is participating?"}}, {"pk": 62, "model": "server.question", "fields": {"post": 255, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 1, "title": "How can a base-called position be \"unknown\" but have a non-minimal score?"}}, {"pk": 63, "model": "server.question", "fields": {"post": 256, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 3, "title": "If I have 4 sequence runs, 2 in each direction, 1 bp is different, on each, should I resequence?"}}, {"pk": 64, "model": "server.question", "fields": {"post": 258, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 3, "title": "Programatic technique for gene-name/id conversion"}}, {"pk": 65, "model": "server.question", "fields": {"post": 268, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 6, "title": "Appropriate podcasts for a bioinformatician?"}}, {"pk": 66, "model": "server.question", "fields": {"post": 271, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 3, "title": "How to perform tRNA sequence alignment (against a domain-specific tRNA covariance models) with COVE (or Infernal) on windows ?"}}, {"pk": 67, "model": "server.question", "fields": {"post": 277, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 4, "title": "How to convert BLAST results to GFF"}}, {"pk": 68, "model": "server.question", "fields": {"post": 283, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 5, "title": "What do you consider the most trivial and the most challenging tasks in your particular field of work?"}}, {"pk": 69, "model": "server.question", "fields": {"post": 287, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 1, "title": "A resource to identify functionally redundant genes"}}, {"pk": 70, "model": "server.question", "fields": {"post": 290, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 2, "title": "Performing BLAST/SmithWaterman searches directly from my application"}}, {"pk": 71, "model": "server.question", "fields": {"post": 296, "lastedit_date": "2011-03-31 21:36:00", "answer_count": 4, "title": "Where to advertise or find bioinformatics jobs"}}, {"pk": 1, "model": "server.answer", "fields": {"post": 3, "question": 2, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 2, "model": "server.answer", "fields": {"post": 7, "question": 3, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 3, "model": "server.answer", "fields": {"post": 8, "question": 3, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 4, "model": "server.answer", "fields": {"post": 9, "question": 3, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 5, "model": "server.answer", "fields": {"post": 11, "question": 6, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 6, "model": "server.answer", "fields": {"post": 12, "question": 4, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 7, "model": "server.answer", "fields": {"post": 14, "question": 7, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 8, "model": "server.answer", "fields": {"post": 15, "question": 7, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 9, "model": "server.answer", "fields": {"post": 16, "question": 7, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 10, "model": "server.answer", "fields": {"post": 17, "question": 1, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 11, "model": "server.answer", "fields": {"post": 18, "question": 1, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 12, "model": "server.answer", "fields": {"post": 19, "question": 4, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 13, "model": "server.answer", "fields": {"post": 23, "question": 10, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 14, "model": "server.answer", "fields": {"post": 25, "question": 11, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 15, "model": "server.answer", "fields": {"post": 26, "question": 11, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 16, "model": "server.answer", "fields": {"post": 27, "question": 10, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 17, "model": "server.answer", "fields": {"post": 29, "question": 12, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 18, "model": "server.answer", "fields": {"post": 30, "question": 2, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 19, "model": "server.answer", "fields": {"post": 32, "question": 13, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 20, "model": "server.answer", "fields": {"post": 35, "question": 14, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 21, "model": "server.answer", "fields": {"post": 36, "question": 15, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 22, "model": "server.answer", "fields": {"post": 37, "question": 14, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 23, "model": "server.answer", "fields": {"post": 38, "question": 15, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 24, "model": "server.answer", "fields": {"post": 39, "question": 10, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 25, "model": "server.answer", "fields": {"post": 40, "question": 3, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 26, "model": "server.answer", "fields": {"post": 42, "question": 1, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 27, "model": "server.answer", "fields": {"post": 43, "question": 15, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 28, "model": "server.answer", "fields": {"post": 44, "question": 16, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 29, "model": "server.answer", "fields": {"post": 45, "question": 16, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 30, "model": "server.answer", "fields": {"post": 47, "question": 17, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 31, "model": "server.answer", "fields": {"post": 49, "question": 18, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 32, "model": "server.answer", "fields": {"post": 50, "question": 18, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 33, "model": "server.answer", "fields": {"post": 52, "question": 19, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 34, "model": "server.answer", "fields": {"post": 54, "question": 13, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 35, "model": "server.answer", "fields": {"post": 55, "question": 20, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 36, "model": "server.answer", "fields": {"post": 57, "question": 21, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 37, "model": "server.answer", "fields": {"post": 59, "question": 21, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 38, "model": "server.answer", "fields": {"post": 60, "question": 3, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 39, "model": "server.answer", "fields": {"post": 61, "question": 22, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 40, "model": "server.answer", "fields": {"post": 62, "question": 22, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 41, "model": "server.answer", "fields": {"post": 63, "question": 17, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 42, "model": "server.answer", "fields": {"post": 64, "question": 15, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 43, "model": "server.answer", "fields": {"post": 65, "question": 14, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 44, "model": "server.answer", "fields": {"post": 66, "question": 1, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 45, "model": "server.answer", "fields": {"post": 67, "question": 14, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 46, "model": "server.answer", "fields": {"post": 68, "question": 22, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 47, "model": "server.answer", "fields": {"post": 70, "question": 22, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 48, "model": "server.answer", "fields": {"post": 71, "question": 23, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 49, "model": "server.answer", "fields": {"post": 72, "question": 23, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 50, "model": "server.answer", "fields": {"post": 73, "question": 23, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 51, "model": "server.answer", "fields": {"post": 74, "question": 23, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 52, "model": "server.answer", "fields": {"post": 75, "question": 1, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 53, "model": "server.answer", "fields": {"post": 78, "question": 25, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 54, "model": "server.answer", "fields": {"post": 80, "question": 26, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 55, "model": "server.answer", "fields": {"post": 81, "question": 26, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 56, "model": "server.answer", "fields": {"post": 82, "question": 26, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 57, "model": "server.answer", "fields": {"post": 83, "question": 18, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 58, "model": "server.answer", "fields": {"post": 84, "question": 26, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 59, "model": "server.answer", "fields": {"post": 85, "question": 22, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 60, "model": "server.answer", "fields": {"post": 86, "question": 22, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 61, "model": "server.answer", "fields": {"post": 87, "question": 23, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 62, "model": "server.answer", "fields": {"post": 89, "question": 27, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 63, "model": "server.answer", "fields": {"post": 91, "question": 27, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 64, "model": "server.answer", "fields": {"post": 93, "question": 4, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 65, "model": "server.answer", "fields": {"post": 94, "question": 28, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 66, "model": "server.answer", "fields": {"post": 95, "question": 26, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 67, "model": "server.answer", "fields": {"post": 96, "question": 28, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 68, "model": "server.answer", "fields": {"post": 97, "question": 10, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 69, "model": "server.answer", "fields": {"post": 98, "question": 10, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 70, "model": "server.answer", "fields": {"post": 100, "question": 30, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 71, "model": "server.answer", "fields": {"post": 101, "question": 30, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 72, "model": "server.answer", "fields": {"post": 103, "question": 31, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 73, "model": "server.answer", "fields": {"post": 104, "question": 23, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 74, "model": "server.answer", "fields": {"post": 105, "question": 26, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 75, "model": "server.answer", "fields": {"post": 106, "question": 30, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 76, "model": "server.answer", "fields": {"post": 107, "question": 26, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 77, "model": "server.answer", "fields": {"post": 109, "question": 32, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 78, "model": "server.answer", "fields": {"post": 110, "question": 23, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 79, "model": "server.answer", "fields": {"post": 113, "question": 34, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 80, "model": "server.answer", "fields": {"post": 114, "question": 33, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 81, "model": "server.answer", "fields": {"post": 115, "question": 33, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 82, "model": "server.answer", "fields": {"post": 116, "question": 34, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 83, "model": "server.answer", "fields": {"post": 117, "question": 34, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 84, "model": "server.answer", "fields": {"post": 118, "question": 34, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 85, "model": "server.answer", "fields": {"post": 119, "question": 34, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 86, "model": "server.answer", "fields": {"post": 120, "question": 18, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 87, "model": "server.answer", "fields": {"post": 121, "question": 34, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 88, "model": "server.answer", "fields": {"post": 122, "question": 15, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 89, "model": "server.answer", "fields": {"post": 123, "question": 3, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 90, "model": "server.answer", "fields": {"post": 124, "question": 34, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 91, "model": "server.answer", "fields": {"post": 125, "question": 3, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 92, "model": "server.answer", "fields": {"post": 126, "question": 34, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 93, "model": "server.answer", "fields": {"post": 127, "question": 23, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 94, "model": "server.answer", "fields": {"post": 129, "question": 35, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 95, "model": "server.answer", "fields": {"post": 131, "question": 34, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 96, "model": "server.answer", "fields": {"post": 133, "question": 37, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 97, "model": "server.answer", "fields": {"post": 134, "question": 26, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 98, "model": "server.answer", "fields": {"post": 135, "question": 37, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 99, "model": "server.answer", "fields": {"post": 136, "question": 15, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 100, "model": "server.answer", "fields": {"post": 140, "question": 38, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 101, "model": "server.answer", "fields": {"post": 141, "question": 38, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 102, "model": "server.answer", "fields": {"post": 143, "question": 38, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 103, "model": "server.answer", "fields": {"post": 144, "question": 37, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 104, "model": "server.answer", "fields": {"post": 145, "question": 39, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 105, "model": "server.answer", "fields": {"post": 146, "question": 41, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 106, "model": "server.answer", "fields": {"post": 147, "question": 24, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 107, "model": "server.answer", "fields": {"post": 148, "question": 22, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 108, "model": "server.answer", "fields": {"post": 150, "question": 40, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 109, "model": "server.answer", "fields": {"post": 151, "question": 38, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 110, "model": "server.answer", "fields": {"post": 152, "question": 15, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 111, "model": "server.answer", "fields": {"post": 153, "question": 26, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 112, "model": "server.answer", "fields": {"post": 154, "question": 21, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 113, "model": "server.answer", "fields": {"post": 155, "question": 10, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 114, "model": "server.answer", "fields": {"post": 156, "question": 24, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 115, "model": "server.answer", "fields": {"post": 157, "question": 15, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 116, "model": "server.answer", "fields": {"post": 158, "question": 14, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 117, "model": "server.answer", "fields": {"post": 159, "question": 4, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 118, "model": "server.answer", "fields": {"post": 160, "question": 22, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 119, "model": "server.answer", "fields": {"post": 163, "question": 43, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 120, "model": "server.answer", "fields": {"post": 164, "question": 40, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 121, "model": "server.answer", "fields": {"post": 165, "question": 39, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 122, "model": "server.answer", "fields": {"post": 166, "question": 42, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 123, "model": "server.answer", "fields": {"post": 167, "question": 41, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 124, "model": "server.answer", "fields": {"post": 169, "question": 40, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 125, "model": "server.answer", "fields": {"post": 170, "question": 17, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 126, "model": "server.answer", "fields": {"post": 171, "question": 4, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 127, "model": "server.answer", "fields": {"post": 172, "question": 45, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 128, "model": "server.answer", "fields": {"post": 174, "question": 45, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 129, "model": "server.answer", "fields": {"post": 175, "question": 42, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 130, "model": "server.answer", "fields": {"post": 176, "question": 44, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 131, "model": "server.answer", "fields": {"post": 177, "question": 14, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 132, "model": "server.answer", "fields": {"post": 179, "question": 47, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 133, "model": "server.answer", "fields": {"post": 180, "question": 47, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 134, "model": "server.answer", "fields": {"post": 182, "question": 48, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 135, "model": "server.answer", "fields": {"post": 184, "question": 48, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 136, "model": "server.answer", "fields": {"post": 188, "question": 51, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 137, "model": "server.answer", "fields": {"post": 189, "question": 45, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 138, "model": "server.answer", "fields": {"post": 190, "question": 50, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 139, "model": "server.answer", "fields": {"post": 191, "question": 50, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 140, "model": "server.answer", "fields": {"post": 192, "question": 48, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 141, "model": "server.answer", "fields": {"post": 193, "question": 14, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 142, "model": "server.answer", "fields": {"post": 194, "question": 41, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 143, "model": "server.answer", "fields": {"post": 195, "question": 48, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 144, "model": "server.answer", "fields": {"post": 196, "question": 46, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 145, "model": "server.answer", "fields": {"post": 197, "question": 36, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 146, "model": "server.answer", "fields": {"post": 198, "question": 18, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 147, "model": "server.answer", "fields": {"post": 199, "question": 49, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 148, "model": "server.answer", "fields": {"post": 200, "question": 35, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 149, "model": "server.answer", "fields": {"post": 202, "question": 42, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 150, "model": "server.answer", "fields": {"post": 203, "question": 37, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 151, "model": "server.answer", "fields": {"post": 204, "question": 53, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 152, "model": "server.answer", "fields": {"post": 206, "question": 54, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 153, "model": "server.answer", "fields": {"post": 207, "question": 20, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 154, "model": "server.answer", "fields": {"post": 208, "question": 13, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 155, "model": "server.answer", "fields": {"post": 209, "question": 52, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 156, "model": "server.answer", "fields": {"post": 210, "question": 10, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 157, "model": "server.answer", "fields": {"post": 211, "question": 18, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 158, "model": "server.answer", "fields": {"post": 212, "question": 46, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 159, "model": "server.answer", "fields": {"post": 213, "question": 23, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 160, "model": "server.answer", "fields": {"post": 214, "question": 14, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 161, "model": "server.answer", "fields": {"post": 216, "question": 14, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 162, "model": "server.answer", "fields": {"post": 217, "question": 46, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 163, "model": "server.answer", "fields": {"post": 218, "question": 26, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 164, "model": "server.answer", "fields": {"post": 219, "question": 53, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 165, "model": "server.answer", "fields": {"post": 220, "question": 26, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 166, "model": "server.answer", "fields": {"post": 221, "question": 38, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 167, "model": "server.answer", "fields": {"post": 223, "question": 56, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 168, "model": "server.answer", "fields": {"post": 224, "question": 38, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 169, "model": "server.answer", "fields": {"post": 225, "question": 56, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 170, "model": "server.answer", "fields": {"post": 226, "question": 53, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 171, "model": "server.answer", "fields": {"post": 227, "question": 52, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 172, "model": "server.answer", "fields": {"post": 229, "question": 57, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 173, "model": "server.answer", "fields": {"post": 230, "question": 29, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 174, "model": "server.answer", "fields": {"post": 231, "question": 56, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 175, "model": "server.answer", "fields": {"post": 233, "question": 58, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 176, "model": "server.answer", "fields": {"post": 234, "question": 58, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 177, "model": "server.answer", "fields": {"post": 235, "question": 35, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 178, "model": "server.answer", "fields": {"post": 236, "question": 58, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 179, "model": "server.answer", "fields": {"post": 237, "question": 58, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 180, "model": "server.answer", "fields": {"post": 239, "question": 59, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 181, "model": "server.answer", "fields": {"post": 240, "question": 38, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 182, "model": "server.answer", "fields": {"post": 241, "question": 15, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 183, "model": "server.answer", "fields": {"post": 242, "question": 53, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 184, "model": "server.answer", "fields": {"post": 243, "question": 53, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 185, "model": "server.answer", "fields": {"post": 244, "question": 15, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 186, "model": "server.answer", "fields": {"post": 246, "question": 60, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 187, "model": "server.answer", "fields": {"post": 247, "question": 60, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 188, "model": "server.answer", "fields": {"post": 248, "question": 59, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 189, "model": "server.answer", "fields": {"post": 249, "question": 57, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 190, "model": "server.answer", "fields": {"post": 250, "question": 60, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 191, "model": "server.answer", "fields": {"post": 252, "question": 61, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 192, "model": "server.answer", "fields": {"post": 253, "question": 60, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 193, "model": "server.answer", "fields": {"post": 254, "question": 35, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 194, "model": "server.answer", "fields": {"post": 257, "question": 59, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 195, "model": "server.answer", "fields": {"post": 259, "question": 37, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 196, "model": "server.answer", "fields": {"post": 260, "question": 64, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 197, "model": "server.answer", "fields": {"post": 261, "question": 62, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 198, "model": "server.answer", "fields": {"post": 262, "question": 55, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 199, "model": "server.answer", "fields": {"post": 263, "question": 63, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 200, "model": "server.answer", "fields": {"post": 264, "question": 63, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 201, "model": "server.answer", "fields": {"post": 265, "question": 63, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 202, "model": "server.answer", "fields": {"post": 266, "question": 64, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 203, "model": "server.answer", "fields": {"post": 267, "question": 60, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 204, "model": "server.answer", "fields": {"post": 269, "question": 65, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 205, "model": "server.answer", "fields": {"post": 270, "question": 65, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 206, "model": "server.answer", "fields": {"post": 272, "question": 65, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 207, "model": "server.answer", "fields": {"post": 273, "question": 66, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 208, "model": "server.answer", "fields": {"post": 274, "question": 65, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 209, "model": "server.answer", "fields": {"post": 275, "question": 66, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 210, "model": "server.answer", "fields": {"post": 276, "question": 66, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 211, "model": "server.answer", "fields": {"post": 278, "question": 65, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 212, "model": "server.answer", "fields": {"post": 279, "question": 67, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 213, "model": "server.answer", "fields": {"post": 280, "question": 67, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 214, "model": "server.answer", "fields": {"post": 281, "question": 67, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 215, "model": "server.answer", "fields": {"post": 282, "question": 64, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 216, "model": "server.answer", "fields": {"post": 284, "question": 68, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 217, "model": "server.answer", "fields": {"post": 285, "question": 68, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 218, "model": "server.answer", "fields": {"post": 286, "question": 67, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 219, "model": "server.answer", "fields": {"post": 288, "question": 69, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 220, "model": "server.answer", "fields": {"post": 289, "question": 65, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 221, "model": "server.answer", "fields": {"post": 291, "question": 70, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 222, "model": "server.answer", "fields": {"post": 292, "question": 70, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 223, "model": "server.answer", "fields": {"post": 293, "question": 68, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 224, "model": "server.answer", "fields": {"post": 294, "question": 68, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 225, "model": "server.answer", "fields": {"post": 295, "question": 68, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 226, "model": "server.answer", "fields": {"post": 297, "question": 71, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 227, "model": "server.answer", "fields": {"post": 298, "question": 71, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 228, "model": "server.answer", "fields": {"post": 299, "question": 71, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 229, "model": "server.answer", "fields": {"post": 300, "question": 71, "lastedit_date": "2011-03-31 21:36:00"}}, {"pk": 1, "model": "server.comment", "fields": {"post": 301, "lastedit_date": "2011-03-31 21:36:06", "parent": 2}}, {"pk": 2, "model": "server.comment", "fields": {"post": 302, "lastedit_date": "2011-03-31 21:36:06", "parent": 9}}, {"pk": 3, "model": "server.comment", "fields": {"post": 303, "lastedit_date": "2011-03-31 21:36:06", "parent": 18}}, {"pk": 4, "model": "server.comment", "fields": {"post": 304, "lastedit_date": "2011-03-31 21:36:06", "parent": 23}}, {"pk": 5, "model": "server.comment", "fields": {"post": 305, "lastedit_date": "2011-03-31 21:36:06", "parent": 30}}, {"pk": 6, "model": "server.comment", "fields": {"post": 306, "lastedit_date": "2011-03-31 21:36:06", "parent": 32}}, {"pk": 7, "model": "server.comment", "fields": {"post": 307, "lastedit_date": "2011-03-31 21:36:06", "parent": 32}}, {"pk": 8, "model": "server.comment", "fields": {"post": 308, "lastedit_date": "2011-03-31 21:36:06", "parent": 37}}, {"pk": 9, "model": "server.comment", "fields": {"post": 309, "lastedit_date": "2011-03-31 21:36:06", "parent": 37}}, {"pk": 10, "model": "server.comment", "fields": {"post": 310, "lastedit_date": "2011-03-31 21:36:06", "parent": 23}}, {"pk": 11, "model": "server.comment", "fields": {"post": 311, "lastedit_date": "2011-03-31 21:36:06", "parent": 42}}, {"pk": 12, "model": "server.comment", "fields": {"post": 312, "lastedit_date": "2011-03-31 21:36:06", "parent": 30}}, {"pk": 13, "model": "server.comment", "fields": {"post": 313, "lastedit_date": "2011-03-31 21:36:06", "parent": 57}}, {"pk": 14, "model": "server.comment", "fields": {"post": 314, "lastedit_date": "2011-03-31 21:36:06", "parent": 57}}, {"pk": 15, "model": "server.comment", "fields": {"post": 315, "lastedit_date": "2011-03-31 21:36:06", "parent": 57}}, {"pk": 16, "model": "server.comment", "fields": {"post": 316, "lastedit_date": "2011-03-31 21:36:06", "parent": 59}}, {"pk": 17, "model": "server.comment", "fields": {"post": 317, "lastedit_date": "2011-03-31 21:36:06", "parent": 61}}, {"pk": 18, "model": "server.comment", "fields": {"post": 318, "lastedit_date": "2011-03-31 21:36:06", "parent": 59}}, {"pk": 19, "model": "server.comment", "fields": {"post": 319, "lastedit_date": "2011-03-31 21:36:06", "parent": 65}}, {"pk": 20, "model": "server.comment", "fields": {"post": 320, "lastedit_date": "2011-03-31 21:36:06", "parent": 71}}, {"pk": 21, "model": "server.comment", "fields": {"post": 321, "lastedit_date": "2011-03-31 21:36:06", "parent": 73}}, {"pk": 22, "model": "server.comment", "fields": {"post": 322, "lastedit_date": "2011-03-31 21:36:06", "parent": 66}}, {"pk": 23, "model": "server.comment", "fields": {"post": 323, "lastedit_date": "2011-03-31 21:36:06", "parent": 73}}, {"pk": 24, "model": "server.comment", "fields": {"post": 324, "lastedit_date": "2011-03-31 21:36:06", "parent": 74}}, {"pk": 25, "model": "server.comment", "fields": {"post": 325, "lastedit_date": "2011-03-31 21:36:06", "parent": 75}}, {"pk": 26, "model": "server.comment", "fields": {"post": 326, "lastedit_date": "2011-03-31 21:36:06", "parent": 75}}, {"pk": 27, "model": "server.comment", "fields": {"post": 327, "lastedit_date": "2011-03-31 21:36:06", "parent": 75}}, {"pk": 28, "model": "server.comment", "fields": {"post": 328, "lastedit_date": "2011-03-31 21:36:06", "parent": 77}}, {"pk": 29, "model": "server.comment", "fields": {"post": 329, "lastedit_date": "2011-03-31 21:36:06", "parent": 80}}, {"pk": 30, "model": "server.comment", "fields": {"post": 330, "lastedit_date": "2011-03-31 21:36:06", "parent": 81}}, {"pk": 31, "model": "server.comment", "fields": {"post": 331, "lastedit_date": "2011-03-31 21:36:06", "parent": 82}}, {"pk": 32, "model": "server.comment", "fields": {"post": 332, "lastedit_date": "2011-03-31 21:36:06", "parent": 81}}, {"pk": 33, "model": "server.comment", "fields": {"post": 333, "lastedit_date": "2011-03-31 21:36:06", "parent": 84}}, {"pk": 34, "model": "server.comment", "fields": {"post": 334, "lastedit_date": "2011-03-31 21:36:06", "parent": 90}}, {"pk": 35, "model": "server.comment", "fields": {"post": 335, "lastedit_date": "2011-03-31 21:36:06", "parent": 94}}, {"pk": 36, "model": "server.comment", "fields": {"post": 336, "lastedit_date": "2011-03-31 21:36:06", "parent": 95}}, {"pk": 37, "model": "server.comment", "fields": {"post": 337, "lastedit_date": "2011-03-31 21:36:06", "parent": 95}}, {"pk": 38, "model": "server.comment", "fields": {"post": 338, "lastedit_date": "2011-03-31 21:36:06", "parent": 91}}, {"pk": 39, "model": "server.comment", "fields": {"post": 339, "lastedit_date": "2011-03-31 21:36:06", "parent": 96}}, {"pk": 40, "model": "server.comment", "fields": {"post": 340, "lastedit_date": "2011-03-31 21:36:06", "parent": 107}}, {"pk": 41, "model": "server.comment", "fields": {"post": 341, "lastedit_date": "2011-03-31 21:36:06", "parent": 110}}, {"pk": 42, "model": "server.comment", "fields": {"post": 342, "lastedit_date": "2011-03-31 21:36:06", "parent": 108}}, {"pk": 43, "model": "server.comment", "fields": {"post": 343, "lastedit_date": "2011-03-31 21:36:06", "parent": 111}}, {"pk": 44, "model": "server.comment", "fields": {"post": 344, "lastedit_date": "2011-03-31 21:36:06", "parent": 103}}, {"pk": 45, "model": "server.comment", "fields": {"post": 345, "lastedit_date": "2011-03-31 21:36:06", "parent": 111}}, {"pk": 46, "model": "server.comment", "fields": {"post": 346, "lastedit_date": "2011-03-31 21:36:06", "parent": 113}}, {"pk": 47, "model": "server.comment", "fields": {"post": 347, "lastedit_date": "2011-03-31 21:36:06", "parent": 117}}, {"pk": 48, "model": "server.comment", "fields": {"post": 348, "lastedit_date": "2011-03-31 21:36:06", "parent": 115}}, {"pk": 49, "model": "server.comment", "fields": {"post": 349, "lastedit_date": "2011-03-31 21:36:06", "parent": 113}}, {"pk": 50, "model": "server.comment", "fields": {"post": 350, "lastedit_date": "2011-03-31 21:36:06", "parent": 114}}, {"pk": 51, "model": "server.comment", "fields": {"post": 351, "lastedit_date": "2011-03-31 21:36:06", "parent": 115}}, {"pk": 52, "model": "server.comment", "fields": {"post": 352, "lastedit_date": "2011-03-31 21:36:06", "parent": 115}}, {"pk": 53, "model": "server.comment", "fields": {"post": 353, "lastedit_date": "2011-03-31 21:36:06", "parent": 121}}, {"pk": 54, "model": "server.comment", "fields": {"post": 354, "lastedit_date": "2011-03-31 21:36:06", "parent": 121}}, {"pk": 55, "model": "server.comment", "fields": {"post": 355, "lastedit_date": "2011-03-31 21:36:06", "parent": 114}}, {"pk": 56, "model": "server.comment", "fields": {"post": 356, "lastedit_date": "2011-03-31 21:36:06", "parent": 114}}, {"pk": 57, "model": "server.comment", "fields": {"post": 357, "lastedit_date": "2011-03-31 21:36:06", "parent": 114}}, {"pk": 58, "model": "server.comment", "fields": {"post": 358, "lastedit_date": "2011-03-31 21:36:06", "parent": 22}}, {"pk": 59, "model": "server.comment", "fields": {"post": 359, "lastedit_date": "2011-03-31 21:36:06", "parent": 71}}, {"pk": 60, "model": "server.comment", "fields": {"post": 360, "lastedit_date": "2011-03-31 21:36:06", "parent": 114}}, {"pk": 61, "model": "server.comment", "fields": {"post": 361, "lastedit_date": "2011-03-31 21:36:06", "parent": 128}}, {"pk": 62, "model": "server.comment", "fields": {"post": 362, "lastedit_date": "2011-03-31 21:36:06", "parent": 127}}, {"pk": 63, "model": "server.comment", "fields": {"post": 363, "lastedit_date": "2011-03-31 21:36:06", "parent": 92}}, {"pk": 64, "model": "server.comment", "fields": {"post": 364, "lastedit_date": "2011-03-31 21:36:06", "parent": 94}}, {"pk": 65, "model": "server.comment", "fields": {"post": 365, "lastedit_date": "2011-03-31 21:36:06", "parent": 129}}, {"pk": 66, "model": "server.comment", "fields": {"post": 366, "lastedit_date": "2011-03-31 21:36:06", "parent": 34}}, {"pk": 67, "model": "server.comment", "fields": {"post": 367, "lastedit_date": "2011-03-31 21:36:06", "parent": 138}}, {"pk": 68, "model": "server.comment", "fields": {"post": 368, "lastedit_date": "2011-03-31 21:36:06", "parent": 140}}, {"pk": 69, "model": "server.comment", "fields": {"post": 369, "lastedit_date": "2011-03-31 21:36:06", "parent": 140}}, {"pk": 70, "model": "server.comment", "fields": {"post": 370, "lastedit_date": "2011-03-31 21:36:06", "parent": 142}}, {"pk": 71, "model": "server.comment", "fields": {"post": 371, "lastedit_date": "2011-03-31 21:36:06", "parent": 145}}, {"pk": 72, "model": "server.comment", "fields": {"post": 372, "lastedit_date": "2011-03-31 21:36:06", "parent": 146}}, {"pk": 73, "model": "server.comment", "fields": {"post": 373, "lastedit_date": "2011-03-31 21:36:06", "parent": 142}}, {"pk": 74, "model": "server.comment", "fields": {"post": 374, "lastedit_date": "2011-03-31 21:36:06", "parent": 138}}, {"pk": 75, "model": "server.comment", "fields": {"post": 375, "lastedit_date": "2011-03-31 21:36:06", "parent": 138}}, {"pk": 76, "model": "server.comment", "fields": {"post": 376, "lastedit_date": "2011-03-31 21:36:06", "parent": 59}}, {"pk": 77, "model": "server.comment", "fields": {"post": 377, "lastedit_date": "2011-03-31 21:36:06", "parent": 59}}, {"pk": 78, "model": "server.comment", "fields": {"post": 378, "lastedit_date": "2011-03-31 21:36:06", "parent": 153}}, {"pk": 79, "model": "server.comment", "fields": {"post": 379, "lastedit_date": "2011-03-31 21:36:06", "parent": 133}}, {"pk": 80, "model": "server.comment", "fields": {"post": 380, "lastedit_date": "2011-03-31 21:36:06", "parent": 156}}, {"pk": 81, "model": "server.comment", "fields": {"post": 381, "lastedit_date": "2011-03-31 21:36:06", "parent": 129}}, {"pk": 82, "model": "server.comment", "fields": {"post": 382, "lastedit_date": "2011-03-31 21:36:06", "parent": 139}}, {"pk": 83, "model": "server.comment", "fields": {"post": 383, "lastedit_date": "2011-03-31 21:36:06", "parent": 170}}, {"pk": 84, "model": "server.comment", "fields": {"post": 384, "lastedit_date": "2011-03-31 21:36:06", "parent": 168}}, {"pk": 85, "model": "server.comment", "fields": {"post": 385, "lastedit_date": "2011-03-31 21:36:06", "parent": 35}}, {"pk": 86, "model": "server.comment", "fields": {"post": 386, "lastedit_date": "2011-03-31 21:36:06", "parent": 177}}, {"pk": 87, "model": "server.comment", "fields": {"post": 387, "lastedit_date": "2011-03-31 21:36:06", "parent": 173}}, {"pk": 88, "model": "server.comment", "fields": {"post": 388, "lastedit_date": "2011-03-31 21:36:06", "parent": 175}}, {"pk": 89, "model": "server.comment", "fields": {"post": 389, "lastedit_date": "2011-03-31 21:36:06", "parent": 174}}, {"pk": 90, "model": "server.comment", "fields": {"post": 390, "lastedit_date": "2011-03-31 21:36:06", "parent": 184}}, {"pk": 91, "model": "server.comment", "fields": {"post": 391, "lastedit_date": "2011-03-31 21:36:06", "parent": 188}}, {"pk": 92, "model": "server.comment", "fields": {"post": 392, "lastedit_date": "2011-03-31 21:36:06", "parent": 179}}, {"pk": 93, "model": "server.comment", "fields": {"post": 393, "lastedit_date": "2011-03-31 21:36:06", "parent": 168}}, {"pk": 94, "model": "server.comment", "fields": {"post": 394, "lastedit_date": "2011-03-31 21:36:06", "parent": 190}}, {"pk": 95, "model": "server.comment", "fields": {"post": 395, "lastedit_date": "2011-03-31 21:36:06", "parent": 190}}, {"pk": 96, "model": "server.comment", "fields": {"post": 396, "lastedit_date": "2011-03-31 21:36:06", "parent": 192}}, {"pk": 97, "model": "server.comment", "fields": {"post": 397, "lastedit_date": "2011-03-31 21:36:06", "parent": 175}}, {"pk": 98, "model": "server.comment", "fields": {"post": 398, "lastedit_date": "2011-03-31 21:36:06", "parent": 170}}, {"pk": 99, "model": "server.comment", "fields": {"post": 399, "lastedit_date": "2011-03-31 21:36:06", "parent": 168}}, {"pk": 100, "model": "server.comment", "fields": {"post": 400, "lastedit_date": "2011-03-31 21:36:06", "parent": 168}}, {"pk": 101, "model": "server.comment", "fields": {"post": 401, "lastedit_date": "2011-03-31 21:36:06", "parent": 172}}, {"pk": 102, "model": "server.comment", "fields": {"post": 402, "lastedit_date": "2011-03-31 21:36:06", "parent": 189}}, {"pk": 103, "model": "server.comment", "fields": {"post": 403, "lastedit_date": "2011-03-31 21:36:06", "parent": 55}}, {"pk": 104, "model": "server.comment", "fields": {"post": 404, "lastedit_date": "2011-03-31 21:36:06", "parent": 213}}, {"pk": 105, "model": "server.comment", "fields": {"post": 405, "lastedit_date": "2011-03-31 21:36:06", "parent": 199}}, {"pk": 106, "model": "server.comment", "fields": {"post": 406, "lastedit_date": "2011-03-31 21:36:06", "parent": 220}}, {"pk": 107, "model": "server.comment", "fields": {"post": 407, "lastedit_date": "2011-03-31 21:36:06", "parent": 218}}, {"pk": 108, "model": "server.comment", "fields": {"post": 408, "lastedit_date": "2011-03-31 21:36:06", "parent": 220}}, {"pk": 109, "model": "server.comment", "fields": {"post": 409, "lastedit_date": "2011-03-31 21:36:06", "parent": 199}}, {"pk": 110, "model": "server.comment", "fields": {"post": 410, "lastedit_date": "2011-03-31 21:36:06", "parent": 222}}, {"pk": 111, "model": "server.comment", "fields": {"post": 411, "lastedit_date": "2011-03-31 21:36:06", "parent": 165}}, {"pk": 112, "model": "server.comment", "fields": {"post": 412, "lastedit_date": "2011-03-31 21:36:07", "parent": 222}}, {"pk": 113, "model": "server.comment", "fields": {"post": 413, "lastedit_date": "2011-03-31 21:36:07", "parent": 140}}, {"pk": 114, "model": "server.comment", "fields": {"post": 414, "lastedit_date": "2011-03-31 21:36:07", "parent": 140}}, {"pk": 115, "model": "server.comment", "fields": {"post": 415, "lastedit_date": "2011-03-31 21:36:07", "parent": 231}}, {"pk": 116, "model": "server.comment", "fields": {"post": 416, "lastedit_date": "2011-03-31 21:36:07", "parent": 197}}, {"pk": 117, "model": "server.comment", "fields": {"post": 417, "lastedit_date": "2011-03-31 21:36:07", "parent": 230}}, {"pk": 118, "model": "server.comment", "fields": {"post": 418, "lastedit_date": "2011-03-31 21:36:07", "parent": 92}}, {"pk": 119, "model": "server.comment", "fields": {"post": 419, "lastedit_date": "2011-03-31 21:36:07", "parent": 227}}, {"pk": 120, "model": "server.comment", "fields": {"post": 420, "lastedit_date": "2011-03-31 21:36:07", "parent": 238}}, {"pk": 121, "model": "server.comment", "fields": {"post": 421, "lastedit_date": "2011-03-31 21:36:07", "parent": 238}}, {"pk": 122, "model": "server.comment", "fields": {"post": 422, "lastedit_date": "2011-03-31 21:36:07", "parent": 208}}, {"pk": 123, "model": "server.comment", "fields": {"post": 423, "lastedit_date": "2011-03-31 21:36:07", "parent": 222}}, {"pk": 124, "model": "server.comment", "fields": {"post": 424, "lastedit_date": "2011-03-31 21:36:07", "parent": 37}}, {"pk": 125, "model": "server.comment", "fields": {"post": 425, "lastedit_date": "2011-03-31 21:36:07", "parent": 239}}, {"pk": 126, "model": "server.comment", "fields": {"post": 426, "lastedit_date": "2011-03-31 21:36:07", "parent": 237}}, {"pk": 127, "model": "server.comment", "fields": {"post": 427, "lastedit_date": "2011-03-31 21:36:07", "parent": 54}}, {"pk": 128, "model": "server.comment", "fields": {"post": 428, "lastedit_date": "2011-03-31 21:36:07", "parent": 246}}, {"pk": 129, "model": "server.comment", "fields": {"post": 429, "lastedit_date": "2011-03-31 21:36:07", "parent": 248}}, {"pk": 130, "model": "server.comment", "fields": {"post": 430, "lastedit_date": "2011-03-31 21:36:07", "parent": 239}}, {"pk": 131, "model": "server.comment", "fields": {"post": 431, "lastedit_date": "2011-03-31 21:36:07", "parent": 248}}, {"pk": 132, "model": "server.comment", "fields": {"post": 432, "lastedit_date": "2011-03-31 21:36:07", "parent": 248}}, {"pk": 133, "model": "server.comment", "fields": {"post": 433, "lastedit_date": "2011-03-31 21:36:07", "parent": 249}}, {"pk": 134, "model": "server.comment", "fields": {"post": 434, "lastedit_date": "2011-03-31 21:36:07", "parent": 249}}, {"pk": 135, "model": "server.comment", "fields": {"post": 435, "lastedit_date": "2011-03-31 21:36:07", "parent": 229}}, {"pk": 136, "model": "server.comment", "fields": {"post": 436, "lastedit_date": "2011-03-31 21:36:07", "parent": 248}}, {"pk": 137, "model": "server.comment", "fields": {"post": 437, "lastedit_date": "2011-03-31 21:36:07", "parent": 248}}, {"pk": 138, "model": "server.comment", "fields": {"post": 438, "lastedit_date": "2011-03-31 21:36:07", "parent": 71}}, {"pk": 139, "model": "server.comment", "fields": {"post": 439, "lastedit_date": "2011-03-31 21:36:07", "parent": 255}}, {"pk": 140, "model": "server.comment", "fields": {"post": 440, "lastedit_date": "2011-03-31 21:36:07", "parent": 256}}, {"pk": 141, "model": "server.comment", "fields": {"post": 441, "lastedit_date": "2011-03-31 21:36:07", "parent": 258}}, {"pk": 142, "model": "server.comment", "fields": {"post": 442, "lastedit_date": "2011-03-31 21:36:07", "parent": 255}}, {"pk": 143, "model": "server.comment", "fields": {"post": 443, "lastedit_date": "2011-03-31 21:36:07", "parent": 261}}, {"pk": 144, "model": "server.comment", "fields": {"post": 444, "lastedit_date": "2011-03-31 21:36:07", "parent": 246}}, {"pk": 145, "model": "server.comment", "fields": {"post": 445, "lastedit_date": "2011-03-31 21:36:07", "parent": 256}}, {"pk": 146, "model": "server.comment", "fields": {"post": 446, "lastedit_date": "2011-03-31 21:36:07", "parent": 256}}, {"pk": 147, "model": "server.comment", "fields": {"post": 447, "lastedit_date": "2011-03-31 21:36:07", "parent": 270}}, {"pk": 148, "model": "server.comment", "fields": {"post": 448, "lastedit_date": "2011-03-31 21:36:07", "parent": 269}}, {"pk": 149, "model": "server.comment", "fields": {"post": 449, "lastedit_date": "2011-03-31 21:36:07", "parent": 272}}, {"pk": 150, "model": "server.comment", "fields": {"post": 450, "lastedit_date": "2011-03-31 21:36:07", "parent": 271}}, {"pk": 151, "model": "server.comment", "fields": {"post": 451, "lastedit_date": "2011-03-31 21:36:07", "parent": 268}}, {"pk": 152, "model": "server.comment", "fields": {"post": 452, "lastedit_date": "2011-03-31 21:36:07", "parent": 272}}, {"pk": 153, "model": "server.comment", "fields": {"post": 453, "lastedit_date": "2011-03-31 21:36:07", "parent": 268}}, {"pk": 154, "model": "server.comment", "fields": {"post": 454, "lastedit_date": "2011-03-31 21:36:07", "parent": 268}}, {"pk": 155, "model": "server.comment", "fields": {"post": 455, "lastedit_date": "2011-03-31 21:36:07", "parent": 271}}, {"pk": 156, "model": "server.comment", "fields": {"post": 456, "lastedit_date": "2011-03-31 21:36:07", "parent": 163}}, {"pk": 157, "model": "server.comment", "fields": {"post": 457, "lastedit_date": "2011-03-31 21:36:07", "parent": 266}}, {"pk": 158, "model": "server.comment", "fields": {"post": 458, "lastedit_date": "2011-03-31 21:36:07", "parent": 266}}, {"pk": 159, "model": "server.comment", "fields": {"post": 459, "lastedit_date": "2011-03-31 21:36:07", "parent": 266}}, {"pk": 160, "model": "server.comment", "fields": {"post": 460, "lastedit_date": "2011-03-31 21:36:07", "parent": 268}}, {"pk": 161, "model": "server.comment", "fields": {"post": 461, "lastedit_date": "2011-03-31 21:36:07", "parent": 278}}, {"pk": 162, "model": "server.comment", "fields": {"post": 462, "lastedit_date": "2011-03-31 21:36:07", "parent": 279}}, {"pk": 163, "model": "server.comment", "fields": {"post": 463, "lastedit_date": "2011-03-31 21:36:07", "parent": 280}}, {"pk": 164, "model": "server.comment", "fields": {"post": 464, "lastedit_date": "2011-03-31 21:36:07", "parent": 279}}, {"pk": 165, "model": "server.comment", "fields": {"post": 465, "lastedit_date": "2011-03-31 21:36:07", "parent": 278}}, {"pk": 166, "model": "server.comment", "fields": {"post": 466, "lastedit_date": "2011-03-31 21:36:07", "parent": 279}}, {"pk": 167, "model": "server.comment", "fields": {"post": 467, "lastedit_date": "2011-03-31 21:36:07", "parent": 268}}, {"pk": 168, "model": "server.comment", "fields": {"post": 468, "lastedit_date": "2011-03-31 21:36:07", "parent": 279}}, {"pk": 169, "model": "server.comment", "fields": {"post": 469, "lastedit_date": "2011-03-31 21:36:07", "parent": 281}}, {"pk": 170, "model": "server.comment", "fields": {"post": 470, "lastedit_date": "2011-03-31 21:36:07", "parent": 279}}, {"pk": 171, "model": "server.comment", "fields": {"post": 471, "lastedit_date": "2011-03-31 21:36:07", "parent": 279}}, {"pk": 172, "model": "server.comment", "fields": {"post": 472, "lastedit_date": "2011-03-31 21:36:07", "parent": 274}}, {"pk": 173, "model": "server.comment", "fields": {"post": 473, "lastedit_date": "2011-03-31 21:36:07", "parent": 278}}, {"pk": 174, "model": "server.comment", "fields": {"post": 474, "lastedit_date": "2011-03-31 21:36:07", "parent": 284}}, {"pk": 175, "model": "server.comment", "fields": {"post": 475, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 176, "model": "server.comment", "fields": {"post": 476, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 177, "model": "server.comment", "fields": {"post": 477, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 178, "model": "server.comment", "fields": {"post": 478, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 179, "model": "server.comment", "fields": {"post": 479, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 180, "model": "server.comment", "fields": {"post": 480, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 181, "model": "server.comment", "fields": {"post": 481, "lastedit_date": "2011-03-31 21:36:07", "parent": 279}}, {"pk": 182, "model": "server.comment", "fields": {"post": 482, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 183, "model": "server.comment", "fields": {"post": 483, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 184, "model": "server.comment", "fields": {"post": 484, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 185, "model": "server.comment", "fields": {"post": 485, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 186, "model": "server.comment", "fields": {"post": 486, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 187, "model": "server.comment", "fields": {"post": 487, "lastedit_date": "2011-03-31 21:36:07", "parent": 273}}, {"pk": 188, "model": "server.comment", "fields": {"post": 488, "lastedit_date": "2011-03-31 21:36:07", "parent": 275}}, {"pk": 189, "model": "server.comment", "fields": {"post": 489, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 190, "model": "server.comment", "fields": {"post": 490, "lastedit_date": "2011-03-31 21:36:07", "parent": 276}}, {"pk": 191, "model": "server.comment", "fields": {"post": 491, "lastedit_date": "2011-03-31 21:36:07", "parent": 271}}, {"pk": 192, "model": "server.comment", "fields": {"post": 492, "lastedit_date": "2011-03-31 21:36:07", "parent": 271}}, {"pk": 193, "model": "server.comment", "fields": {"post": 493, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 194, "model": "server.comment", "fields": {"post": 494, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 195, "model": "server.comment", "fields": {"post": 495, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 196, "model": "server.comment", "fields": {"post": 496, "lastedit_date": "2011-03-31 21:36:07", "parent": 285}}, {"pk": 197, "model": "server.comment", "fields": {"post": 497, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 198, "model": "server.comment", "fields": {"post": 498, "lastedit_date": "2011-03-31 21:36:07", "parent": 288}}, {"pk": 199, "model": "server.comment", "fields": {"post": 499, "lastedit_date": "2011-03-31 21:36:07", "parent": 288}}, {"pk": 200, "model": "server.comment", "fields": {"post": 500, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 201, "model": "server.comment", "fields": {"post": 501, "lastedit_date": "2011-03-31 21:36:07", "parent": 131}}, {"pk": 202, "model": "server.comment", "fields": {"post": 502, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 203, "model": "server.comment", "fields": {"post": 503, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 204, "model": "server.comment", "fields": {"post": 504, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 205, "model": "server.comment", "fields": {"post": 505, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 206, "model": "server.comment", "fields": {"post": 506, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 207, "model": "server.comment", "fields": {"post": 507, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 208, "model": "server.comment", "fields": {"post": 508, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 209, "model": "server.comment", "fields": {"post": 509, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 210, "model": "server.comment", "fields": {"post": 510, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 211, "model": "server.comment", "fields": {"post": 511, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 212, "model": "server.comment", "fields": {"post": 512, "lastedit_date": "2011-03-31 21:36:07", "parent": 283}}, {"pk": 213, "model": "server.comment", "fields": {"post": 513, "lastedit_date": "2011-03-31 21:36:07", "parent": 85}}, {"pk": 214, "model": "server.comment", "fields": {"post": 514, "lastedit_date": "2011-03-31 21:36:07", "parent": 272}}, {"pk": 215, "model": "server.comment", "fields": {"post": 515, "lastedit_date": "2011-03-31 21:36:07", "parent": 92}}, {"pk": 216, "model": "server.comment", "fields": {"post": 516, "lastedit_date": "2011-03-31 21:36:07", "parent": 256}}, {"pk": 217, "model": "server.comment", "fields": {"post": 517, "lastedit_date": "2011-03-31 21:36:07", "parent": 256}}, {"pk": 218, "model": "server.comment", "fields": {"post": 518, "lastedit_date": "2011-03-31 21:36:07", "parent": 256}}, {"pk": 219, "model": "server.comment", "fields": {"post": 519, "lastedit_date": "2011-03-31 21:36:07", "parent": 176}}, {"pk": 1, "model": "server.vote", "fields": {"post": 7, "type": 0, "author": 2}}, {"pk": 2, "model": "server.vote", "fields": {"post": 4, "type": 0, "author": 2}}, {"pk": 3, "model": "server.vote", "fields": {"post": 8, "type": 0, "author": 2}}, {"pk": 4, "model": "server.vote", "fields": {"post": 11, "type": 0, "author": 10}}, {"pk": 5, "model": "server.vote", "fields": {"post": 12, "type": 0, "author": 10}}, {"pk": 6, "model": "server.vote", "fields": {"post": 10, "type": 0, "author": 2}}, {"pk": 7, "model": "server.vote", "fields": {"post": 13, "type": 0, "author": 2}}, {"pk": 8, "model": "server.vote", "fields": {"post": 15, "type": 0, "author": 2}}, {"pk": 9, "model": "server.vote", "fields": {"post": 16, "type": 0, "author": 2}}, {"pk": 10, "model": "server.vote", "fields": {"post": 1, "type": 0, "author": 10}}, {"pk": 11, "model": "server.vote", "fields": {"post": 18, "type": 0, "author": 2}}, {"pk": 12, "model": "server.vote", "fields": {"post": 10, "type": 0, "author": 5}}, {"pk": 13, "model": "server.vote", "fields": {"post": 24, "type": 0, "author": 2}}, {"pk": 14, "model": "server.vote", "fields": {"post": 25, "type": 0, "author": 2}}, {"pk": 15, "model": "server.vote", "fields": {"post": 25, "type": 0, "author": 14}}, {"pk": 16, "model": "server.vote", "fields": {"post": 26, "type": 0, "author": 14}}, {"pk": 17, "model": "server.vote", "fields": {"post": 27, "type": 0, "author": 2}}, {"pk": 18, "model": "server.vote", "fields": {"post": 28, "type": 0, "author": 2}}, {"pk": 19, "model": "server.vote", "fields": {"post": 30, "type": 0, "author": 2}}, {"pk": 20, "model": "server.vote", "fields": {"post": 34, "type": 0, "author": 2}}, {"pk": 21, "model": "server.vote", "fields": {"post": 33, "type": 0, "author": 2}}, {"pk": 22, "model": "server.vote", "fields": {"post": 31, "type": 0, "author": 2}}, {"pk": 23, "model": "server.vote", "fields": {"post": 39, "type": 0, "author": 2}}, {"pk": 24, "model": "server.vote", "fields": {"post": 8, "type": 0, "author": 23}}, {"pk": 25, "model": "server.vote", "fields": {"post": 7, "type": 0, "author": 23}}, {"pk": 26, "model": "server.vote", "fields": {"post": 35, "type": 0, "author": 23}}, {"pk": 27, "model": "server.vote", "fields": {"post": 36, "type": 0, "author": 23}}, {"pk": 28, "model": "server.vote", "fields": {"post": 38, "type": 0, "author": 23}}, {"pk": 29, "model": "server.vote", "fields": {"post": 1, "type": 0, "author": 23}}, {"pk": 30, "model": "server.vote", "fields": {"post": 17, "type": 0, "author": 23}}, {"pk": 31, "model": "server.vote", "fields": {"post": 3, "type": 0, "author": 23}}, {"pk": 32, "model": "server.vote", "fields": {"post": 43, "type": 0, "author": 2}}, {"pk": 33, "model": "server.vote", "fields": {"post": 40, "type": 0, "author": 2}}, {"pk": 34, "model": "server.vote", "fields": {"post": 44, "type": 0, "author": 23}}, {"pk": 35, "model": "server.vote", "fields": {"post": 45, "type": 0, "author": 23}}, {"pk": 36, "model": "server.vote", "fields": {"post": 47, "type": 0, "author": 23}}, {"pk": 37, "model": "server.vote", "fields": {"post": 46, "type": 0, "author": 2}}, {"pk": 38, "model": "server.vote", "fields": {"post": 41, "type": 0, "author": 2}}, {"pk": 39, "model": "server.vote", "fields": {"post": 22, "type": 0, "author": 2}}, {"pk": 40, "model": "server.vote", "fields": {"post": 32, "type": 0, "author": 4}}, {"pk": 41, "model": "server.vote", "fields": {"post": 8, "type": 0, "author": 4}}, {"pk": 42, "model": "server.vote", "fields": {"post": 48, "type": 0, "author": 2}}, {"pk": 43, "model": "server.vote", "fields": {"post": 50, "type": 0, "author": 2}}, {"pk": 44, "model": "server.vote", "fields": {"post": 51, "type": 0, "author": 2}}, {"pk": 45, "model": "server.vote", "fields": {"post": 50, "type": 0, "author": 23}}, {"pk": 46, "model": "server.vote", "fields": {"post": 49, "type": 0, "author": 23}}, {"pk": 47, "model": "server.vote", "fields": {"post": 52, "type": 0, "author": 23}}, {"pk": 48, "model": "server.vote", "fields": {"post": 54, "type": 0, "author": 23}}, {"pk": 49, "model": "server.vote", "fields": {"post": 55, "type": 0, "author": 23}}, {"pk": 50, "model": "server.vote", "fields": {"post": 53, "type": 0, "author": 23}}, {"pk": 51, "model": "server.vote", "fields": {"post": 56, "type": 0, "author": 2}}, {"pk": 52, "model": "server.vote", "fields": {"post": 57, "type": 0, "author": 23}}, {"pk": 53, "model": "server.vote", "fields": {"post": 61, "type": 0, "author": 23}}, {"pk": 54, "model": "server.vote", "fields": {"post": 59, "type": 0, "author": 2}}, {"pk": 55, "model": "server.vote", "fields": {"post": 64, "type": 0, "author": 2}}, {"pk": 56, "model": "server.vote", "fields": {"post": 38, "type": 1, "author": 2}}, {"pk": 57, "model": "server.vote", "fields": {"post": 63, "type": 0, "author": 2}}, {"pk": 58, "model": "server.vote", "fields": {"post": 65, "type": 0, "author": 2}}, {"pk": 59, "model": "server.vote", "fields": {"post": 66, "type": 0, "author": 2}}, {"pk": 60, "model": "server.vote", "fields": {"post": 46, "type": 0, "author": 33}}, {"pk": 61, "model": "server.vote", "fields": {"post": 60, "type": 0, "author": 33}}, {"pk": 62, "model": "server.vote", "fields": {"post": 4, "type": 0, "author": 33}}, {"pk": 63, "model": "server.vote", "fields": {"post": 62, "type": 0, "author": 31}}, {"pk": 64, "model": "server.vote", "fields": {"post": 34, "type": 0, "author": 33}}, {"pk": 65, "model": "server.vote", "fields": {"post": 56, "type": 0, "author": 33}}, {"pk": 66, "model": "server.vote", "fields": {"post": 62, "type": 0, "author": 23}}, {"pk": 67, "model": "server.vote", "fields": {"post": 64, "type": 0, "author": 23}}, {"pk": 68, "model": "server.vote", "fields": {"post": 59, "type": 0, "author": 23}}, {"pk": 69, "model": "server.vote", "fields": {"post": 67, "type": 0, "author": 23}}, {"pk": 70, "model": "server.vote", "fields": {"post": 63, "type": 0, "author": 23}}, {"pk": 71, "model": "server.vote", "fields": {"post": 27, "type": 0, "author": 23}}, {"pk": 72, "model": "server.vote", "fields": {"post": 65, "type": 0, "author": 23}}, {"pk": 73, "model": "server.vote", "fields": {"post": 68, "type": 0, "author": 23}}, {"pk": 74, "model": "server.vote", "fields": {"post": 58, "type": 0, "author": 38}}, {"pk": 75, "model": "server.vote", "fields": {"post": 68, "type": 0, "author": 30}}, {"pk": 76, "model": "server.vote", "fields": {"post": 69, "type": 0, "author": 23}}, {"pk": 77, "model": "server.vote", "fields": {"post": 70, "type": 0, "author": 23}}, {"pk": 78, "model": "server.vote", "fields": {"post": 67, "type": 0, "author": 2}}, {"pk": 79, "model": "server.vote", "fields": {"post": 70, "type": 0, "author": 2}}, {"pk": 80, "model": "server.vote", "fields": {"post": 71, "type": 0, "author": 2}}, {"pk": 81, "model": "server.vote", "fields": {"post": 71, "type": 0, "author": 23}}, {"pk": 82, "model": "server.vote", "fields": {"post": 73, "type": 0, "author": 23}}, {"pk": 83, "model": "server.vote", "fields": {"post": 69, "type": 0, "author": 2}}, {"pk": 84, "model": "server.vote", "fields": {"post": 73, "type": 0, "author": 30}}, {"pk": 85, "model": "server.vote", "fields": {"post": 72, "type": 0, "author": 2}}, {"pk": 86, "model": "server.vote", "fields": {"post": 46, "type": 0, "author": 30}}, {"pk": 87, "model": "server.vote", "fields": {"post": 63, "type": 0, "author": 30}}, {"pk": 88, "model": "server.vote", "fields": {"post": 74, "type": 0, "author": 23}}, {"pk": 89, "model": "server.vote", "fields": {"post": 74, "type": 0, "author": 30}}, {"pk": 90, "model": "server.vote", "fields": {"post": 74, "type": 0, "author": 2}}, {"pk": 91, "model": "server.vote", "fields": {"post": 69, "type": 0, "author": 31}}, {"pk": 92, "model": "server.vote", "fields": {"post": 74, "type": 0, "author": 31}}, {"pk": 93, "model": "server.vote", "fields": {"post": 75, "type": 0, "author": 2}}, {"pk": 94, "model": "server.vote", "fields": {"post": 73, "type": 0, "author": 31}}, {"pk": 95, "model": "server.vote", "fields": {"post": 77, "type": 0, "author": 2}}, {"pk": 96, "model": "server.vote", "fields": {"post": 76, "type": 0, "author": 2}}, {"pk": 97, "model": "server.vote", "fields": {"post": 78, "type": 0, "author": 30}}, {"pk": 98, "model": "server.vote", "fields": {"post": 79, "type": 0, "author": 2}}, {"pk": 99, "model": "server.vote", "fields": {"post": 80, "type": 0, "author": 23}}, {"pk": 100, "model": "server.vote", "fields": {"post": 82, "type": 0, "author": 23}}, {"pk": 101, "model": "server.vote", "fields": {"post": 81, "type": 0, "author": 2}}, {"pk": 102, "model": "server.vote", "fields": {"post": 80, "type": 0, "author": 30}}, {"pk": 103, "model": "server.vote", "fields": {"post": 81, "type": 0, "author": 30}}, {"pk": 104, "model": "server.vote", "fields": {"post": 83, "type": 0, "author": 2}}, {"pk": 105, "model": "server.vote", "fields": {"post": 83, "type": 0, "author": 23}}, {"pk": 106, "model": "server.vote", "fields": {"post": 79, "type": 0, "author": 31}}, {"pk": 107, "model": "server.vote", "fields": {"post": 82, "type": 0, "author": 2}}, {"pk": 108, "model": "server.vote", "fields": {"post": 84, "type": 0, "author": 2}}, {"pk": 109, "model": "server.vote", "fields": {"post": 84, "type": 0, "author": 30}}, {"pk": 110, "model": "server.vote", "fields": {"post": 86, "type": 0, "author": 23}}, {"pk": 111, "model": "server.vote", "fields": {"post": 85, "type": 0, "author": 23}}, {"pk": 112, "model": "server.vote", "fields": {"post": 87, "type": 0, "author": 2}}, {"pk": 113, "model": "server.vote", "fields": {"post": 90, "type": 0, "author": 23}}, {"pk": 114, "model": "server.vote", "fields": {"post": 91, "type": 0, "author": 2}}, {"pk": 115, "model": "server.vote", "fields": {"post": 93, "type": 0, "author": 10}}, {"pk": 116, "model": "server.vote", "fields": {"post": 88, "type": 0, "author": 2}}, {"pk": 117, "model": "server.vote", "fields": {"post": 5, "type": 0, "author": 10}}, {"pk": 118, "model": "server.vote", "fields": {"post": 92, "type": 0, "author": 2}}, {"pk": 119, "model": "server.vote", "fields": {"post": 91, "type": 0, "author": 23}}, {"pk": 120, "model": "server.vote", "fields": {"post": 95, "type": 0, "author": 2}}, {"pk": 121, "model": "server.vote", "fields": {"post": 95, "type": 0, "author": 23}}, {"pk": 122, "model": "server.vote", "fields": {"post": 97, "type": 0, "author": 2}}, {"pk": 123, "model": "server.vote", "fields": {"post": 96, "type": 0, "author": 2}}, {"pk": 124, "model": "server.vote", "fields": {"post": 99, "type": 0, "author": 2}}, {"pk": 125, "model": "server.vote", "fields": {"post": 100, "type": 0, "author": 10}}, {"pk": 126, "model": "server.vote", "fields": {"post": 101, "type": 0, "author": 10}}, {"pk": 127, "model": "server.vote", "fields": {"post": 98, "type": 0, "author": 23}}, {"pk": 128, "model": "server.vote", "fields": {"post": 104, "type": 0, "author": 30}}, {"pk": 129, "model": "server.vote", "fields": {"post": 103, "type": 0, "author": 38}}, {"pk": 130, "model": "server.vote", "fields": {"post": 105, "type": 0, "author": 23}}, {"pk": 131, "model": "server.vote", "fields": {"post": 103, "type": 0, "author": 23}}, {"pk": 132, "model": "server.vote", "fields": {"post": 69, "type": 0, "author": 55}}, {"pk": 133, "model": "server.vote", "fields": {"post": 107, "type": 0, "author": 23}}, {"pk": 134, "model": "server.vote", "fields": {"post": 108, "type": 0, "author": 23}}, {"pk": 135, "model": "server.vote", "fields": {"post": 109, "type": 0, "author": 62}}, {"pk": 136, "model": "server.vote", "fields": {"post": 106, "type": 0, "author": 2}}, {"pk": 137, "model": "server.vote", "fields": {"post": 104, "type": 0, "author": 2}}, {"pk": 138, "model": "server.vote", "fields": {"post": 102, "type": 0, "author": 2}}, {"pk": 139, "model": "server.vote", "fields": {"post": 110, "type": 0, "author": 2}}, {"pk": 140, "model": "server.vote", "fields": {"post": 100, "type": 0, "author": 23}}, {"pk": 141, "model": "server.vote", "fields": {"post": 101, "type": 0, "author": 23}}, {"pk": 142, "model": "server.vote", "fields": {"post": 111, "type": 0, "author": 23}}, {"pk": 143, "model": "server.vote", "fields": {"post": 111, "type": 0, "author": 2}}, {"pk": 144, "model": "server.vote", "fields": {"post": 113, "type": 0, "author": 23}}, {"pk": 145, "model": "server.vote", "fields": {"post": 69, "type": 0, "author": 45}}, {"pk": 146, "model": "server.vote", "fields": {"post": 112, "type": 0, "author": 2}}, {"pk": 147, "model": "server.vote", "fields": {"post": 116, "type": 0, "author": 2}}, {"pk": 148, "model": "server.vote", "fields": {"post": 115, "type": 0, "author": 2}}, {"pk": 149, "model": "server.vote", "fields": {"post": 114, "type": 0, "author": 2}}, {"pk": 150, "model": "server.vote", "fields": {"post": 115, "type": 0, "author": 10}}, {"pk": 151, "model": "server.vote", "fields": {"post": 117, "type": 0, "author": 53}}, {"pk": 152, "model": "server.vote", "fields": {"post": 113, "type": 0, "author": 10}}, {"pk": 153, "model": "server.vote", "fields": {"post": 118, "type": 0, "author": 30}}, {"pk": 154, "model": "server.vote", "fields": {"post": 115, "type": 0, "author": 62}}, {"pk": 155, "model": "server.vote", "fields": {"post": 114, "type": 0, "author": 62}}, {"pk": 156, "model": "server.vote", "fields": {"post": 22, "type": 0, "author": 55}}, {"pk": 157, "model": "server.vote", "fields": {"post": 99, "type": 0, "author": 55}}, {"pk": 158, "model": "server.vote", "fields": {"post": 113, "type": 0, "author": 44}}, {"pk": 159, "model": "server.vote", "fields": {"post": 78, "type": 0, "author": 44}}, {"pk": 160, "model": "server.vote", "fields": {"post": 117, "type": 0, "author": 62}}, {"pk": 161, "model": "server.vote", "fields": {"post": 116, "type": 0, "author": 62}}, {"pk": 162, "model": "server.vote", "fields": {"post": 118, "type": 0, "author": 62}}, {"pk": 163, "model": "server.vote", "fields": {"post": 112, "type": 0, "author": 62}}, {"pk": 164, "model": "server.vote", "fields": {"post": 56, "type": 0, "author": 53}}, {"pk": 165, "model": "server.vote", "fields": {"post": 57, "type": 0, "author": 53}}, {"pk": 166, "model": "server.vote", "fields": {"post": 119, "type": 0, "author": 2}}, {"pk": 167, "model": "server.vote", "fields": {"post": 121, "type": 0, "author": 2}}, {"pk": 168, "model": "server.vote", "fields": {"post": 116, "type": 0, "author": 23}}, {"pk": 169, "model": "server.vote", "fields": {"post": 117, "type": 0, "author": 23}}, {"pk": 170, "model": "server.vote", "fields": {"post": 118, "type": 0, "author": 23}}, {"pk": 171, "model": "server.vote", "fields": {"post": 119, "type": 0, "author": 23}}, {"pk": 172, "model": "server.vote", "fields": {"post": 121, "type": 0, "author": 23}}, {"pk": 173, "model": "server.vote", "fields": {"post": 120, "type": 0, "author": 23}}, {"pk": 174, "model": "server.vote", "fields": {"post": 121, "type": 0, "author": 53}}, {"pk": 175, "model": "server.vote", "fields": {"post": 122, "type": 0, "author": 2}}, {"pk": 176, "model": "server.vote", "fields": {"post": 38, "type": 0, "author": 30}}, {"pk": 177, "model": "server.vote", "fields": {"post": 122, "type": 0, "author": 23}}, {"pk": 178, "model": "server.vote", "fields": {"post": 4, "type": 0, "author": 23}}, {"pk": 179, "model": "server.vote", "fields": {"post": 123, "type": 0, "author": 23}}, {"pk": 180, "model": "server.vote", "fields": {"post": 114, "type": 0, "author": 23}}, {"pk": 181, "model": "server.vote", "fields": {"post": 111, "type": 1, "author": 23}}, {"pk": 182, "model": "server.vote", "fields": {"post": 115, "type": 0, "author": 23}}, {"pk": 183, "model": "server.vote", "fields": {"post": 125, "type": 0, "author": 10}}, {"pk": 184, "model": "server.vote", "fields": {"post": 125, "type": 0, "author": 2}}, {"pk": 185, "model": "server.vote", "fields": {"post": 98, "type": 0, "author": 2}}, {"pk": 186, "model": "server.vote", "fields": {"post": 76, "type": 0, "author": 59}}, {"pk": 187, "model": "server.vote", "fields": {"post": 121, "type": 0, "author": 40}}, {"pk": 188, "model": "server.vote", "fields": {"post": 126, "type": 0, "author": 23}}, {"pk": 189, "model": "server.vote", "fields": {"post": 124, "type": 0, "author": 2}}, {"pk": 190, "model": "server.vote", "fields": {"post": 127, "type": 0, "author": 2}}, {"pk": 191, "model": "server.vote", "fields": {"post": 127, "type": 0, "author": 62}}, {"pk": 192, "model": "server.vote", "fields": {"post": 127, "type": 0, "author": 23}}, {"pk": 193, "model": "server.vote", "fields": {"post": 87, "type": 0, "author": 23}}, {"pk": 194, "model": "server.vote", "fields": {"post": 110, "type": 0, "author": 23}}, {"pk": 195, "model": "server.vote", "fields": {"post": 124, "type": 0, "author": 65}}, {"pk": 196, "model": "server.vote", "fields": {"post": 121, "type": 0, "author": 65}}, {"pk": 197, "model": "server.vote", "fields": {"post": 128, "type": 0, "author": 65}}, {"pk": 198, "model": "server.vote", "fields": {"post": 127, "type": 0, "author": 30}}, {"pk": 199, "model": "server.vote", "fields": {"post": 112, "type": 0, "author": 66}}, {"pk": 200, "model": "server.vote", "fields": {"post": 129, "type": 0, "author": 38}}, {"pk": 201, "model": "server.vote", "fields": {"post": 128, "type": 0, "author": 23}}, {"pk": 202, "model": "server.vote", "fields": {"post": 129, "type": 0, "author": 23}}, {"pk": 203, "model": "server.vote", "fields": {"post": 117, "type": 0, "author": 67}}, {"pk": 204, "model": "server.vote", "fields": {"post": 94, "type": 0, "author": 68}}, {"pk": 205, "model": "server.vote", "fields": {"post": 96, "type": 0, "author": 23}}, {"pk": 206, "model": "server.vote", "fields": {"post": 112, "type": 0, "author": 68}}, {"pk": 207, "model": "server.vote", "fields": {"post": 116, "type": 0, "author": 68}}, {"pk": 208, "model": "server.vote", "fields": {"post": 118, "type": 0, "author": 68}}, {"pk": 209, "model": "server.vote", "fields": {"post": 37, "type": 0, "author": 69}}, {"pk": 210, "model": "server.vote", "fields": {"post": 129, "type": 0, "author": 55}}, {"pk": 211, "model": "server.vote", "fields": {"post": 66, "type": 0, "author": 68}}, {"pk": 212, "model": "server.vote", "fields": {"post": 30, "type": 0, "author": 68}}, {"pk": 213, "model": "server.vote", "fields": {"post": 33, "type": 0, "author": 68}}, {"pk": 214, "model": "server.vote", "fields": {"post": 130, "type": 0, "author": 23}}, {"pk": 215, "model": "server.vote", "fields": {"post": 124, "type": 0, "author": 68}}, {"pk": 216, "model": "server.vote", "fields": {"post": 34, "type": 0, "author": 68}}, {"pk": 217, "model": "server.vote", "fields": {"post": 81, "type": 0, "author": 68}}, {"pk": 218, "model": "server.vote", "fields": {"post": 129, "type": 0, "author": 7}}, {"pk": 219, "model": "server.vote", "fields": {"post": 131, "type": 0, "author": 2}}, {"pk": 220, "model": "server.vote", "fields": {"post": 132, "type": 0, "author": 23}}, {"pk": 221, "model": "server.vote", "fields": {"post": 131, "type": 0, "author": 23}}, {"pk": 222, "model": "server.vote", "fields": {"post": 133, "type": 0, "author": 23}}, {"pk": 223, "model": "server.vote", "fields": {"post": 133, "type": 0, "author": 7}}, {"pk": 224, "model": "server.vote", "fields": {"post": 132, "type": 0, "author": 30}}, {"pk": 225, "model": "server.vote", "fields": {"post": 135, "type": 0, "author": 10}}, {"pk": 226, "model": "server.vote", "fields": {"post": 136, "type": 0, "author": 10}}, {"pk": 227, "model": "server.vote", "fields": {"post": 134, "type": 0, "author": 10}}, {"pk": 228, "model": "server.vote", "fields": {"post": 135, "type": 0, "author": 56}}, {"pk": 229, "model": "server.vote", "fields": {"post": 140, "type": 0, "author": 23}}, {"pk": 230, "model": "server.vote", "fields": {"post": 136, "type": 0, "author": 23}}, {"pk": 231, "model": "server.vote", "fields": {"post": 134, "type": 0, "author": 23}}, {"pk": 232, "model": "server.vote", "fields": {"post": 138, "type": 0, "author": 23}}, {"pk": 233, "model": "server.vote", "fields": {"post": 141, "type": 0, "author": 2}}, {"pk": 234, "model": "server.vote", "fields": {"post": 137, "type": 0, "author": 2}}, {"pk": 235, "model": "server.vote", "fields": {"post": 144, "type": 0, "author": 72}}, {"pk": 236, "model": "server.vote", "fields": {"post": 132, "type": 0, "author": 38}}, {"pk": 237, "model": "server.vote", "fields": {"post": 142, "type": 0, "author": 2}}, {"pk": 238, "model": "server.vote", "fields": {"post": 146, "type": 0, "author": 2}}, {"pk": 239, "model": "server.vote", "fields": {"post": 76, "type": 0, "author": 71}}, {"pk": 240, "model": "server.vote", "fields": {"post": 147, "type": 0, "author": 2}}, {"pk": 241, "model": "server.vote", "fields": {"post": 143, "type": 0, "author": 23}}, {"pk": 242, "model": "server.vote", "fields": {"post": 147, "type": 0, "author": 30}}, {"pk": 243, "model": "server.vote", "fields": {"post": 148, "type": 0, "author": 23}}, {"pk": 244, "model": "server.vote", "fields": {"post": 149, "type": 0, "author": 30}}, {"pk": 245, "model": "server.vote", "fields": {"post": 139, "type": 0, "author": 2}}, {"pk": 246, "model": "server.vote", "fields": {"post": 148, "type": 0, "author": 30}}, {"pk": 247, "model": "server.vote", "fields": {"post": 122, "type": 0, "author": 73}}, {"pk": 248, "model": "server.vote", "fields": {"post": 138, "type": 0, "author": 2}}, {"pk": 249, "model": "server.vote", "fields": {"post": 151, "type": 0, "author": 2}}, {"pk": 250, "model": "server.vote", "fields": {"post": 146, "type": 0, "author": 23}}, {"pk": 251, "model": "server.vote", "fields": {"post": 145, "type": 0, "author": 67}}, {"pk": 252, "model": "server.vote", "fields": {"post": 59, "type": 0, "author": 74}}, {"pk": 253, "model": "server.vote", "fields": {"post": 106, "type": 0, "author": 74}}, {"pk": 254, "model": "server.vote", "fields": {"post": 154, "type": 0, "author": 2}}, {"pk": 255, "model": "server.vote", "fields": {"post": 124, "type": 0, "author": 59}}, {"pk": 256, "model": "server.vote", "fields": {"post": 145, "type": 0, "author": 59}}, {"pk": 257, "model": "server.vote", "fields": {"post": 154, "type": 0, "author": 23}}, {"pk": 258, "model": "server.vote", "fields": {"post": 153, "type": 0, "author": 23}}, {"pk": 259, "model": "server.vote", "fields": {"post": 152, "type": 0, "author": 23}}, {"pk": 260, "model": "server.vote", "fields": {"post": 124, "type": 0, "author": 77}}, {"pk": 261, "model": "server.vote", "fields": {"post": 94, "type": 0, "author": 73}}, {"pk": 262, "model": "server.vote", "fields": {"post": 135, "type": 0, "author": 78}}, {"pk": 263, "model": "server.vote", "fields": {"post": 41, "type": 0, "author": 76}}, {"pk": 264, "model": "server.vote", "fields": {"post": 132, "type": 0, "author": 55}}, {"pk": 265, "model": "server.vote", "fields": {"post": 135, "type": 0, "author": 55}}, {"pk": 266, "model": "server.vote", "fields": {"post": 137, "type": 0, "author": 55}}, {"pk": 267, "model": "server.vote", "fields": {"post": 139, "type": 1, "author": 55}}, {"pk": 268, "model": "server.vote", "fields": {"post": 146, "type": 1, "author": 55}}, {"pk": 269, "model": "server.vote", "fields": {"post": 156, "type": 0, "author": 2}}, {"pk": 270, "model": "server.vote", "fields": {"post": 43, "type": 0, "author": 82}}, {"pk": 271, "model": "server.vote", "fields": {"post": 43, "type": 0, "author": 79}}, {"pk": 272, "model": "server.vote", "fields": {"post": 86, "type": 0, "author": 30}}, {"pk": 273, "model": "server.vote", "fields": {"post": 162, "type": 0, "author": 30}}, {"pk": 274, "model": "server.vote", "fields": {"post": 133, "type": 0, "author": 26}}, {"pk": 275, "model": "server.vote", "fields": {"post": 161, "type": 0, "author": 2}}, {"pk": 276, "model": "server.vote", "fields": {"post": 160, "type": 0, "author": 2}}, {"pk": 277, "model": "server.vote", "fields": {"post": 164, "type": 0, "author": 7}}, {"pk": 278, "model": "server.vote", "fields": {"post": 150, "type": 0, "author": 7}}, {"pk": 279, "model": "server.vote", "fields": {"post": 133, "type": 0, "author": 78}}, {"pk": 280, "model": "server.vote", "fields": {"post": 160, "type": 0, "author": 23}}, {"pk": 281, "model": "server.vote", "fields": {"post": 158, "type": 0, "author": 23}}, {"pk": 282, "model": "server.vote", "fields": {"post": 157, "type": 0, "author": 23}}, {"pk": 283, "model": "server.vote", "fields": {"post": 161, "type": 0, "author": 23}}, {"pk": 284, "model": "server.vote", "fields": {"post": 163, "type": 0, "author": 23}}, {"pk": 285, "model": "server.vote", "fields": {"post": 162, "type": 0, "author": 23}}, {"pk": 286, "model": "server.vote", "fields": {"post": 139, "type": 1, "author": 2}}, {"pk": 287, "model": "server.vote", "fields": {"post": 139, "type": 0, "author": 23}}, {"pk": 288, "model": "server.vote", "fields": {"post": 138, "type": 0, "author": 68}}, {"pk": 289, "model": "server.vote", "fields": {"post": 80, "type": 0, "author": 68}}, {"pk": 290, "model": "server.vote", "fields": {"post": 112, "type": 0, "author": 14}}, {"pk": 291, "model": "server.vote", "fields": {"post": 167, "type": 0, "author": 2}}, {"pk": 292, "model": "server.vote", "fields": {"post": 159, "type": 0, "author": 2}}, {"pk": 293, "model": "server.vote", "fields": {"post": 149, "type": 1, "author": 2}}, {"pk": 294, "model": "server.vote", "fields": {"post": 166, "type": 0, "author": 71}}, {"pk": 295, "model": "server.vote", "fields": {"post": 168, "type": 0, "author": 71}}, {"pk": 296, "model": "server.vote", "fields": {"post": 170, "type": 0, "author": 71}}, {"pk": 297, "model": "server.vote", "fields": {"post": 121, "type": 0, "author": 75}}, {"pk": 298, "model": "server.vote", "fields": {"post": 157, "type": 0, "author": 75}}, {"pk": 299, "model": "server.vote", "fields": {"post": 170, "type": 0, "author": 23}}, {"pk": 300, "model": "server.vote", "fields": {"post": 169, "type": 0, "author": 23}}, {"pk": 301, "model": "server.vote", "fields": {"post": 149, "type": 0, "author": 23}}, {"pk": 302, "model": "server.vote", "fields": {"post": 168, "type": 0, "author": 68}}, {"pk": 303, "model": "server.vote", "fields": {"post": 174, "type": 0, "author": 2}}, {"pk": 304, "model": "server.vote", "fields": {"post": 170, "type": 0, "author": 2}}, {"pk": 305, "model": "server.vote", "fields": {"post": 19, "type": 0, "author": 59}}, {"pk": 306, "model": "server.vote", "fields": {"post": 133, "type": 0, "author": 65}}, {"pk": 307, "model": "server.vote", "fields": {"post": 177, "type": 0, "author": 23}}, {"pk": 308, "model": "server.vote", "fields": {"post": 151, "type": 0, "author": 10}}, {"pk": 309, "model": "server.vote", "fields": {"post": 178, "type": 0, "author": 2}}, {"pk": 310, "model": "server.vote", "fields": {"post": 175, "type": 0, "author": 59}}, {"pk": 311, "model": "server.vote", "fields": {"post": 67, "type": 0, "author": 59}}, {"pk": 312, "model": "server.vote", "fields": {"post": 179, "type": 0, "author": 23}}, {"pk": 313, "model": "server.vote", "fields": {"post": 180, "type": 0, "author": 23}}, {"pk": 314, "model": "server.vote", "fields": {"post": 144, "type": 0, "author": 59}}, {"pk": 315, "model": "server.vote", "fields": {"post": 175, "type": 0, "author": 2}}, {"pk": 316, "model": "server.vote", "fields": {"post": 181, "type": 0, "author": 10}}, {"pk": 317, "model": "server.vote", "fields": {"post": 175, "type": 0, "author": 10}}, {"pk": 318, "model": "server.vote", "fields": {"post": 177, "type": 0, "author": 2}}, {"pk": 319, "model": "server.vote", "fields": {"post": 182, "type": 0, "author": 2}}, {"pk": 320, "model": "server.vote", "fields": {"post": 182, "type": 0, "author": 23}}, {"pk": 321, "model": "server.vote", "fields": {"post": 181, "type": 0, "author": 59}}, {"pk": 322, "model": "server.vote", "fields": {"post": 182, "type": 0, "author": 38}}, {"pk": 323, "model": "server.vote", "fields": {"post": 149, "type": 0, "author": 68}}, {"pk": 324, "model": "server.vote", "fields": {"post": 183, "type": 0, "author": 23}}, {"pk": 325, "model": "server.vote", "fields": {"post": 174, "type": 0, "author": 56}}, {"pk": 326, "model": "server.vote", "fields": {"post": 184, "type": 0, "author": 2}}, {"pk": 327, "model": "server.vote", "fields": {"post": 163, "type": 0, "author": 79}}, {"pk": 328, "model": "server.vote", "fields": {"post": 185, "type": 0, "author": 2}}, {"pk": 329, "model": "server.vote", "fields": {"post": 188, "type": 0, "author": 62}}, {"pk": 330, "model": "server.vote", "fields": {"post": 187, "type": 0, "author": 23}}, {"pk": 331, "model": "server.vote", "fields": {"post": 186, "type": 0, "author": 23}}, {"pk": 332, "model": "server.vote", "fields": {"post": 182, "type": 0, "author": 75}}, {"pk": 333, "model": "server.vote", "fields": {"post": 185, "type": 0, "author": 30}}, {"pk": 334, "model": "server.vote", "fields": {"post": 190, "type": 0, "author": 2}}, {"pk": 335, "model": "server.vote", "fields": {"post": 181, "type": 0, "author": 73}}, {"pk": 336, "model": "server.vote", "fields": {"post": 79, "type": 0, "author": 73}}, {"pk": 337, "model": "server.vote", "fields": {"post": 192, "type": 0, "author": 2}}, {"pk": 338, "model": "server.vote", "fields": {"post": 175, "type": 0, "author": 72}}, {"pk": 339, "model": "server.vote", "fields": {"post": 169, "type": 0, "author": 55}}, {"pk": 340, "model": "server.vote", "fields": {"post": 164, "type": 0, "author": 55}}, {"pk": 341, "model": "server.vote", "fields": {"post": 173, "type": 0, "author": 2}}, {"pk": 342, "model": "server.vote", "fields": {"post": 196, "type": 0, "author": 2}}, {"pk": 343, "model": "server.vote", "fields": {"post": 195, "type": 0, "author": 2}}, {"pk": 344, "model": "server.vote", "fields": {"post": 194, "type": 0, "author": 2}}, {"pk": 345, "model": "server.vote", "fields": {"post": 172, "type": 0, "author": 87}}, {"pk": 346, "model": "server.vote", "fields": {"post": 174, "type": 0, "author": 87}}, {"pk": 347, "model": "server.vote", "fields": {"post": 189, "type": 0, "author": 87}}, {"pk": 348, "model": "server.vote", "fields": {"post": 83, "type": 0, "author": 79}}, {"pk": 349, "model": "server.vote", "fields": {"post": 200, "type": 0, "author": 2}}, {"pk": 350, "model": "server.vote", "fields": {"post": 199, "type": 0, "author": 2}}, {"pk": 351, "model": "server.vote", "fields": {"post": 181, "type": 0, "author": 14}}, {"pk": 352, "model": "server.vote", "fields": {"post": 172, "type": 0, "author": 72}}, {"pk": 353, "model": "server.vote", "fields": {"post": 81, "type": 0, "author": 72}}, {"pk": 354, "model": "server.vote", "fields": {"post": 134, "type": 0, "author": 72}}, {"pk": 355, "model": "server.vote", "fields": {"post": 105, "type": 0, "author": 72}}, {"pk": 356, "model": "server.vote", "fields": {"post": 202, "type": 0, "author": 71}}, {"pk": 357, "model": "server.vote", "fields": {"post": 189, "type": 0, "author": 68}}, {"pk": 358, "model": "server.vote", "fields": {"post": 197, "type": 0, "author": 2}}, {"pk": 359, "model": "server.vote", "fields": {"post": 203, "type": 0, "author": 2}}, {"pk": 360, "model": "server.vote", "fields": {"post": 205, "type": 0, "author": 68}}, {"pk": 361, "model": "server.vote", "fields": {"post": 182, "type": 0, "author": 68}}, {"pk": 362, "model": "server.vote", "fields": {"post": 192, "type": 0, "author": 68}}, {"pk": 363, "model": "server.vote", "fields": {"post": 195, "type": 0, "author": 68}}, {"pk": 364, "model": "server.vote", "fields": {"post": 164, "type": 0, "author": 91}}, {"pk": 365, "model": "server.vote", "fields": {"post": 169, "type": 0, "author": 91}}, {"pk": 366, "model": "server.vote", "fields": {"post": 150, "type": 0, "author": 91}}, {"pk": 367, "model": "server.vote", "fields": {"post": 135, "type": 0, "author": 91}}, {"pk": 368, "model": "server.vote", "fields": {"post": 201, "type": 0, "author": 36}}, {"pk": 369, "model": "server.vote", "fields": {"post": 197, "type": 0, "author": 62}}, {"pk": 370, "model": "server.vote", "fields": {"post": 208, "type": 0, "author": 2}}, {"pk": 371, "model": "server.vote", "fields": {"post": 207, "type": 0, "author": 2}}, {"pk": 372, "model": "server.vote", "fields": {"post": 133, "type": 0, "author": 55}}, {"pk": 373, "model": "server.vote", "fields": {"post": 212, "type": 0, "author": 2}}, {"pk": 374, "model": "server.vote", "fields": {"post": 211, "type": 0, "author": 2}}, {"pk": 375, "model": "server.vote", "fields": {"post": 210, "type": 0, "author": 2}}, {"pk": 376, "model": "server.vote", "fields": {"post": 155, "type": 0, "author": 2}}, {"pk": 377, "model": "server.vote", "fields": {"post": 213, "type": 0, "author": 30}}, {"pk": 378, "model": "server.vote", "fields": {"post": 214, "type": 0, "author": 10}}, {"pk": 379, "model": "server.vote", "fields": {"post": 193, "type": 0, "author": 10}}, {"pk": 380, "model": "server.vote", "fields": {"post": 216, "type": 0, "author": 10}}, {"pk": 381, "model": "server.vote", "fields": {"post": 116, "type": 0, "author": 72}}, {"pk": 382, "model": "server.vote", "fields": {"post": 69, "type": 0, "author": 72}}, {"pk": 383, "model": "server.vote", "fields": {"post": 217, "type": 0, "author": 2}}, {"pk": 384, "model": "server.vote", "fields": {"post": 204, "type": 0, "author": 4}}, {"pk": 385, "model": "server.vote", "fields": {"post": 218, "type": 0, "author": 23}}, {"pk": 386, "model": "server.vote", "fields": {"post": 209, "type": 0, "author": 23}}, {"pk": 387, "model": "server.vote", "fields": {"post": 79, "type": 0, "author": 90}}, {"pk": 388, "model": "server.vote", "fields": {"post": 31, "type": 0, "author": 72}}, {"pk": 389, "model": "server.vote", "fields": {"post": 208, "type": 0, "author": 72}}, {"pk": 390, "model": "server.vote", "fields": {"post": 219, "type": 0, "author": 2}}, {"pk": 391, "model": "server.vote", "fields": {"post": 219, "type": 0, "author": 91}}, {"pk": 392, "model": "server.vote", "fields": {"post": 220, "type": 0, "author": 2}}, {"pk": 393, "model": "server.vote", "fields": {"post": 220, "type": 0, "author": 10}}, {"pk": 394, "model": "server.vote", "fields": {"post": 218, "type": 0, "author": 36}}, {"pk": 395, "model": "server.vote", "fields": {"post": 220, "type": 0, "author": 23}}, {"pk": 396, "model": "server.vote", "fields": {"post": 183, "type": 0, "author": 68}}, {"pk": 397, "model": "server.vote", "fields": {"post": 165, "type": 0, "author": 73}}, {"pk": 398, "model": "server.vote", "fields": {"post": 216, "type": 0, "author": 30}}, {"pk": 399, "model": "server.vote", "fields": {"post": 140, "type": 0, "author": 72}}, {"pk": 400, "model": "server.vote", "fields": {"post": 221, "type": 0, "author": 55}}, {"pk": 401, "model": "server.vote", "fields": {"post": 222, "type": 0, "author": 2}}, {"pk": 402, "model": "server.vote", "fields": {"post": 223, "type": 0, "author": 2}}, {"pk": 403, "model": "server.vote", "fields": {"post": 225, "type": 0, "author": 2}}, {"pk": 404, "model": "server.vote", "fields": {"post": 224, "type": 0, "author": 2}}, {"pk": 405, "model": "server.vote", "fields": {"post": 222, "type": 0, "author": 55}}, {"pk": 406, "model": "server.vote", "fields": {"post": 204, "type": 0, "author": 26}}, {"pk": 407, "model": "server.vote", "fields": {"post": 130, "type": 0, "author": 55}}, {"pk": 408, "model": "server.vote", "fields": {"post": 226, "type": 0, "author": 90}}, {"pk": 409, "model": "server.vote", "fields": {"post": 116, "type": 0, "author": 51}}, {"pk": 410, "model": "server.vote", "fields": {"post": 219, "type": 0, "author": 14}}, {"pk": 411, "model": "server.vote", "fields": {"post": 109, "type": 0, "author": 14}}, {"pk": 412, "model": "server.vote", "fields": {"post": 37, "type": 0, "author": 108}}, {"pk": 413, "model": "server.vote", "fields": {"post": 202, "type": 0, "author": 108}}, {"pk": 414, "model": "server.vote", "fields": {"post": 225, "type": 0, "author": 23}}, {"pk": 415, "model": "server.vote", "fields": {"post": 223, "type": 0, "author": 23}}, {"pk": 416, "model": "server.vote", "fields": {"post": 133, "type": 0, "author": 110}}, {"pk": 417, "model": "server.vote", "fields": {"post": 203, "type": 0, "author": 110}}, {"pk": 418, "model": "server.vote", "fields": {"post": 228, "type": 0, "author": 2}}, {"pk": 419, "model": "server.vote", "fields": {"post": 151, "type": 0, "author": 23}}, {"pk": 420, "model": "server.vote", "fields": {"post": 231, "type": 0, "author": 36}}, {"pk": 421, "model": "server.vote", "fields": {"post": 171, "type": 0, "author": 59}}, {"pk": 422, "model": "server.vote", "fields": {"post": 43, "type": 0, "author": 26}}, {"pk": 423, "model": "server.vote", "fields": {"post": 232, "type": 0, "author": 2}}, {"pk": 424, "model": "server.vote", "fields": {"post": 232, "type": 0, "author": 26}}, {"pk": 425, "model": "server.vote", "fields": {"post": 119, "type": 0, "author": 113}}, {"pk": 426, "model": "server.vote", "fields": {"post": 124, "type": 0, "author": 113}}, {"pk": 427, "model": "server.vote", "fields": {"post": 137, "type": 0, "author": 113}}, {"pk": 428, "model": "server.vote", "fields": {"post": 143, "type": 0, "author": 113}}, {"pk": 429, "model": "server.vote", "fields": {"post": 221, "type": 0, "author": 113}}, {"pk": 430, "model": "server.vote", "fields": {"post": 223, "type": 0, "author": 113}}, {"pk": 431, "model": "server.vote", "fields": {"post": 69, "type": 0, "author": 113}}, {"pk": 432, "model": "server.vote", "fields": {"post": 127, "type": 0, "author": 113}}, {"pk": 433, "model": "server.vote", "fields": {"post": 73, "type": 0, "author": 113}}, {"pk": 434, "model": "server.vote", "fields": {"post": 71, "type": 0, "author": 113}}, {"pk": 435, "model": "server.vote", "fields": {"post": 31, "type": 0, "author": 113}}, {"pk": 436, "model": "server.vote", "fields": {"post": 162, "type": 0, "author": 62}}, {"pk": 437, "model": "server.vote", "fields": {"post": 130, "type": 0, "author": 113}}, {"pk": 438, "model": "server.vote", "fields": {"post": 197, "type": 0, "author": 113}}, {"pk": 439, "model": "server.vote", "fields": {"post": 208, "type": 0, "author": 113}}, {"pk": 440, "model": "server.vote", "fields": {"post": 221, "type": 0, "author": 2}}, {"pk": 441, "model": "server.vote", "fields": {"post": 232, "type": 0, "author": 59}}, {"pk": 442, "model": "server.vote", "fields": {"post": 232, "type": 0, "author": 89}}, {"pk": 443, "model": "server.vote", "fields": {"post": 233, "type": 0, "author": 68}}, {"pk": 444, "model": "server.vote", "fields": {"post": 236, "type": 0, "author": 68}}, {"pk": 445, "model": "server.vote", "fields": {"post": 235, "type": 0, "author": 62}}, {"pk": 446, "model": "server.vote", "fields": {"post": 235, "type": 0, "author": 72}}, {"pk": 447, "model": "server.vote", "fields": {"post": 237, "type": 0, "author": 72}}, {"pk": 448, "model": "server.vote", "fields": {"post": 235, "type": 0, "author": 2}}, {"pk": 449, "model": "server.vote", "fields": {"post": 234, "type": 0, "author": 51}}, {"pk": 450, "model": "server.vote", "fields": {"post": 232, "type": 0, "author": 117}}, {"pk": 451, "model": "server.vote", "fields": {"post": 234, "type": 0, "author": 117}}, {"pk": 452, "model": "server.vote", "fields": {"post": 236, "type": 0, "author": 117}}, {"pk": 453, "model": "server.vote", "fields": {"post": 237, "type": 0, "author": 117}}, {"pk": 454, "model": "server.vote", "fields": {"post": 84, "type": 0, "author": 117}}, {"pk": 455, "model": "server.vote", "fields": {"post": 239, "type": 0, "author": 30}}, {"pk": 456, "model": "server.vote", "fields": {"post": 239, "type": 0, "author": 23}}, {"pk": 457, "model": "server.vote", "fields": {"post": 31, "type": 0, "author": 119}}, {"pk": 458, "model": "server.vote", "fields": {"post": 208, "type": 0, "author": 119}}, {"pk": 459, "model": "server.vote", "fields": {"post": 43, "type": 0, "author": 30}}, {"pk": 460, "model": "server.vote", "fields": {"post": 240, "type": 0, "author": 2}}, {"pk": 461, "model": "server.vote", "fields": {"post": 242, "type": 0, "author": 91}}, {"pk": 462, "model": "server.vote", "fields": {"post": 226, "type": 0, "author": 91}}, {"pk": 463, "model": "server.vote", "fields": {"post": 204, "type": 0, "author": 91}}, {"pk": 464, "model": "server.vote", "fields": {"post": 238, "type": 0, "author": 2}}, {"pk": 465, "model": "server.vote", "fields": {"post": 53, "type": 0, "author": 113}}, {"pk": 466, "model": "server.vote", "fields": {"post": 207, "type": 0, "author": 113}}, {"pk": 467, "model": "server.vote", "fields": {"post": 55, "type": 0, "author": 113}}, {"pk": 468, "model": "server.vote", "fields": {"post": 244, "type": 0, "author": 23}}, {"pk": 469, "model": "server.vote", "fields": {"post": 241, "type": 0, "author": 23}}, {"pk": 470, "model": "server.vote", "fields": {"post": 221, "type": 0, "author": 56}}, {"pk": 471, "model": "server.vote", "fields": {"post": 240, "type": 0, "author": 56}}, {"pk": 472, "model": "server.vote", "fields": {"post": 224, "type": 0, "author": 56}}, {"pk": 473, "model": "server.vote", "fields": {"post": 246, "type": 0, "author": 117}}, {"pk": 474, "model": "server.vote", "fields": {"post": 242, "type": 0, "author": 26}}, {"pk": 475, "model": "server.vote", "fields": {"post": 234, "type": 0, "author": 26}}, {"pk": 476, "model": "server.vote", "fields": {"post": 248, "type": 0, "author": 55}}, {"pk": 477, "model": "server.vote", "fields": {"post": 239, "type": 0, "author": 90}}, {"pk": 478, "model": "server.vote", "fields": {"post": 245, "type": 0, "author": 2}}, {"pk": 479, "model": "server.vote", "fields": {"post": 229, "type": 0, "author": 110}}, {"pk": 480, "model": "server.vote", "fields": {"post": 249, "type": 0, "author": 110}}, {"pk": 481, "model": "server.vote", "fields": {"post": 248, "type": 0, "author": 91}}, {"pk": 482, "model": "server.vote", "fields": {"post": 250, "type": 0, "author": 23}}, {"pk": 483, "model": "server.vote", "fields": {"post": 243, "type": 0, "author": 26}}, {"pk": 484, "model": "server.vote", "fields": {"post": 246, "type": 0, "author": 56}}, {"pk": 485, "model": "server.vote", "fields": {"post": 152, "type": 0, "author": 91}}, {"pk": 486, "model": "server.vote", "fields": {"post": 244, "type": 0, "author": 91}}, {"pk": 487, "model": "server.vote", "fields": {"post": 252, "type": 0, "author": 91}}, {"pk": 488, "model": "server.vote", "fields": {"post": 252, "type": 0, "author": 62}}, {"pk": 489, "model": "server.vote", "fields": {"post": 252, "type": 0, "author": 71}}, {"pk": 490, "model": "server.vote", "fields": {"post": 253, "type": 0, "author": 2}}, {"pk": 491, "model": "server.vote", "fields": {"post": 247, "type": 0, "author": 2}}, {"pk": 492, "model": "server.vote", "fields": {"post": 246, "type": 0, "author": 23}}, {"pk": 493, "model": "server.vote", "fields": {"post": 253, "type": 0, "author": 23}}, {"pk": 494, "model": "server.vote", "fields": {"post": 251, "type": 0, "author": 2}}, {"pk": 495, "model": "server.vote", "fields": {"post": 252, "type": 0, "author": 30}}, {"pk": 496, "model": "server.vote", "fields": {"post": 232, "type": 0, "author": 24}}, {"pk": 497, "model": "server.vote", "fields": {"post": 251, "type": 0, "author": 55}}, {"pk": 498, "model": "server.vote", "fields": {"post": 128, "type": 0, "author": 24}}, {"pk": 499, "model": "server.vote", "fields": {"post": 253, "type": 0, "author": 14}}, {"pk": 500, "model": "server.vote", "fields": {"post": 245, "type": 0, "author": 14}}, {"pk": 501, "model": "server.vote", "fields": {"post": 43, "type": 0, "author": 14}}, {"pk": 502, "model": "server.vote", "fields": {"post": 246, "type": 0, "author": 122}}, {"pk": 503, "model": "server.vote", "fields": {"post": 259, "type": 0, "author": 91}}, {"pk": 504, "model": "server.vote", "fields": {"post": 258, "type": 0, "author": 2}}, {"pk": 505, "model": "server.vote", "fields": {"post": 255, "type": 0, "author": 2}}, {"pk": 506, "model": "server.vote", "fields": {"post": 256, "type": 0, "author": 2}}, {"pk": 507, "model": "server.vote", "fields": {"post": 215, "type": 0, "author": 2}}, {"pk": 508, "model": "server.vote", "fields": {"post": 263, "type": 0, "author": 119}}, {"pk": 509, "model": "server.vote", "fields": {"post": 264, "type": 0, "author": 26}}, {"pk": 510, "model": "server.vote", "fields": {"post": 125, "type": 0, "author": 91}}, {"pk": 511, "model": "server.vote", "fields": {"post": 263, "type": 0, "author": 23}}, {"pk": 512, "model": "server.vote", "fields": {"post": 256, "type": 0, "author": 23}}, {"pk": 513, "model": "server.vote", "fields": {"post": 266, "type": 0, "author": 23}}, {"pk": 514, "model": "server.vote", "fields": {"post": 258, "type": 0, "author": 38}}, {"pk": 515, "model": "server.vote", "fields": {"post": 258, "type": 0, "author": 30}}, {"pk": 516, "model": "server.vote", "fields": {"post": 266, "type": 0, "author": 30}}, {"pk": 517, "model": "server.vote", "fields": {"post": 22, "type": 0, "author": 23}}, {"pk": 518, "model": "server.vote", "fields": {"post": 266, "type": 0, "author": 68}}, {"pk": 519, "model": "server.vote", "fields": {"post": 265, "type": 0, "author": 2}}, {"pk": 520, "model": "server.vote", "fields": {"post": 261, "type": 0, "author": 73}}, {"pk": 521, "model": "server.vote", "fields": {"post": 267, "type": 0, "author": 23}}, {"pk": 522, "model": "server.vote", "fields": {"post": 246, "type": 0, "author": 38}}, {"pk": 523, "model": "server.vote", "fields": {"post": 265, "type": 0, "author": 113}}, {"pk": 524, "model": "server.vote", "fields": {"post": 266, "type": 0, "author": 36}}, {"pk": 525, "model": "server.vote", "fields": {"post": 266, "type": 0, "author": 91}}, {"pk": 526, "model": "server.vote", "fields": {"post": 59, "type": 0, "author": 113}}, {"pk": 527, "model": "server.vote", "fields": {"post": 267, "type": 0, "author": 2}}, {"pk": 528, "model": "server.vote", "fields": {"post": 250, "type": 0, "author": 2}}, {"pk": 529, "model": "server.vote", "fields": {"post": 250, "type": 1, "author": 2}}, {"pk": 530, "model": "server.vote", "fields": {"post": 261, "type": 0, "author": 117}}, {"pk": 531, "model": "server.vote", "fields": {"post": 79, "type": 0, "author": 113}}, {"pk": 532, "model": "server.vote", "fields": {"post": 95, "type": 0, "author": 113}}, {"pk": 533, "model": "server.vote", "fields": {"post": 266, "type": 0, "author": 122}}, {"pk": 534, "model": "server.vote", "fields": {"post": 267, "type": 0, "author": 59}}, {"pk": 535, "model": "server.vote", "fields": {"post": 246, "type": 0, "author": 59}}, {"pk": 536, "model": "server.vote", "fields": {"post": 266, "type": 0, "author": 59}}, {"pk": 537, "model": "server.vote", "fields": {"post": 268, "type": 0, "author": 23}}, {"pk": 538, "model": "server.vote", "fields": {"post": 268, "type": 0, "author": 90}}, {"pk": 539, "model": "server.vote", "fields": {"post": 268, "type": 0, "author": 38}}, {"pk": 540, "model": "server.vote", "fields": {"post": 268, "type": 0, "author": 30}}, {"pk": 541, "model": "server.vote", "fields": {"post": 270, "type": 0, "author": 59}}, {"pk": 542, "model": "server.vote", "fields": {"post": 269, "type": 0, "author": 59}}, {"pk": 543, "model": "server.vote", "fields": {"post": 269, "type": 0, "author": 23}}, {"pk": 544, "model": "server.vote", "fields": {"post": 270, "type": 0, "author": 23}}, {"pk": 545, "model": "server.vote", "fields": {"post": 272, "type": 0, "author": 59}}, {"pk": 546, "model": "server.vote", "fields": {"post": 273, "type": 0, "author": 38}}, {"pk": 547, "model": "server.vote", "fields": {"post": 273, "type": 0, "author": 62}}, {"pk": 548, "model": "server.vote", "fields": {"post": 276, "type": 0, "author": 55}}, {"pk": 549, "model": "server.vote", "fields": {"post": 275, "type": 0, "author": 23}}, {"pk": 550, "model": "server.vote", "fields": {"post": 268, "type": 0, "author": 114}}, {"pk": 551, "model": "server.vote", "fields": {"post": 277, "type": 0, "author": 23}}, {"pk": 552, "model": "server.vote", "fields": {"post": 274, "type": 0, "author": 23}}, {"pk": 553, "model": "server.vote", "fields": {"post": 272, "type": 0, "author": 23}}, {"pk": 554, "model": "server.vote", "fields": {"post": 278, "type": 0, "author": 23}}, {"pk": 555, "model": "server.vote", "fields": {"post": 271, "type": 0, "author": 2}}, {"pk": 556, "model": "server.vote", "fields": {"post": 275, "type": 0, "author": 2}}, {"pk": 557, "model": "server.vote", "fields": {"post": 276, "type": 0, "author": 2}}, {"pk": 558, "model": "server.vote", "fields": {"post": 278, "type": 0, "author": 2}}, {"pk": 559, "model": "server.vote", "fields": {"post": 274, "type": 0, "author": 2}}, {"pk": 560, "model": "server.vote", "fields": {"post": 272, "type": 0, "author": 2}}, {"pk": 561, "model": "server.vote", "fields": {"post": 270, "type": 0, "author": 2}}, {"pk": 562, "model": "server.vote", "fields": {"post": 269, "type": 0, "author": 2}}, {"pk": 563, "model": "server.vote", "fields": {"post": 268, "type": 0, "author": 2}}, {"pk": 564, "model": "server.vote", "fields": {"post": 281, "type": 0, "author": 53}}, {"pk": 565, "model": "server.vote", "fields": {"post": 278, "type": 0, "author": 72}}, {"pk": 566, "model": "server.vote", "fields": {"post": 268, "type": 0, "author": 72}}, {"pk": 567, "model": "server.vote", "fields": {"post": 258, "type": 0, "author": 59}}, {"pk": 568, "model": "server.vote", "fields": {"post": 282, "type": 0, "author": 59}}, {"pk": 569, "model": "server.vote", "fields": {"post": 259, "type": 0, "author": 59}}, {"pk": 570, "model": "server.vote", "fields": {"post": 154, "type": 0, "author": 59}}, {"pk": 571, "model": "server.vote", "fields": {"post": 278, "type": 0, "author": 66}}, {"pk": 572, "model": "server.vote", "fields": {"post": 281, "type": 0, "author": 66}}, {"pk": 573, "model": "server.vote", "fields": {"post": 283, "type": 0, "author": 68}}, {"pk": 574, "model": "server.vote", "fields": {"post": 131, "type": 0, "author": 31}}, {"pk": 575, "model": "server.vote", "fields": {"post": 95, "type": 0, "author": 31}}, {"pk": 576, "model": "server.vote", "fields": {"post": 81, "type": 0, "author": 31}}, {"pk": 577, "model": "server.vote", "fields": {"post": 80, "type": 0, "author": 31}}, {"pk": 578, "model": "server.vote", "fields": {"post": 84, "type": 0, "author": 31}}, {"pk": 579, "model": "server.vote", "fields": {"post": 82, "type": 0, "author": 31}}, {"pk": 580, "model": "server.vote", "fields": {"post": 153, "type": 0, "author": 31}}, {"pk": 581, "model": "server.vote", "fields": {"post": 228, "type": 0, "author": 31}}, {"pk": 582, "model": "server.vote", "fields": {"post": 258, "type": 0, "author": 31}}, {"pk": 583, "model": "server.vote", "fields": {"post": 277, "type": 0, "author": 31}}, {"pk": 584, "model": "server.vote", "fields": {"post": 283, "type": 0, "author": 30}}, {"pk": 585, "model": "server.vote", "fields": {"post": 284, "type": 0, "author": 119}}, {"pk": 586, "model": "server.vote", "fields": {"post": 283, "type": 1, "author": 26}}, {"pk": 587, "model": "server.vote", "fields": {"post": 285, "type": 0, "author": 31}}, {"pk": 588, "model": "server.vote", "fields": {"post": 284, "type": 0, "author": 31}}, {"pk": 589, "model": "server.vote", "fields": {"post": 285, "type": 0, "author": 59}}, {"pk": 590, "model": "server.vote", "fields": {"post": 279, "type": 0, "author": 55}}, {"pk": 591, "model": "server.vote", "fields": {"post": 285, "type": 0, "author": 90}}, {"pk": 592, "model": "server.vote", "fields": {"post": 286, "type": 0, "author": 30}}, {"pk": 593, "model": "server.vote", "fields": {"post": 210, "type": 0, "author": 59}}, {"pk": 594, "model": "server.vote", "fields": {"post": 268, "type": 0, "author": 129}}, {"pk": 595, "model": "server.vote", "fields": {"post": 285, "type": 0, "author": 23}}, {"pk": 596, "model": "server.vote", "fields": {"post": 284, "type": 0, "author": 23}}, {"pk": 597, "model": "server.vote", "fields": {"post": 239, "type": 0, "author": 66}}, {"pk": 598, "model": "server.vote", "fields": {"post": 285, "type": 0, "author": 68}}, {"pk": 599, "model": "server.vote", "fields": {"post": 287, "type": 0, "author": 30}}, {"pk": 600, "model": "server.vote", "fields": {"post": 288, "type": 0, "author": 55}}, {"pk": 601, "model": "server.vote", "fields": {"post": 288, "type": 0, "author": 2}}, {"pk": 602, "model": "server.vote", "fields": {"post": 288, "type": 0, "author": 58}}, {"pk": 603, "model": "server.vote", "fields": {"post": 286, "type": 0, "author": 59}}, {"pk": 604, "model": "server.vote", "fields": {"post": 202, "type": 0, "author": 130}}, {"pk": 605, "model": "server.vote", "fields": {"post": 288, "type": 0, "author": 26}}, {"pk": 606, "model": "server.vote", "fields": {"post": 217, "type": 0, "author": 134}}, {"pk": 607, "model": "server.vote", "fields": {"post": 175, "type": 0, "author": 31}}, {"pk": 608, "model": "server.vote", "fields": {"post": 287, "type": 0, "author": 136}}, {"pk": 609, "model": "server.vote", "fields": {"post": 288, "type": 0, "author": 136}}, {"pk": 610, "model": "server.vote", "fields": {"post": 276, "type": 0, "author": 125}}, {"pk": 611, "model": "server.vote", "fields": {"post": 275, "type": 0, "author": 125}}, {"pk": 612, "model": "server.vote", "fields": {"post": 273, "type": 0, "author": 125}}, {"pk": 613, "model": "server.vote", "fields": {"post": 289, "type": 0, "author": 59}}, {"pk": 614, "model": "server.vote", "fields": {"post": 284, "type": 0, "author": 38}}, {"pk": 615, "model": "server.vote", "fields": {"post": 290, "type": 0, "author": 2}}, {"pk": 616, "model": "server.vote", "fields": {"post": 291, "type": 0, "author": 2}}, {"pk": 617, "model": "server.vote", "fields": {"post": 292, "type": 0, "author": 2}}, {"pk": 618, "model": "server.vote", "fields": {"post": 292, "type": 0, "author": 136}}, {"pk": 619, "model": "server.vote", "fields": {"post": 278, "type": 0, "author": 59}}, {"pk": 620, "model": "server.vote", "fields": {"post": 274, "type": 0, "author": 59}}, {"pk": 621, "model": "server.vote", "fields": {"post": 293, "type": 0, "author": 31}}, {"pk": 622, "model": "server.vote", "fields": {"post": 293, "type": 0, "author": 30}}, {"pk": 623, "model": "server.vote", "fields": {"post": 289, "type": 0, "author": 2}}, {"pk": 624, "model": "server.vote", "fields": {"post": 268, "type": 0, "author": 89}}, {"pk": 625, "model": "server.vote", "fields": {"post": 294, "type": 0, "author": 30}}, {"pk": 626, "model": "server.vote", "fields": {"post": 294, "type": 0, "author": 31}}, {"pk": 627, "model": "server.vote", "fields": {"post": 291, "type": 0, "author": 55}}, {"pk": 628, "model": "server.vote", "fields": {"post": 292, "type": 0, "author": 55}}, {"pk": 629, "model": "server.vote", "fields": {"post": 111, "type": 0, "author": 141}}, {"pk": 630, "model": "server.vote", "fields": {"post": 296, "type": 0, "author": 89}}, {"pk": 631, "model": "server.vote", "fields": {"post": 115, "type": 0, "author": 141}}, {"pk": 632, "model": "server.vote", "fields": {"post": 295, "type": 0, "author": 35}}, {"pk": 633, "model": "server.vote", "fields": {"post": 285, "type": 0, "author": 35}}, {"pk": 634, "model": "server.vote", "fields": {"post": 296, "type": 0, "author": 30}}, {"pk": 635, "model": "server.vote", "fields": {"post": 297, "type": 0, "author": 68}}, {"pk": 636, "model": "server.vote", "fields": {"post": 298, "type": 0, "author": 68}}, {"pk": 637, "model": "server.vote", "fields": {"post": 296, "type": 0, "author": 68}}, {"pk": 638, "model": "server.vote", "fields": {"post": 299, "type": 0, "author": 30}}, {"pk": 639, "model": "server.vote", "fields": {"post": 296, "type": 0, "author": 53}}, {"pk": 640, "model": "server.vote", "fields": {"post": 206, "type": 0, "author": 68}}, {"pk": 641, "model": "server.vote", "fields": {"post": 295, "type": 0, "author": 31}}, {"pk": 642, "model": "server.vote", "fields": {"post": 300, "type": 0, "author": 30}}, {"pk": 643, "model": "server.vote", "fields": {"post": 298, "type": 0, "author": 2}}, {"pk": 644, "model": "server.vote", "fields": {"post": 297, "type": 0, "author": 2}}, {"pk": 645, "model": "server.vote", "fields": {"post": 299, "type": 0, "author": 2}}, {"pk": 646, "model": "server.vote", "fields": {"post": 300, "type": 0, "author": 2}}, {"pk": 647, "model": "server.vote", "fields": {"post": 294, "type": 0, "author": 68}}, {"pk": 648, "model": "server.vote", "fields": {"post": 296, "type": 0, "author": 117}}, {"pk": 649, "model": "server.vote", "fields": {"post": 294, "type": 0, "author": 36}}, {"pk": 650, "model": "server.vote", "fields": {"post": 298, "type": 0, "author": 66}}, {"pk": 651, "model": "server.vote", "fields": {"post": 296, "type": 0, "author": 59}}, {"pk": 652, "model": "server.vote", "fields": {"post": 194, "type": 0, "author": 23}}, {"pk": 653, "model": "server.vote", "fields": {"post": 175, "type": 0, "author": 23}}, {"pk": 654, "model": "server.vote", "fields": {"post": 175, "type": 0, "author": 145}}, {"pk": 655, "model": "server.vote", "fields": {"post": 298, "type": 0, "author": 23}}, {"pk": 656, "model": "server.vote", "fields": {"post": 299, "type": 0, "author": 23}}, {"pk": 657, "model": "server.vote", "fields": {"post": 300, "type": 0, "author": 23}}, {"pk": 658, "model": "server.vote", "fields": {"post": 285, "type": 0, "author": 38}}, {"pk": 659, "model": "server.vote", "fields": {"post": 283, "type": 0, "author": 72}}, {"pk": 660, "model": "server.vote", "fields": {"post": 285, "type": 0, "author": 72}}, {"pk": 661, "model": "server.vote", "fields": {"post": 133, "type": 0, "author": 36}}, {"pk": 662, "model": "server.vote", "fields": {"post": 135, "type": 0, "author": 36}}, {"pk": 663, "model": "server.vote", "fields": {"post": 237, "type": 0, "author": 59}}, {"pk": 664, "model": "server.vote", "fields": {"post": 194, "type": 0, "author": 87}}, {"pk": 665, "model": "server.vote", "fields": {"post": 85, "type": 0, "author": 66}}, {"pk": 666, "model": "server.vote", "fields": {"post": 180, "type": 0, "author": 30}}, {"pk": 667, "model": "server.vote", "fields": {"post": 289, "type": 0, "author": 23}}, {"pk": 668, "model": "server.vote", "fields": {"post": 192, "type": 0, "author": 23}}, {"pk": 669, "model": "server.vote", "fields": {"post": 195, "type": 0, "author": 23}}, {"pk": 670, "model": "server.vote", "fields": {"post": 184, "type": 0, "author": 23}}, {"pk": 671, "model": "server.vote", "fields": {"post": 92, "type": 1, "author": 142}}, {"pk": 672, "model": "server.vote", "fields": {"post": 202, "type": 0, "author": 23}}, {"pk": 673, "model": "server.vote", "fields": {"post": 84, "type": 0, "author": 141}}, {"pk": 674, "model": "server.vote", "fields": {"post": 105, "type": 0, "author": 141}}, {"pk": 675, "model": "server.vote", "fields": {"post": 292, "type": 0, "author": 87}}, {"pk": 676, "model": "server.vote", "fields": {"post": 279, "type": 0, "author": 87}}, {"pk": 677, "model": "server.vote", "fields": {"post": 266, "type": 0, "author": 87}}, {"pk": 678, "model": "server.vote", "fields": {"post": 248, "type": 0, "author": 117}}, {"pk": 679, "model": "server.vote", "fields": {"post": 176, "type": 0, "author": 2}}, {"pk": 680, "model": "server.vote", "fields": {"post": 231, "type": 0, "author": 113}}, {"pk": 681, "model": "server.vote", "fields": {"post": 222, "type": 0, "author": 113}}, {"pk": 682, "model": "server.vote", "fields": {"post": 98, "type": 0, "author": 66}}, {"pk": 683, "model": "server.vote", "fields": {"post": 39, "type": 0, "author": 66}}, {"pk": 684, "model": "server.vote", "fields": {"post": 272, "type": 0, "author": 154}}, {"pk": 685, "model": "server.vote", "fields": {"post": 269, "type": 0, "author": 154}}, {"pk": 686, "model": "server.vote", "fields": {"post": 270, "type": 0, "author": 154}}, {"pk": 687, "model": "server.vote", "fields": {"post": 289, "type": 0, "author": 154}}, {"pk": 688, "model": "server.vote", "fields": {"post": 22, "type": 0, "author": 154}}, {"pk": 689, "model": "server.vote", "fields": {"post": 298, "type": 0, "author": 80}}, {"pk": 690, "model": "server.vote", "fields": {"post": 297, "type": 0, "author": 80}}, {"pk": 691, "model": "server.vote", "fields": {"post": 296, "type": 0, "author": 80}}, {"pk": 692, "model": "server.vote", "fields": {"post": 37, "type": 0, "author": 154}}, {"pk": 693, "model": "server.vote", "fields": {"post": 177, "type": 0, "author": 154}}, {"pk": 694, "model": "server.vote", "fields": {"post": 232, "type": 0, "author": 154}}, {"pk": 695, "model": "server.vote", "fields": {"post": 278, "type": 0, "author": 80}}, {"pk": 696, "model": "server.vote", "fields": {"post": 268, "type": 0, "author": 80}}, {"pk": 697, "model": "server.vote", "fields": {"post": 122, "type": 0, "author": 154}}, {"pk": 698, "model": "server.vote", "fields": {"post": 157, "type": 0, "author": 154}}, {"pk": 699, "model": "server.vote", "fields": {"post": 38, "type": 0, "author": 154}}, {"pk": 700, "model": "server.vote", "fields": {"post": 136, "type": 0, "author": 154}}, {"pk": 701, "model": "server.vote", "fields": {"post": 296, "type": 0, "author": 154}}, {"pk": 702, "model": "server.vote", "fields": {"post": 298, "type": 0, "author": 154}}, {"pk": 703, "model": "server.vote", "fields": {"post": 300, "type": 0, "author": 154}}, {"pk": 704, "model": "server.vote", "fields": {"post": 50, "type": 0, "author": 66}}, {"pk": 705, "model": "server.vote", "fields": {"post": 83, "type": 0, "author": 66}}, {"pk": 706, "model": "server.vote", "fields": {"post": 198, "type": 0, "author": 23}}, {"pk": 707, "model": "server.vote", "fields": {"post": 211, "type": 0, "author": 23}}, {"pk": 708, "model": "server.vote", "fields": {"post": 296, "type": 0, "author": 95}}, {"pk": 709, "model": "server.vote", "fields": {"post": 122, "type": 0, "author": 158}}, {"pk": 710, "model": "server.vote", "fields": {"post": 38, "type": 0, "author": 158}}, {"pk": 711, "model": "server.vote", "fields": {"post": 64, "type": 0, "author": 158}}, {"pk": 712, "model": "server.vote", "fields": {"post": 36, "type": 0, "author": 158}}, {"pk": 713, "model": "server.vote", "fields": {"post": 299, "type": 0, "author": 71}}, {"pk": 714, "model": "server.vote", "fields": {"post": 296, "type": 0, "author": 71}}, {"pk": 715, "model": "server.vote", "fields": {"post": 48, "type": 0, "author": 68}}, {"pk": 716, "model": "server.vote", "fields": {"post": 43, "type": 0, "author": 40}}, {"pk": 717, "model": "server.vote", "fields": {"post": 38, "type": 0, "author": 66}}, {"pk": 718, "model": "server.vote", "fields": {"post": 122, "type": 0, "author": 66}}, {"pk": 719, "model": "server.vote", "fields": {"post": 122, "type": 0, "author": 142}}, {"pk": 720, "model": "server.vote", "fields": {"post": 214, "type": 0, "author": 89}}, {"pk": 721, "model": "server.vote", "fields": {"post": 2, "type": 0, "author": 160}}, {"pk": 722, "model": "server.vote", "fields": {"post": 163, "type": 0, "author": 30}}, {"pk": 723, "model": "server.vote", "fields": {"post": 183, "type": 0, "author": 30}}, {"pk": 724, "model": "server.vote", "fields": {"post": 296, "type": 0, "author": 86}}, {"pk": 725, "model": "server.vote", "fields": {"post": 38, "type": 1, "author": 62}}, {"pk": 726, "model": "server.vote", "fields": {"post": 136, "type": 0, "author": 55}}, {"pk": 727, "model": "server.vote", "fields": {"post": 126, "type": 0, "author": 2}}, {"pk": 728, "model": "server.vote", "fields": {"post": 81, "type": 0, "author": 169}}, {"pk": 729, "model": "server.vote", "fields": {"post": 234, "type": 0, "author": 169}}, {"pk": 730, "model": "server.vote", "fields": {"post": 80, "type": 0, "author": 173}}, {"pk": 731, "model": "server.vote", "fields": {"post": 79, "type": 0, "author": 169}}, {"pk": 732, "model": "server.vote", "fields": {"post": 274, "type": 0, "author": 74}}, {"pk": 733, "model": "server.vote", "fields": {"post": 245, "type": 0, "author": 169}}, {"pk": 734, "model": "server.vote", "fields": {"post": 246, "type": 0, "author": 169}}, {"pk": 735, "model": "server.vote", "fields": {"post": 245, "type": 0, "author": 74}}, {"pk": 736, "model": "server.vote", "fields": {"post": 181, "type": 0, "author": 169}}, {"pk": 737, "model": "server.vote", "fields": {"post": 182, "type": 0, "author": 169}}, {"pk": 738, "model": "server.vote", "fields": {"post": 181, "type": 0, "author": 179}}, {"pk": 739, "model": "server.vote", "fields": {"post": 285, "type": 0, "author": 74}}, {"pk": 740, "model": "server.vote", "fields": {"post": 16, "type": 0, "author": 113}}, {"pk": 741, "model": "server.vote", "fields": {"post": 197, "type": 0, "author": 73}}, {"pk": 742, "model": "server.vote", "fields": {"post": 130, "type": 0, "author": 73}}, {"pk": 743, "model": "server.vote", "fields": {"post": 231, "type": 0, "author": 23}}, {"pk": 744, "model": "server.vote", "fields": {"post": 191, "type": 0, "author": 68}}, {"pk": 745, "model": "server.vote", "fields": {"post": 262, "type": 0, "author": 36}}, {"pk": 746, "model": "server.vote", "fields": {"post": 227, "type": 0, "author": 23}}, {"pk": 747, "model": "server.vote", "fields": {"post": 133, "type": 0, "author": 126}}, {"pk": 748, "model": "server.vote", "fields": {"post": 132, "type": 0, "author": 205}}, {"pk": 749, "model": "server.vote", "fields": {"post": 161, "type": 0, "author": 205}}, {"pk": 750, "model": "server.vote", "fields": {"post": 163, "type": 0, "author": 68}}, {"pk": 751, "model": "server.vote", "fields": {"post": 137, "type": 0, "author": 30}}, {"pk": 752, "model": "server.vote", "fields": {"post": 254, "type": 0, "author": 2}}, {"pk": 753, "model": "server.vote", "fields": {"post": 128, "type": 0, "author": 31}}, {"pk": 754, "model": "server.vote", "fields": {"post": 235, "type": 0, "author": 55}}, {"pk": 755, "model": "server.vote", "fields": {"post": 12, "type": 0, "author": 203}}, {"pk": 756, "model": "server.vote", "fields": {"post": 12, "type": 0, "author": 74}}, {"pk": 757, "model": "server.vote", "fields": {"post": 5, "type": 0, "author": 216}}, {"pk": 758, "model": "server.vote", "fields": {"post": 168, "type": 0, "author": 216}}, {"pk": 759, "model": "server.vote", "fields": {"post": 245, "type": 0, "author": 23}}, {"pk": 760, "model": "server.vote", "fields": {"post": 189, "type": 0, "author": 23}}, {"pk": 761, "model": "server.vote", "fields": {"post": 172, "type": 0, "author": 23}}, {"pk": 762, "model": "server.vote", "fields": {"post": 174, "type": 0, "author": 23}}, {"pk": 763, "model": "server.vote", "fields": {"post": 168, "type": 0, "author": 23}}, {"pk": 764, "model": "server.vote", "fields": {"post": 296, "type": 0, "author": 23}}, {"pk": 765, "model": "server.vote", "fields": {"post": 93, "type": 0, "author": 223}}, {"pk": 766, "model": "server.vote", "fields": {"post": 12, "type": 0, "author": 223}}, {"pk": 767, "model": "server.vote", "fields": {"post": 210, "type": 0, "author": 23}}, {"pk": 768, "model": "server.vote", "fields": {"post": 97, "type": 0, "author": 23}}, {"pk": 769, "model": "server.vote", "fields": {"post": 155, "type": 0, "author": 23}}, {"pk": 770, "model": "server.vote", "fields": {"post": 174, "type": 0, "author": 232}}, {"pk": 771, "model": "server.vote", "fields": {"post": 41, "type": 0, "author": 225}}, {"pk": 772, "model": "server.vote", "fields": {"post": 41, "type": 0, "author": 30}}, {"pk": 773, "model": "server.vote", "fields": {"post": 45, "type": 0, "author": 30}}, {"pk": 774, "model": "server.vote", "fields": {"post": 41, "type": 0, "author": 216}}, {"pk": 775, "model": "server.vote", "fields": {"post": 45, "type": 0, "author": 223}}, {"pk": 776, "model": "server.vote", "fields": {"post": 183, "type": 0, "author": 205}}, {"pk": 777, "model": "server.vote", "fields": {"post": 38, "type": 1, "author": 216}}, {"pk": 778, "model": "server.vote", "fields": {"post": 183, "type": 0, "author": 216}}, {"pk": 779, "model": "server.vote", "fields": {"post": 271, "type": 0, "author": 216}}, {"pk": 780, "model": "server.vote", "fields": {"post": 77, "type": 0, "author": 216}}, {"pk": 781, "model": "server.vote", "fields": {"post": 228, "type": 0, "author": 216}}, {"pk": 782, "model": "server.vote", "fields": {"post": 104, "type": 0, "author": 216}}, {"pk": 783, "model": "server.vote", "fields": {"post": 161, "type": 0, "author": 216}}, {"pk": 784, "model": "server.vote", "fields": {"post": 222, "type": 0, "author": 216}}, {"pk": 785, "model": "server.vote", "fields": {"post": 219, "type": 0, "author": 216}}, {"pk": 786, "model": "server.vote", "fields": {"post": 28, "type": 0, "author": 216}}, {"pk": 787, "model": "server.vote", "fields": {"post": 282, "type": 0, "author": 216}}, {"pk": 788, "model": "server.vote", "fields": {"post": 24, "type": 0, "author": 216}}, {"pk": 789, "model": "server.vote", "fields": {"post": 136, "type": 1, "author": 127}}, {"pk": 790, "model": "server.vote", "fields": {"post": 43, "type": 0, "author": 127}}, {"pk": 791, "model": "server.vote", "fields": {"post": 38, "type": 0, "author": 205}}, {"pk": 792, "model": "server.vote", "fields": {"post": 136, "type": 0, "author": 205}}, {"pk": 1, "model": "taggit.tag", "fields": {"name": "guidelines", "slug": "guidelines"}}, {"pk": 2, "model": "taggit.tag", "fields": {"name": "bed", "slug": "bed"}}, {"pk": 3, "model": "taggit.tag", "fields": {"name": "gff", "slug": "gff"}}, {"pk": 4, "model": "taggit.tag", "fields": {"name": "galaxy", "slug": "galaxy"}}, {"pk": 5, "model": "taggit.tag", "fields": {"name": "yeast", "slug": "yeast"}}, {"pk": 6, "model": "taggit.tag", "fields": {"name": "motif", "slug": "motif"}}, {"pk": 7, "model": "taggit.tag", "fields": {"name": "microarray", "slug": "microarray"}}, {"pk": 8, "model": "taggit.tag", "fields": {"name": "clustering", "slug": "clustering"}}, {"pk": 9, "model": "taggit.tag", "fields": {"name": "test", "slug": "test"}}, {"pk": 10, "model": "taggit.tag", "fields": {"name": "nucleotides", "slug": "nucleotides"}}, {"pk": 11, "model": "taggit.tag", "fields": {"name": "solid", "slug": "solid"}}, {"pk": 12, "model": "taggit.tag", "fields": {"name": "deep", "slug": "deep"}}, {"pk": 13, "model": "taggit.tag", "fields": {"name": "sequence", "slug": "sequence"}}, {"pk": 14, "model": "taggit.tag", "fields": {"name": "boy", "slug": "boy"}}, {"pk": 15, "model": "taggit.tag", "fields": {"name": "george", "slug": "george"}}, {"pk": 16, "model": "taggit.tag", "fields": {"name": "geneid", "slug": "geneid"}}, {"pk": 17, "model": "taggit.tag", "fields": {"name": "accession", "slug": "accession"}}, {"pk": 18, "model": "taggit.tag", "fields": {"name": "mapping", "slug": "mapping"}}, {"pk": 19, "model": "taggit.tag", "fields": {"name": "conversion", "slug": "conversion"}}, {"pk": 20, "model": "taggit.tag", "fields": {"name": "shrimp", "slug": "shrimp"}}, {"pk": 21, "model": "taggit.tag", "fields": {"name": "sequencing", "slug": "sequencing"}}, {"pk": 22, "model": "taggit.tag", "fields": {"name": "short", "slug": "short"}}, {"pk": 23, "model": "taggit.tag", "fields": {"name": "aligner", "slug": "aligner"}}, {"pk": 24, "model": "taggit.tag", "fields": {"name": "meme", "slug": "meme"}}, {"pk": 25, "model": "taggit.tag", "fields": {"name": "sge", "slug": "sge"}}, {"pk": 26, "model": "taggit.tag", "fields": {"name": "compilation", "slug": "compilation"}}, {"pk": 27, "model": "taggit.tag", "fields": {"name": "rna", "slug": "rna"}}, {"pk": 28, "model": "taggit.tag", "fields": {"name": "general", "slug": "general"}}, {"pk": 29, "model": "taggit.tag", "fields": {"name": "subjective", "slug": "subjective"}}, {"pk": 30, "model": "taggit.tag", "fields": {"name": "os", "slug": "os"}}, {"pk": 31, "model": "taggit.tag", "fields": {"name": "programming", "slug": "programming"}}, {"pk": 32, "model": "taggit.tag", "fields": {"name": "languages", "slug": "languages"}}, {"pk": 33, "model": "taggit.tag", "fields": {"name": "gene", "slug": "gene"}}, {"pk": 34, "model": "taggit.tag", "fields": {"name": "go", "slug": "go"}}, {"pk": 35, "model": "taggit.tag", "fields": {"name": "string", "slug": "string"}}, {"pk": 36, "model": "taggit.tag", "fields": {"name": "protein", "slug": "protein"}}, {"pk": 37, "model": "taggit.tag", "fields": {"name": "interacti", "slug": "interacti"}}, {"pk": 38, "model": "taggit.tag", "fields": {"name": "ppi", "slug": "ppi"}}, {"pk": 39, "model": "taggit.tag", "fields": {"name": "pin", "slug": "pin"}}, {"pk": 40, "model": "taggit.tag", "fields": {"name": "structure", "slug": "structure"}}, {"pk": 41, "model": "taggit.tag", "fields": {"name": "blast", "slug": "blast"}}, {"pk": 42, "model": "taggit.tag", "fields": {"name": "ucsc", "slug": "ucsc"}}, {"pk": 43, "model": "taggit.tag", "fields": {"name": "fasta", "slug": "fasta"}}, {"pk": 44, "model": "taggit.tag", "fields": {"name": "hdf", "slug": "hdf"}}, {"pk": 45, "model": "taggit.tag", "fields": {"name": "biohdf", "slug": "biohdf"}}, {"pk": 46, "model": "taggit.tag", "fields": {"name": "storage", "slug": "storage"}}, {"pk": 47, "model": "taggit.tag", "fields": {"name": "taverna", "slug": "taverna"}}, {"pk": 48, "model": "taggit.tag", "fields": {"name": "plugin", "slug": "plugin"}}, {"pk": 49, "model": "taggit.tag", "fields": {"name": "maven", "slug": "maven"}}, {"pk": 50, "model": "taggit.tag", "fields": {"name": "workflow", "slug": "workflow"}}, {"pk": 51, "model": "taggit.tag", "fields": {"name": "format", "slug": "format"}}, {"pk": 52, "model": "taggit.tag", "fields": {"name": "make", "slug": "make"}}, {"pk": 53, "model": "taggit.tag", "fields": {"name": "pipeline", "slug": "pipeline"}}, {"pk": 54, "model": "taggit.tag", "fields": {"name": "organization", "slug": "organization"}}, {"pk": 55, "model": "taggit.tag", "fields": {"name": "agile", "slug": "agile"}}, {"pk": 56, "model": "taggit.tag", "fields": {"name": "good", "slug": "good"}}, {"pk": 57, "model": "taggit.tag", "fields": {"name": "team", "slug": "team"}}, {"pk": 58, "model": "taggit.tag", "fields": {"name": "biopython", "slug": "biopython"}}, {"pk": 59, "model": "taggit.tag", "fields": {"name": "python", "slug": "python"}}, {"pk": 60, "model": "taggit.tag", "fields": {"name": "pygr", "slug": "pygr"}}, {"pk": 61, "model": "taggit.tag", "fields": {"name": "use", "slug": "use"}}, {"pk": 62, "model": "taggit.tag", "fields": {"name": "interval", "slug": "interval"}}, {"pk": 63, "model": "taggit.tag", "fields": {"name": "query", "slug": "query"}}, {"pk": 64, "model": "taggit.tag", "fields": {"name": "genomics", "slug": "genomics"}}, {"pk": 65, "model": "taggit.tag", "fields": {"name": "dna", "slug": "dna"}}, {"pk": 66, "model": "taggit.tag", "fields": {"name": "genome", "slug": "genome"}}, {"pk": 67, "model": "taggit.tag", "fields": {"name": "annotation", "slug": "annotation"}}, {"pk": 68, "model": "taggit.tag", "fields": {"name": "database", "slug": "database"}}, {"pk": 69, "model": "taggit.tag", "fields": {"name": "taxonomy", "slug": "taxonomy"}}, {"pk": 70, "model": "taggit.tag", "fields": {"name": "blog", "slug": "blog"}}, {"pk": 71, "model": "taggit.tag", "fields": {"name": "off", "slug": "off"}}, {"pk": 72, "model": "taggit.tag", "fields": {"name": "resources", "slug": "resources"}}, {"pk": 73, "model": "taggit.tag", "fields": {"name": "pfam", "slug": "pfam"}}, {"pk": 74, "model": "taggit.tag", "fields": {"name": "k", "slug": "k"}}, {"pk": 75, "model": "taggit.tag", "fields": {"name": "cloud", "slug": "cloud"}}, {"pk": 76, "model": "taggit.tag", "fields": {"name": "best", "slug": "best"}}, {"pk": 77, "model": "taggit.tag", "fields": {"name": "bioinformatics", "slug": "bioinformatics"}}, {"pk": 78, "model": "taggit.tag", "fields": {"name": "snp", "slug": "snp"}}, {"pk": 79, "model": "taggit.tag", "fields": {"name": "genotyping", "slug": "genotyping"}}, {"pk": 80, "model": "taggit.tag", "fields": {"name": "pathways", "slug": "pathways"}}, {"pk": 81, "model": "taggit.tag", "fields": {"name": "genes", "slug": "genes"}}, {"pk": 82, "model": "taggit.tag", "fields": {"name": "mining", "slug": "mining"}}, {"pk": 83, "model": "taggit.tag", "fields": {"name": "meta", "slug": "meta"}}, {"pk": 84, "model": "taggit.tag", "fields": {"name": "alignment", "slug": "alignment"}}, {"pk": 85, "model": "taggit.tag", "fields": {"name": "scoring", "slug": "scoring"}}, {"pk": 86, "model": "taggit.tag", "fields": {"name": "multiple", "slug": "multiple"}}, {"pk": 87, "model": "taggit.tag", "fields": {"name": "hardware", "slug": "hardware"}}, {"pk": 88, "model": "taggit.tag", "fields": {"name": "linux", "slug": "linux"}}, {"pk": 89, "model": "taggit.tag", "fields": {"name": "server", "slug": "server"}}, {"pk": 90, "model": "taggit.tag", "fields": {"name": "ensembl", "slug": "ensembl"}}, {"pk": 91, "model": "taggit.tag", "fields": {"name": "books", "slug": "books"}}, {"pk": 92, "model": "taggit.tag", "fields": {"name": "book", "slug": "book"}}, {"pk": 93, "model": "taggit.tag", "fields": {"name": "recommendations", "slug": "recommendations"}}, {"pk": 94, "model": "taggit.tag", "fields": {"name": "bacteria", "slug": "bacteria"}}, {"pk": 95, "model": "taggit.tag", "fields": {"name": "genetic", "slug": "genetic"}}, {"pk": 96, "model": "taggit.tag", "fields": {"name": "map", "slug": "map"}}, {"pk": 97, "model": "taggit.tag", "fields": {"name": "cm", "slug": "cm"}}, {"pk": 98, "model": "taggit.tag", "fields": {"name": "cis", "slug": "cis"}}, {"pk": 99, "model": "taggit.tag", "fields": {"name": "module", "slug": "module"}}, {"pk": 100, "model": "taggit.tag", "fields": {"name": "dnase", "slug": "dnase"}}, {"pk": 101, "model": "taggit.tag", "fields": {"name": "transcription", "slug": "transcription"}}, {"pk": 102, "model": "taggit.tag", "fields": {"name": "contact", "slug": "contact"}}, {"pk": 103, "model": "taggit.tag", "fields": {"name": "faq", "slug": "faq"}}, {"pk": 104, "model": "taggit.tag", "fields": {"name": "assembly", "slug": "assembly"}}, {"pk": 105, "model": "taggit.tag", "fields": {"name": "unambiguous", "slug": "unambiguous"}}, {"pk": 106, "model": "taggit.tag", "fields": {"name": "fastq", "slug": "fastq"}}, {"pk": 107, "model": "taggit.tag", "fields": {"name": "ngs", "slug": "ngs"}}, {"pk": 108, "model": "taggit.tag", "fields": {"name": "search", "slug": "search"}}, {"pk": 109, "model": "taggit.tag", "fields": {"name": "tool", "slug": "tool"}}, {"pk": 110, "model": "taggit.tag", "fields": {"name": "primer", "slug": "primer"}}, {"pk": 111, "model": "taggit.tag", "fields": {"name": "professional", "slug": "professional"}}, {"pk": 112, "model": "taggit.tag", "fields": {"name": "career", "slug": "career"}}, {"pk": 113, "model": "taggit.tag", "fields": {"name": "assessment", "slug": "assessment"}}, {"pk": 114, "model": "taggit.tag", "fields": {"name": "enrichment", "slug": "enrichment"}}, {"pk": 115, "model": "taggit.tag", "fields": {"name": "metabolomics", "slug": "metabolomics"}}, {"pk": 116, "model": "taggit.tag", "fields": {"name": "metabolite", "slug": "metabolite"}}, {"pk": 117, "model": "taggit.tag", "fields": {"name": "cheminformatics", "slug": "cheminformatics"}}, {"pk": 118, "model": "taggit.tag", "fields": {"name": "java", "slug": "java"}}, {"pk": 119, "model": "taggit.tag", "fields": {"name": "opensource", "slug": "opensource"}}, {"pk": 120, "model": "taggit.tag", "fields": {"name": "base", "slug": "base"}}, {"pk": 121, "model": "taggit.tag", "fields": {"name": "phred", "slug": "phred"}}, {"pk": 122, "model": "taggit.tag", "fields": {"name": "bustard", "slug": "bustard"}}, {"pk": 123, "model": "taggit.tag", "fields": {"name": "podcast", "slug": "podcast"}}, {"pk": 124, "model": "taggit.tag", "fields": {"name": "vodcast", "slug": "vodcast"}}, {"pk": 125, "model": "taggit.tag", "fields": {"name": "trna", "slug": "trna"}}, {"pk": 126, "model": "taggit.tag", "fields": {"name": "function", "slug": "function"}}, {"pk": 127, "model": "taggit.tag", "fields": {"name": "redundancy", "slug": "redundancy"}}, {"pk": 128, "model": "taggit.tag", "fields": {"name": "c", "slug": "c"}}, {"pk": 129, "model": "taggit.tag", "fields": {"name": "mpi", "slug": "mpi"}}, {"pk": 130, "model": "taggit.tag", "fields": {"name": "job", "slug": "job"}}, {"pk": 1, "model": "taggit.taggeditem", "fields": {"tag": 1, "content_type": 11, "object_id": 1}}, {"pk": 2, "model": "taggit.taggeditem", "fields": {"tag": 2, "content_type": 11, "object_id": 2}}, {"pk": 3, "model": "taggit.taggeditem", "fields": {"tag": 3, "content_type": 11, "object_id": 2}}, {"pk": 4, "model": "taggit.taggeditem", "fields": {"tag": 4, "content_type": 11, "object_id": 2}}, {"pk": 5, "model": "taggit.taggeditem", "fields": {"tag": 5, "content_type": 11, "object_id": 3}}, {"pk": 6, "model": "taggit.taggeditem", "fields": {"tag": 6, "content_type": 11, "object_id": 3}}, {"pk": 7, "model": "taggit.taggeditem", "fields": {"tag": 7, "content_type": 11, "object_id": 4}}, {"pk": 8, "model": "taggit.taggeditem", "fields": {"tag": 8, "content_type": 11, "object_id": 4}}, {"pk": 9, "model": "taggit.taggeditem", "fields": {"tag": 9, "content_type": 11, "object_id": 5}}, {"pk": 10, "model": "taggit.taggeditem", "fields": {"tag": 10, "content_type": 11, "object_id": 6}}, {"pk": 11, "model": "taggit.taggeditem", "fields": {"tag": 11, "content_type": 11, "object_id": 7}}, {"pk": 12, "model": "taggit.taggeditem", "fields": {"tag": 12, "content_type": 11, "object_id": 7}}, {"pk": 13, "model": "taggit.taggeditem", "fields": {"tag": 13, "content_type": 11, "object_id": 7}}, {"pk": 14, "model": "taggit.taggeditem", "fields": {"tag": 14, "content_type": 11, "object_id": 8}}, {"pk": 15, "model": "taggit.taggeditem", "fields": {"tag": 15, "content_type": 11, "object_id": 8}}, {"pk": 16, "model": "taggit.taggeditem", "fields": {"tag": 14, "content_type": 11, "object_id": 9}}, {"pk": 17, "model": "taggit.taggeditem", "fields": {"tag": 15, "content_type": 11, "object_id": 9}}, {"pk": 18, "model": "taggit.taggeditem", "fields": {"tag": 16, "content_type": 11, "object_id": 10}}, {"pk": 19, "model": "taggit.taggeditem", "fields": {"tag": 17, "content_type": 11, "object_id": 10}}, {"pk": 20, "model": "taggit.taggeditem", "fields": {"tag": 18, "content_type": 11, "object_id": 10}}, {"pk": 21, "model": "taggit.taggeditem", "fields": {"tag": 19, "content_type": 11, "object_id": 10}}, {"pk": 22, "model": "taggit.taggeditem", "fields": {"tag": 20, "content_type": 11, "object_id": 11}}, {"pk": 23, "model": "taggit.taggeditem", "fields": {"tag": 21, "content_type": 11, "object_id": 11}}, {"pk": 24, "model": "taggit.taggeditem", "fields": {"tag": 22, "content_type": 11, "object_id": 11}}, {"pk": 25, "model": "taggit.taggeditem", "fields": {"tag": 23, "content_type": 11, "object_id": 11}}, {"pk": 26, "model": "taggit.taggeditem", "fields": {"tag": 24, "content_type": 11, "object_id": 12}}, {"pk": 27, "model": "taggit.taggeditem", "fields": {"tag": 25, "content_type": 11, "object_id": 12}}, {"pk": 28, "model": "taggit.taggeditem", "fields": {"tag": 6, "content_type": 11, "object_id": 12}}, {"pk": 29, "model": "taggit.taggeditem", "fields": {"tag": 26, "content_type": 11, "object_id": 12}}, {"pk": 30, "model": "taggit.taggeditem", "fields": {"tag": 11, "content_type": 11, "object_id": 13}}, {"pk": 31, "model": "taggit.taggeditem", "fields": {"tag": 27, "content_type": 11, "object_id": 13}}, {"pk": 32, "model": "taggit.taggeditem", "fields": {"tag": 4, "content_type": 11, "object_id": 13}}, {"pk": 33, "model": "taggit.taggeditem", "fields": {"tag": 28, "content_type": 11, "object_id": 14}}, {"pk": 34, "model": "taggit.taggeditem", "fields": {"tag": 29, "content_type": 11, "object_id": 14}}, {"pk": 35, "model": "taggit.taggeditem", "fields": {"tag": 30, "content_type": 11, "object_id": 14}}, {"pk": 36, "model": "taggit.taggeditem", "fields": {"tag": 29, "content_type": 11, "object_id": 15}}, {"pk": 37, "model": "taggit.taggeditem", "fields": {"tag": 31, "content_type": 11, "object_id": 15}}, {"pk": 38, "model": "taggit.taggeditem", "fields": {"tag": 32, "content_type": 11, "object_id": 15}}, {"pk": 39, "model": "taggit.taggeditem", "fields": {"tag": 29, "content_type": 11, "object_id": 16}}, {"pk": 40, "model": "taggit.taggeditem", "fields": {"tag": 33, "content_type": 11, "object_id": 16}}, {"pk": 41, "model": "taggit.taggeditem", "fields": {"tag": 34, "content_type": 11, "object_id": 16}}, {"pk": 42, "model": "taggit.taggeditem", "fields": {"tag": 29, "content_type": 11, "object_id": 17}}, {"pk": 43, "model": "taggit.taggeditem", "fields": {"tag": 35, "content_type": 11, "object_id": 17}}, {"pk": 44, "model": "taggit.taggeditem", "fields": {"tag": 36, "content_type": 11, "object_id": 17}}, {"pk": 45, "model": "taggit.taggeditem", "fields": {"tag": 37, "content_type": 11, "object_id": 17}}, {"pk": 46, "model": "taggit.taggeditem", "fields": {"tag": 38, "content_type": 11, "object_id": 17}}, {"pk": 47, "model": "taggit.taggeditem", "fields": {"tag": 39, "content_type": 11, "object_id": 17}}, {"pk": 48, "model": "taggit.taggeditem", "fields": {"tag": 13, "content_type": 11, "object_id": 18}}, {"pk": 49, "model": "taggit.taggeditem", "fields": {"tag": 36, "content_type": 11, "object_id": 18}}, {"pk": 50, "model": "taggit.taggeditem", "fields": {"tag": 40, "content_type": 11, "object_id": 18}}, {"pk": 51, "model": "taggit.taggeditem", "fields": {"tag": 13, "content_type": 11, "object_id": 19}}, {"pk": 52, "model": "taggit.taggeditem", "fields": {"tag": 41, "content_type": 11, "object_id": 19}}, {"pk": 53, "model": "taggit.taggeditem", "fields": {"tag": 11, "content_type": 11, "object_id": 20}}, {"pk": 54, "model": "taggit.taggeditem", "fields": {"tag": 13, "content_type": 11, "object_id": 21}}, {"pk": 55, "model": "taggit.taggeditem", "fields": {"tag": 42, "content_type": 11, "object_id": 21}}, {"pk": 56, "model": "taggit.taggeditem", "fields": {"tag": 43, "content_type": 11, "object_id": 21}}, {"pk": 57, "model": "taggit.taggeditem", "fields": {"tag": 28, "content_type": 11, "object_id": 22}}, {"pk": 58, "model": "taggit.taggeditem", "fields": {"tag": 29, "content_type": 11, "object_id": 22}}, {"pk": 59, "model": "taggit.taggeditem", "fields": {"tag": 44, "content_type": 11, "object_id": 23}}, {"pk": 60, "model": "taggit.taggeditem", "fields": {"tag": 45, "content_type": 11, "object_id": 23}}, {"pk": 61, "model": "taggit.taggeditem", "fields": {"tag": 46, "content_type": 11, "object_id": 23}}, {"pk": 62, "model": "taggit.taggeditem", "fields": {"tag": 26, "content_type": 11, "object_id": 24}}, {"pk": 63, "model": "taggit.taggeditem", "fields": {"tag": 47, "content_type": 11, "object_id": 24}}, {"pk": 64, "model": "taggit.taggeditem", "fields": {"tag": 48, "content_type": 11, "object_id": 24}}, {"pk": 65, "model": "taggit.taggeditem", "fields": {"tag": 49, "content_type": 11, "object_id": 24}}, {"pk": 66, "model": "taggit.taggeditem", "fields": {"tag": 50, "content_type": 11, "object_id": 24}}, {"pk": 67, "model": "taggit.taggeditem", "fields": {"tag": 2, "content_type": 11, "object_id": 25}}, {"pk": 68, "model": "taggit.taggeditem", "fields": {"tag": 19, "content_type": 11, "object_id": 25}}, {"pk": 69, "model": "taggit.taggeditem", "fields": {"tag": 51, "content_type": 11, "object_id": 25}}, {"pk": 70, "model": "taggit.taggeditem", "fields": {"tag": 28, "content_type": 11, "object_id": 26}}, {"pk": 71, "model": "taggit.taggeditem", "fields": {"tag": 52, "content_type": 11, "object_id": 26}}, {"pk": 72, "model": "taggit.taggeditem", "fields": {"tag": 53, "content_type": 11, "object_id": 26}}, {"pk": 73, "model": "taggit.taggeditem", "fields": {"tag": 54, "content_type": 11, "object_id": 26}}, {"pk": 74, "model": "taggit.taggeditem", "fields": {"tag": 28, "content_type": 11, "object_id": 27}}, {"pk": 75, "model": "taggit.taggeditem", "fields": {"tag": 55, "content_type": 11, "object_id": 27}}, {"pk": 76, "model": "taggit.taggeditem", "fields": {"tag": 56, "content_type": 11, "object_id": 27}}, {"pk": 77, "model": "taggit.taggeditem", "fields": {"tag": 57, "content_type": 11, "object_id": 27}}, {"pk": 78, "model": "taggit.taggeditem", "fields": {"tag": 13, "content_type": 11, "object_id": 28}}, {"pk": 79, "model": "taggit.taggeditem", "fields": {"tag": 58, "content_type": 11, "object_id": 28}}, {"pk": 80, "model": "taggit.taggeditem", "fields": {"tag": 59, "content_type": 11, "object_id": 28}}, {"pk": 81, "model": "taggit.taggeditem", "fields": {"tag": 59, "content_type": 11, "object_id": 29}}, {"pk": 82, "model": "taggit.taggeditem", "fields": {"tag": 60, "content_type": 11, "object_id": 29}}, {"pk": 83, "model": "taggit.taggeditem", "fields": {"tag": 61, "content_type": 11, "object_id": 29}}, {"pk": 84, "model": "taggit.taggeditem", "fields": {"tag": 13, "content_type": 11, "object_id": 29}}, {"pk": 85, "model": "taggit.taggeditem", "fields": {"tag": 62, "content_type": 11, "object_id": 30}}, {"pk": 86, "model": "taggit.taggeditem", "fields": {"tag": 63, "content_type": 11, "object_id": 30}}, {"pk": 87, "model": "taggit.taggeditem", "fields": {"tag": 61, "content_type": 11, "object_id": 30}}, {"pk": 88, "model": "taggit.taggeditem", "fields": {"tag": 64, "content_type": 11, "object_id": 30}}, {"pk": 89, "model": "taggit.taggeditem", "fields": {"tag": 13, "content_type": 11, "object_id": 31}}, {"pk": 90, "model": "taggit.taggeditem", "fields": {"tag": 61, "content_type": 11, "object_id": 31}}, {"pk": 91, "model": "taggit.taggeditem", "fields": {"tag": 65, "content_type": 11, "object_id": 31}}, {"pk": 92, "model": "taggit.taggeditem", "fields": {"tag": 13, "content_type": 11, "object_id": 32}}, {"pk": 93, "model": "taggit.taggeditem", "fields": {"tag": 66, "content_type": 11, "object_id": 32}}, {"pk": 94, "model": "taggit.taggeditem", "fields": {"tag": 67, "content_type": 11, "object_id": 32}}, {"pk": 95, "model": "taggit.taggeditem", "fields": {"tag": 68, "content_type": 11, "object_id": 32}}, {"pk": 96, "model": "taggit.taggeditem", "fields": {"tag": 41, "content_type": 11, "object_id": 33}}, {"pk": 97, "model": "taggit.taggeditem", "fields": {"tag": 69, "content_type": 11, "object_id": 33}}, {"pk": 98, "model": "taggit.taggeditem", "fields": {"tag": 29, "content_type": 11, "object_id": 34}}, {"pk": 99, "model": "taggit.taggeditem", "fields": {"tag": 70, "content_type": 11, "object_id": 34}}, {"pk": 100, "model": "taggit.taggeditem", "fields": {"tag": 71, "content_type": 11, "object_id": 34}}, {"pk": 101, "model": "taggit.taggeditem", "fields": {"tag": 72, "content_type": 11, "object_id": 34}}, {"pk": 102, "model": "taggit.taggeditem", "fields": {"tag": 67, "content_type": 11, "object_id": 35}}, {"pk": 103, "model": "taggit.taggeditem", "fields": {"tag": 36, "content_type": 11, "object_id": 35}}, {"pk": 104, "model": "taggit.taggeditem", "fields": {"tag": 73, "content_type": 11, "object_id": 35}}, {"pk": 105, "model": "taggit.taggeditem", "fields": {"tag": 21, "content_type": 11, "object_id": 36}}, {"pk": 106, "model": "taggit.taggeditem", "fields": {"tag": 74, "content_type": 11, "object_id": 36}}, {"pk": 107, "model": "taggit.taggeditem", "fields": {"tag": 75, "content_type": 11, "object_id": 37}}, {"pk": 108, "model": "taggit.taggeditem", "fields": {"tag": 28, "content_type": 11, "object_id": 37}}, {"pk": 109, "model": "taggit.taggeditem", "fields": {"tag": 22, "content_type": 11, "object_id": 38}}, {"pk": 110, "model": "taggit.taggeditem", "fields": {"tag": 23, "content_type": 11, "object_id": 38}}, {"pk": 111, "model": "taggit.taggeditem", "fields": {"tag": 13, "content_type": 11, "object_id": 38}}, {"pk": 112, "model": "taggit.taggeditem", "fields": {"tag": 76, "content_type": 11, "object_id": 39}}, {"pk": 113, "model": "taggit.taggeditem", "fields": {"tag": 29, "content_type": 11, "object_id": 39}}, {"pk": 114, "model": "taggit.taggeditem", "fields": {"tag": 77, "content_type": 11, "object_id": 39}}, {"pk": 115, "model": "taggit.taggeditem", "fields": {"tag": 21, "content_type": 11, "object_id": 40}}, {"pk": 116, "model": "taggit.taggeditem", "fields": {"tag": 64, "content_type": 11, "object_id": 40}}, {"pk": 117, "model": "taggit.taggeditem", "fields": {"tag": 78, "content_type": 11, "object_id": 41}}, {"pk": 118, "model": "taggit.taggeditem", "fields": {"tag": 79, "content_type": 11, "object_id": 41}}, {"pk": 119, "model": "taggit.taggeditem", "fields": {"tag": 80, "content_type": 11, "object_id": 41}}, {"pk": 120, "model": "taggit.taggeditem", "fields": {"tag": 81, "content_type": 11, "object_id": 41}}, {"pk": 121, "model": "taggit.taggeditem", "fields": {"tag": 82, "content_type": 11, "object_id": 41}}, {"pk": 122, "model": "taggit.taggeditem", "fields": {"tag": 83, "content_type": 11, "object_id": 42}}, {"pk": 123, "model": "taggit.taggeditem", "fields": {"tag": 77, "content_type": 11, "object_id": 42}}, {"pk": 124, "model": "taggit.taggeditem", "fields": {"tag": 13, "content_type": 11, "object_id": 43}}, {"pk": 125, "model": "taggit.taggeditem", "fields": {"tag": 84, "content_type": 11, "object_id": 43}}, {"pk": 126, "model": "taggit.taggeditem", "fields": {"tag": 85, "content_type": 11, "object_id": 43}}, {"pk": 127, "model": "taggit.taggeditem", "fields": {"tag": 86, "content_type": 11, "object_id": 44}}, {"pk": 128, "model": "taggit.taggeditem", "fields": {"tag": 84, "content_type": 11, "object_id": 44}}, {"pk": 129, "model": "taggit.taggeditem", "fields": {"tag": 65, "content_type": 11, "object_id": 44}}, {"pk": 130, "model": "taggit.taggeditem", "fields": {"tag": 77, "content_type": 11, "object_id": 45}}, {"pk": 131, "model": "taggit.taggeditem", "fields": {"tag": 87, "content_type": 11, "object_id": 45}}, {"pk": 132, "model": "taggit.taggeditem", "fields": {"tag": 88, "content_type": 11, "object_id": 45}}, {"pk": 133, "model": "taggit.taggeditem", "fields": {"tag": 89, "content_type": 11, "object_id": 45}}, {"pk": 134, "model": "taggit.taggeditem", "fields": {"tag": 36, "content_type": 11, "object_id": 46}}, {"pk": 135, "model": "taggit.taggeditem", "fields": {"tag": 40, "content_type": 11, "object_id": 46}}, {"pk": 136, "model": "taggit.taggeditem", "fields": {"tag": 90, "content_type": 11, "object_id": 47}}, {"pk": 137, "model": "taggit.taggeditem", "fields": {"tag": 67, "content_type": 11, "object_id": 47}}, {"pk": 138, "model": "taggit.taggeditem", "fields": {"tag": 81, "content_type": 11, "object_id": 47}}, {"pk": 139, "model": "taggit.taggeditem", "fields": {"tag": 77, "content_type": 11, "object_id": 48}}, {"pk": 140, "model": "taggit.taggeditem", "fields": {"tag": 91, "content_type": 11, "object_id": 48}}, {"pk": 141, "model": "taggit.taggeditem", "fields": {"tag": 72, "content_type": 11, "object_id": 48}}, {"pk": 142, "model": "taggit.taggeditem", "fields": {"tag": 36, "content_type": 11, "object_id": 49}}, {"pk": 143, "model": "taggit.taggeditem", "fields": {"tag": 13, "content_type": 11, "object_id": 49}}, {"pk": 144, "model": "taggit.taggeditem", "fields": {"tag": 86, "content_type": 11, "object_id": 49}}, {"pk": 145, "model": "taggit.taggeditem", "fields": {"tag": 85, "content_type": 11, "object_id": 49}}, {"pk": 146, "model": "taggit.taggeditem", "fields": {"tag": 91, "content_type": 11, "object_id": 50}}, {"pk": 147, "model": "taggit.taggeditem", "fields": {"tag": 92, "content_type": 11, "object_id": 50}}, {"pk": 148, "model": "taggit.taggeditem", "fields": {"tag": 93, "content_type": 11, "object_id": 50}}, {"pk": 149, "model": "taggit.taggeditem", "fields": {"tag": 41, "content_type": 11, "object_id": 51}}, {"pk": 150, "model": "taggit.taggeditem", "fields": {"tag": 3, "content_type": 11, "object_id": 51}}, {"pk": 151, "model": "taggit.taggeditem", "fields": {"tag": 67, "content_type": 11, "object_id": 51}}, {"pk": 152, "model": "taggit.taggeditem", "fields": {"tag": 66, "content_type": 11, "object_id": 51}}, {"pk": 153, "model": "taggit.taggeditem", "fields": {"tag": 94, "content_type": 11, "object_id": 51}}, {"pk": 154, "model": "taggit.taggeditem", "fields": {"tag": 95, "content_type": 11, "object_id": 52}}, {"pk": 155, "model": "taggit.taggeditem", "fields": {"tag": 96, "content_type": 11, "object_id": 52}}, {"pk": 156, "model": "taggit.taggeditem", "fields": {"tag": 97, "content_type": 11, "object_id": 52}}, {"pk": 157, "model": "taggit.taggeditem", "fields": {"tag": 98, "content_type": 11, "object_id": 53}}, {"pk": 158, "model": "taggit.taggeditem", "fields": {"tag": 99, "content_type": 11, "object_id": 53}}, {"pk": 159, "model": "taggit.taggeditem", "fields": {"tag": 100, "content_type": 11, "object_id": 53}}, {"pk": 160, "model": "taggit.taggeditem", "fields": {"tag": 101, "content_type": 11, "object_id": 53}}, {"pk": 161, "model": "taggit.taggeditem", "fields": {"tag": 28, "content_type": 11, "object_id": 54}}, {"pk": 162, "model": "taggit.taggeditem", "fields": {"tag": 102, "content_type": 11, "object_id": 54}}, {"pk": 163, "model": "taggit.taggeditem", "fields": {"tag": 103, "content_type": 11, "object_id": 54}}, {"pk": 164, "model": "taggit.taggeditem", "fields": {"tag": 104, "content_type": 11, "object_id": 55}}, {"pk": 165, "model": "taggit.taggeditem", "fields": {"tag": 105, "content_type": 11, "object_id": 55}}, {"pk": 166, "model": "taggit.taggeditem", "fields": {"tag": 106, "content_type": 11, "object_id": 55}}, {"pk": 167, "model": "taggit.taggeditem", "fields": {"tag": 107, "content_type": 11, "object_id": 55}}, {"pk": 168, "model": "taggit.taggeditem", "fields": {"tag": 21, "content_type": 11, "object_id": 55}}, {"pk": 169, "model": "taggit.taggeditem", "fields": {"tag": 13, "content_type": 11, "object_id": 56}}, {"pk": 170, "model": "taggit.taggeditem", "fields": {"tag": 66, "content_type": 11, "object_id": 56}}, {"pk": 171, "model": "taggit.taggeditem", "fields": {"tag": 108, "content_type": 11, "object_id": 56}}, {"pk": 172, "model": "taggit.taggeditem", "fields": {"tag": 109, "content_type": 11, "object_id": 56}}, {"pk": 173, "model": "taggit.taggeditem", "fields": {"tag": 110, "content_type": 11, "object_id": 56}}, {"pk": 174, "model": "taggit.taggeditem", "fields": {"tag": 8, "content_type": 11, "object_id": 57}}, {"pk": 175, "model": "taggit.taggeditem", "fields": {"tag": 96, "content_type": 11, "object_id": 57}}, {"pk": 176, "model": "taggit.taggeditem", "fields": {"tag": 111, "content_type": 11, "object_id": 58}}, {"pk": 177, "model": "taggit.taggeditem", "fields": {"tag": 112, "content_type": 11, "object_id": 58}}, {"pk": 178, "model": "taggit.taggeditem", "fields": {"tag": 29, "content_type": 11, "object_id": 58}}, {"pk": 179, "model": "taggit.taggeditem", "fields": {"tag": 113, "content_type": 11, "object_id": 58}}, {"pk": 180, "model": "taggit.taggeditem", "fields": {"tag": 33, "content_type": 11, "object_id": 59}}, {"pk": 181, "model": "taggit.taggeditem", "fields": {"tag": 36, "content_type": 11, "object_id": 59}}, {"pk": 182, "model": "taggit.taggeditem", "fields": {"tag": 33, "content_type": 11, "object_id": 60}}, {"pk": 183, "model": "taggit.taggeditem", "fields": {"tag": 114, "content_type": 11, "object_id": 60}}, {"pk": 184, "model": "taggit.taggeditem", "fields": {"tag": 109, "content_type": 11, "object_id": 60}}, {"pk": 185, "model": "taggit.taggeditem", "fields": {"tag": 34, "content_type": 11, "object_id": 60}}, {"pk": 186, "model": "taggit.taggeditem", "fields": {"tag": 115, "content_type": 11, "object_id": 61}}, {"pk": 187, "model": "taggit.taggeditem", "fields": {"tag": 116, "content_type": 11, "object_id": 61}}, {"pk": 188, "model": "taggit.taggeditem", "fields": {"tag": 117, "content_type": 11, "object_id": 61}}, {"pk": 189, "model": "taggit.taggeditem", "fields": {"tag": 118, "content_type": 11, "object_id": 61}}, {"pk": 190, "model": "taggit.taggeditem", "fields": {"tag": 119, "content_type": 11, "object_id": 61}}, {"pk": 191, "model": "taggit.taggeditem", "fields": {"tag": 120, "content_type": 11, "object_id": 62}}, {"pk": 192, "model": "taggit.taggeditem", "fields": {"tag": 121, "content_type": 11, "object_id": 62}}, {"pk": 193, "model": "taggit.taggeditem", "fields": {"tag": 106, "content_type": 11, "object_id": 62}}, {"pk": 194, "model": "taggit.taggeditem", "fields": {"tag": 122, "content_type": 11, "object_id": 62}}, {"pk": 195, "model": "taggit.taggeditem", "fields": {"tag": 21, "content_type": 11, "object_id": 63}}, {"pk": 196, "model": "taggit.taggeditem", "fields": {"tag": 65, "content_type": 11, "object_id": 63}}, {"pk": 197, "model": "taggit.taggeditem", "fields": {"tag": 59, "content_type": 11, "object_id": 64}}, {"pk": 198, "model": "taggit.taggeditem", "fields": {"tag": 16, "content_type": 11, "object_id": 64}}, {"pk": 199, "model": "taggit.taggeditem", "fields": {"tag": 19, "content_type": 11, "object_id": 64}}, {"pk": 200, "model": "taggit.taggeditem", "fields": {"tag": 123, "content_type": 11, "object_id": 65}}, {"pk": 201, "model": "taggit.taggeditem", "fields": {"tag": 29, "content_type": 11, "object_id": 65}}, {"pk": 202, "model": "taggit.taggeditem", "fields": {"tag": 93, "content_type": 11, "object_id": 65}}, {"pk": 203, "model": "taggit.taggeditem", "fields": {"tag": 124, "content_type": 11, "object_id": 65}}, {"pk": 204, "model": "taggit.taggeditem", "fields": {"tag": 84, "content_type": 11, "object_id": 66}}, {"pk": 205, "model": "taggit.taggeditem", "fields": {"tag": 125, "content_type": 11, "object_id": 66}}, {"pk": 206, "model": "taggit.taggeditem", "fields": {"tag": 13, "content_type": 11, "object_id": 66}}, {"pk": 207, "model": "taggit.taggeditem", "fields": {"tag": 41, "content_type": 11, "object_id": 67}}, {"pk": 208, "model": "taggit.taggeditem", "fields": {"tag": 3, "content_type": 11, "object_id": 67}}, {"pk": 209, "model": "taggit.taggeditem", "fields": {"tag": 51, "content_type": 11, "object_id": 67}}, {"pk": 210, "model": "taggit.taggeditem", "fields": {"tag": 112, "content_type": 11, "object_id": 68}}, {"pk": 211, "model": "taggit.taggeditem", "fields": {"tag": 29, "content_type": 11, "object_id": 68}}, {"pk": 212, "model": "taggit.taggeditem", "fields": {"tag": 33, "content_type": 11, "object_id": 69}}, {"pk": 213, "model": "taggit.taggeditem", "fields": {"tag": 126, "content_type": 11, "object_id": 69}}, {"pk": 214, "model": "taggit.taggeditem", "fields": {"tag": 68, "content_type": 11, "object_id": 69}}, {"pk": 215, "model": "taggit.taggeditem", "fields": {"tag": 127, "content_type": 11, "object_id": 69}}, {"pk": 216, "model": "taggit.taggeditem", "fields": {"tag": 41, "content_type": 11, "object_id": 70}}, {"pk": 217, "model": "taggit.taggeditem", "fields": {"tag": 128, "content_type": 11, "object_id": 70}}, {"pk": 218, "model": "taggit.taggeditem", "fields": {"tag": 129, "content_type": 11, "object_id": 70}}, {"pk": 219, "model": "taggit.taggeditem", "fields": {"tag": 13, "content_type": 11, "object_id": 70}}, {"pk": 220, "model": "taggit.taggeditem", "fields": {"tag": 130, "content_type": 11, "object_id": 71}}, {"pk": 221, "model": "taggit.taggeditem", "fields": {"tag": 112, "content_type": 11, "object_id": 71}}]